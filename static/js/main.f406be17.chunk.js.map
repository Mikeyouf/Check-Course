{"version":3,"sources":["img/prochainement2.png","firebase.js","Components/ItemList.js","Components/MyLists.js","Components/Home.js","Components/Loading.js","Components/EnCourseList.js","Components/EnCourse.js","Components/Menu.js","Components/ProfilUser.js","Components/HeaderMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ItemList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","liste","_this$props","currentTitre","data","inverseProduit","arrayData","keys","map","item","category","categoryItem","push","reverse","elt","id","react_default","a","createElement","list","key","concat","titreCat","header","row","type","justify","align","col","xs","md","lg","className","onClick","getCurrentCategory","name","deleteCategory","icon","style","color","fontSize","bordered","dataSource","categoryItems","renderItem","Item","checked","span","sm","isChecked","tooltip","placement","title","mouseEnterDelay","es_button","background","block","delete","border","toggleComment","comment","badge","status","state","_this2","_this$props2","largeur","visible","drawerWidth","Fragment","drawer","width","onClose","e","modalContent","Component","MyLists","help","notification","open","message","description","duration","textAlign","isCategory","padding","onSubmit","createNewCategory","createNewItem","es_switch","checkedChildren","unCheckedChildren","onChange","toggleSwitch","placeholder","maxLength","Components_ItemList","addComment","titre","titreListe","closeComment","indexItem","currentCategory","numChildCategory","marginRight","goHome","Home","listeDeBase","size","choixListe","deleteList","clicked","Components_MyLists","returnToApp","isToggleSwitchType","toggleSwitchType","length","addNewListTitre","Loading","react_loading_default","height","EnCourseList","checkCurrentCategory","createNewItemLastMinute","gutter","modalContentCourse","EnCourse","Components_EnCourseList","Menu","margin","choixComponent","ProfilUser","user","userUid","newUserUid","choixUserUid","linkName","marginBottom","toggleSwitchHelp","toggleSwitchInverseProduit","choisirUserUid","changeUserUid","valideChangeUserUid","HeaderMenu","menu","handleClick","selectedKeys","choixComponentState","mode","Header","Layout","Footer","Content","Meta","Card","TextArea","Input","Option","Select","App","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","animFormButton","button","classList","add","setTimeout","remove","animFormElt","getDataBase","userId","currentUser","ref","on","snapshot","listItem","val","setState","currentUserUid","followers","loading","set","userName","getOtherDataBase","curentUser","handleResize","hauteur","window","innerHeight","innerWidth","updates","update","event","target","value","document","querySelector","parentElement","newData","product","objectSpread","index","forEach","childSnapshot","itemKey","orderByChild","equalTo","collapse","getElementById","onChangeComment","newComment","items","onChangeCount","newCount","count","addCount","onChangeTypeCount","newTypeCount","typeCount","_this$state","slider","min","max","input_number","marginLeft","es_select","defaultValue","autosize","minRows","maxRows","rows","cols","autoFocus","autoComplete","marginTop","_this$state2","image","skeleton","paragraph","alt","src","prochainement","card","paddingTop","cover","avatar","backgroundColor","preventDefault","show","formInput","todoFormButton","prevState","success","timestamp","Date","now","todoFormInput","toConsumableArray","console","log","lastMinuteItem","hasTitreCat","hideText","clickedText","deconnexion","signOut","renderChoiseConponent","Components_EnCourse","Components_Home","Components_ProfilUser","config","isSignedIn","bind","assertThisInitialized","addEventListener","unregisterAuthObserver","onAuthStateChanged","displayName","uid","removeEventListener","_this3","contentElt","childElementCount","indexCat","Components_Loading","layout","Components_HeaderMenu","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f406be17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/prochainement2.cbd80974.png\";","export default {\r\n    apiKey: \"AIzaSyASNdLHf9itHbMfni5KLun3kcA57LFgkFg\",\r\n    authDomain: \"check-list-course.firebaseapp.com\",\r\n    databaseURL: \"https://check-list-course.firebaseio.com\",\r\n    projectId: \"check-list-course\",\r\n    storageBucket: \"check-list-course.appspot.com\",\r\n    messagingSenderId: \"873680903792\"\r\n}","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport { List, Row, Col, Icon, Tooltip, Button, Badge, Drawer } from 'antd';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n         }\r\n    }\r\n    liste = () => {\r\n        const { currentTitre, data, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        return (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                        <Col xs={18} md={20}  lg={22} className='titreCat' onClick={() => this.props.getCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                        <Col xs={3} md={2} lg={1}>\r\n                            <input type='checkbox' id={elt.titreCat}/>\r\n                        </Col>\r\n                        <Col xs={3} md={2} lg={1}>\r\n                            <button \r\n                            name=\"trash\" \r\n                            className=\"trash\" \r\n                            onClick={() => this.props.deleteCategory(elt, id)}>\r\n                                <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} >\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    // className={item.checked ? '.ant-list-bordered .ant-list-item flip' : '.ant-list-bordered .ant-list-item'} \r\n                                    key={item.key}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={16} sm={18} md={18} lg={20} onClick={() => this.props.isChecked(item, id)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Supprimer' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                style={{ background: 'transparent' }}\r\n                                                name=\"trash\" \r\n                                                className=\"trash\"\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.delete(item, id)}>\r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Commentaire' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                >\r\n                                                {\r\n                                                    item.comment === '' ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                    </List.Item>\r\n                    )}\r\n            />\r\n    \r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible } = this.props;\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        return ( \r\n            <>\r\n            {this.liste()}\r\n                <Drawer\r\n                    // title='commentaire'\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={this.props.visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContent(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, notification, Switch } from 'antd';\r\n\r\nimport ItemList from './ItemList';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Ajouter une catégorie',\r\n        description: \"Pour ajouter une catégorie, cliquez sur \\\"Ajouter une catégorie\\\" et écrivez le nom que vous désirez, par exemple \\\"Boissons\\\". Pour finaliser, cliquez sur le +.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Ajouter un produit',\r\n                description: \"Pour ajouter un produit, cliquez sur \\\"Ajouter un produit\\\" et écrivez le nom que vous désirez, par exemple \\\"Eau\\\". Pour finaliser, cliquez sur le +. Vous pouvez ajouter autant de produits que vous le désirez.\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                  onClose: () => {\r\n                    notification.open({\r\n                        message: 'Astuce!',\r\n                        description: \"Pour ajouter un produit dans une catégorie existente, cliquez sur le nom de la catégorie voulue, ensuite il vous suffit d'ajouter un produit.\",\r\n                        duration: 0,\r\n                        style: {\r\n                            textAlign: 'justify'\r\n                          }\r\n                      });\r\n                  }\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass MyLists extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const isCategory = this.props.isCategory;\r\n        return ( \r\n            \r\n            <>\r\n                <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{this.props.currentTitre}</h3>\r\n                </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                        <form className='form form-titre' onSubmit={isCategory === true ? e => this.props.createNewCategory(e) : e => this.props.createNewItem(e)}>\r\n                            <Switch checkedChildren=\"C\" unCheckedChildren=\"P\" checked={isCategory === true ? true : false}  onChange={this.props.toggleSwitch} id='switchButton'/>\r\n                            <input type='text' placeholder={isCategory === true ? 'Ajouter une catégorie' : 'Ajouter un produit'} maxLength={40} />\r\n                            <button type='submit' id='buttonSubmit'>+</button>\r\n                        </form>\r\n                    </Col>\r\n                    <Col span={24}>  \r\n                        <ItemList\r\n                            data={this.props.data}\r\n                            isChecked={this.props.isChecked}\r\n                            delete={this.props.delete}\r\n                            toggleComment={this.props.toggleComment}\r\n                            addComment={this.props.addComment}\r\n                            titre={this.props.titreListe}\r\n                            closeComment={this.props.closeComment}\r\n                            indexItem={this.props.indexItem}\r\n                            currentCategory={this.props.currentCategory}\r\n                            numChildCategory={this.props.numChildCategory}\r\n                            deleteCategory={this.props.deleteCategory}\r\n                            currentTitre={this.props.currentTitre}\r\n                            getCurrentCategory={this.props.getCurrentCategory}\r\n                            inverseProduit={this.props.inverseProduit}\r\n                            visible={this.props.visible}\r\n                            onClose={this.props.onClose}\r\n                            item={this.props.item}\r\n                            modalContent={this.props.modalContent}\r\n                            largeur={this.props.largeur}\r\n                        />\r\n                    </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyLists;","import React, { Component } from 'react';\r\n\r\nimport MyLists from './MyLists';\r\n\r\nimport { Button, Icon, Col, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Créer une liste de course',\r\n        description: \"Pour créer une liste, il vous suffit simplement d'écrire son nom dans la case \\\"ajouter une liste\\\" et de cliquer sur le +. Ensuite cliquez sur le nom de votre liste qui vient d'apparaitre en dessous. Vous pouvez en créer maximum 3.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        // onClose: () => {\r\n        //   alert('clicked');\r\n        // },\r\n      });\r\n  };\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const indexItem = this.props.indexItem;\r\n        const listeDeBase = this.props.listeDeBase;\r\n        return listeDeBase.map((item, id) => \r\n        item !== 'user'?\r\n        <div key={id}>  \r\n            <Col xs={{ span: 22 }} md={{ span: 23 }} lg={{ span: 23 }} key={`elt-${item}`}>\r\n                <Button \r\n                    size='large' \r\n                    block \r\n                    type=\"primary\"\r\n                    id={item}\r\n                    onClick={e => this.props.choixListe(e)}\r\n                    className={indexItem === `elt-${item}` ? 'item-titre message-leave': 'item-titre'}\r\n                    >\r\n                        {item}\r\n                </Button>\r\n            </Col>\r\n            <Col xs={{ span: 2 }} md={{ span: 1 }} lg={{ span: 1 }} key={`delete-${id}`}>\r\n                <Button \r\n                    size='large' \r\n                    name=\"trash\" \r\n                    type=\"primary\"\r\n                    block \r\n                    className=\"trash\" \r\n                    onClick={() => this.props.deleteList(item)}\r\n                >  \r\n                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                </Button>\r\n            </Col>\r\n        </div>\r\n        : null\r\n        )};\r\n    render() {\r\n        const listeDeBase = this.props.listeDeBase;\r\n        return (\r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    { \r\n                        listeDeBase.length >= 4 ?\r\n                        null\r\n                        :\r\n                        <form className='form form-titre' onSubmit={e => this.props.addNewListTitre(e)}>\r\n                            <input type='text' id='form-input' placeholder='Ajouter une liste' maxLength={30}/>\r\n                            <button type='submit' id='myButtonSubmit'>+</button>\r\n                        </form>\r\n                    }\r\n                </Col>\r\n                    <>\r\n                        {this.liste()}\r\n                    </>\r\n                    <Col span={6} style={{ marginRight: '1em' }}>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n                <MyLists\r\n                    currentTitre={this.props.currentTitre}\r\n                    createNewItem={this.props.createNewItem}\r\n                    data={this.props.data}\r\n                    isChecked={this.props.isChecked}\r\n                    delete={this.props.delete}\r\n                    toggleComment={this.props.toggleComment}\r\n                    addComment={this.props.addComment}\r\n                    titreListe={this.props.titreListe}\r\n                    returnToApp={this.props.returnToApp}\r\n                    closeComment={this.props.closeComment}\r\n                    goHome={this.props.goHome}\r\n                    indexItem={this.props.indexItem}\r\n                    createNewCategory={this.props.createNewCategory}\r\n                    isCategory={this.props.isCategory}\r\n                    toggleSwitch={this.props.toggleSwitch}\r\n                    numChildCategory={this.props.numChildCategory}\r\n                    deleteCategory={this.props.deleteCategory}\r\n                    getCurrentCategory={this.props.getCurrentCategory}\r\n                    isToggleSwitchType={this.props.isToggleSwitchType}\r\n                    toggleSwitchType={this.props.toggleSwitchType}\r\n                    help={this.props.help}\r\n                    inverseProduit={this.props.inverseProduit}\r\n                    visible={this.props.visible}\r\n                    onClose={this.props.onClose}\r\n                    item={this.props.item}\r\n                    modalContent={this.props.modalContent}\r\n                    largeur={this.props.largeur}\r\n                />\r\n            </Col>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => (\r\n    <ReactLoading \r\n    type=\"cylon\" \r\n    color=\"#078073\" \r\n    className=\"load\"\r\n    id=\"load\"\r\n    height={200}\r\n    width={200}\r\n    />\r\n)\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, List, Row, Tooltip, Badge, notification, Drawer  } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Astuce',\r\n        description: \"Lorsque vous faites vos courses, il suffit de cliquer sur un produit pour qu'il soit \\\"barré\\\" et \\\"grisé\\\".\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Astuce',\r\n                description: \"Vous ouvez rajouter un produit de dernière minute en l'ajoutant dans la case \\\"Entrez un produit\\\".\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n              });\r\n            }\r\n      });\r\n  };\r\n\r\nclass EnCourseList extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const { currentTitre, data, inverseProduit, largeur } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        \r\n        return (arrayData || []).map((elt, id) => \r\n        <Col span={largeur > 720 ? 12 : 24}  key={`list-${id}`}>\r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle' style={{height: '2.5em'}}>\r\n                        <Col span={24} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} >\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={item.key}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={20} sm={21} md={21} lg={22} onClick={() => this.props.isChecked(item, id)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Commentaire' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                    </List.Item>\r\n                    \r\n                    )}\r\n            />\r\n            </Col>\r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible } = this.props;\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        return ( \r\n            <>\r\n                <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{this.props.currentTitre}</h3>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    <form className='form form-titre enCourse-form-titre' onSubmit={this.props.createNewItemLastMinute}>\r\n                        <input type='text' placeholder='Produit de dernière minute' maxLength={40} />\r\n                        <button type='submit' id='buttonSubmit'>+</button>\r\n                    </form>\r\n                </Col>\r\n                <Row gutter={16}> \r\n                    {this.liste()}\r\n                </Row>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={this.props.visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContentCourse(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseList;","import React, { Component } from 'react';\r\nimport { Button, Icon, Col } from 'antd';\r\n\r\n// import MyLists from './MyLists';\r\nimport EnCourseList from './EnCourseList';\r\n\r\nclass EnCourse extends Component {\r\n    liste = () => {\r\n        const listeDeBase = this.props.listeDeBase;\r\n        return listeDeBase.map((item, id) =>\r\n            item !== 'user'?\r\n            <Button \r\n                    size='large' \r\n                    block \r\n                    type=\"primary\" \r\n                    key={id}\r\n                    id={item}\r\n                    onClick={e => this.props.choixListe(e)}\r\n                    className='item-button'\r\n                    >\r\n                {item}\r\n            </Button>\r\n            :\r\n            null\r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                </>\r\n                :\r\n                <Col span={24}>\r\n                    <EnCourseList\r\n                        currentTitre={this.props.currentTitre}\r\n                        createNewItemLastMinute={this.props.createNewItemLastMinute}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titreListe={this.props.titreListe}\r\n                        returnToApp={this.props.returnToApp}\r\n                        closeComment={this.props.closeComment}\r\n                        goHome={this.props.goHome}\r\n                        indexItem={this.props.indexItem}\r\n                        checkCurrentCategory={this.props.checkCurrentCategory}\r\n                        help={this.props.help}\r\n                        inverseProduit={this.props.inverseProduit}\r\n                        visible={this.props.visible}\r\n                        onClose={this.props.onClose}\r\n                        item={this.props.item}\r\n                        largeur={this.props.largeur}\r\n                        modalContentCourse={this.props.modalContentCourse}\r\n                    />\r\n                </Col>\r\n            }\r\n            \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourse;","import React, { Component } from 'react';\r\n\r\nimport '../NewApp.css';\r\n\r\nimport { Button, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Liste de course interactive',\r\n        description: \"Bienvenue sur votre application de liste de course. Pour commencer, veuillez cliquer sur \\\"créer une liste\\\". Si vous avez déjà créé une liste, cliquez sur \\\"En course\\\" lorsque vous faites vos course.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          }\r\n      });\r\n  };\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                        <Button \r\n                            style={{ margin : '1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='enCourse'\r\n                            onClick={this.props.choixComponent}\r\n                            >Faire ses courses\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='mesListes'\r\n                            onClick={this.props.choixComponent}\r\n                        >Créer une liste\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\" \r\n                            className='item-button'\r\n                            name='monProfil'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mon profil\r\n                        </Button>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Row, Col, notification, Switch } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Votre profil',\r\n        description: \"Bientôt vous aurez la possibilité de modifier votre profil et bien plus encore!\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Se connecter à un autre profil',\r\n                description: \"Il vous suffit de recopier l'identifiant de la liste que vous souhaitez rejoindre et de valider. Ensuite cliquez sur cette liste pour la rejoindre!\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                // onClose: () => {\r\n                //   alert('clicked');\r\n                // },\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass ProfilUser extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const { user, help, inverseProduit, userUid, newUserUid, choixUserUid, linkName } = this.props;\r\n        return ( \r\n            <Col span={24}>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col  xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                    <h2>Bienvenue sur votre profil {user}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Aide : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={help === true ? true : false} onChange={this.props.toggleSwitchHelp} id='switchButtonHelp'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Inverser l'ordre des produits : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={inverseProduit === true ? true : false} onChange={this.props.toggleSwitchInverseProduit} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Votre identifiant : </b>{userUid}</span>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                        <Button block type={choixUserUid ? \"primary\" : \"default\"} name={userUid}  onClick={!choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                        {choixUserUid ? <span>Votre liste</span>: <span>Rejoindre votre liste</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <Button block type={choixUserUid ? \"default\" : \"primary\"} name={newUserUid} onClick={choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                            {choixUserUid ? <span>Rejoindre la liste de {linkName}</span>: <span>Liste de {linkName}</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Ajouter un identifiant : </b></span>\r\n                        <input type='text' placeholder='Entrez le nouvel identifiant' onChange={this.props.changeUserUid} />\r\n                        <Button type=\"primary\" onClick={this.props.valideChangeUserUid} className='changeUid'>\r\n                            <Icon type=\"check\" />Valider\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row type='flex' justify='left'>\r\n                    <Col span={6}>\r\n                    <div className='button-anth'>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilUser;","import React, { Component } from 'react';\r\n\r\nimport { Menu, Icon } from 'antd';\r\n\r\nclass HeaderMenu extends Component {\r\n    render() { \r\n        return ( \r\n            <Menu\r\n            onClick={this.props.handleClick}\r\n            selectedKeys={[this.props.choixComponentState]}\r\n            mode=\"horizontal\"\r\n          >\r\n            <Menu.Item key=\"menu\">\r\n                <Icon type=\"home\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"mesListes\">\r\n                <Icon type=\"ordered-list\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"enCourse\">\r\n                <Icon type=\"shopping\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"monProfil\">\r\n                <Icon type=\"user\" />\r\n            </Menu.Item>\r\n          </Menu>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HeaderMenu;","import React, { Component } from 'react';\n// import './App.css';\nimport './NewApp.css';\nimport 'antd/dist/antd.css';\nimport './animations.css';\n\nimport * as firebase from 'firebase';\nimport config from './firebase';\n\n//ANT design\nimport { \n  Row, Col, Layout, Icon, message, Input, Slider, InputNumber, Select, Card, Avatar, Skeleton \n} from 'antd';\n\nimport Home from './Components/Home';\nimport Loading from './Components/Loading';\nimport EnCourse from './Components/EnCourse';\nimport Menu from './Components/Menu';\nimport ProfilUser from './Components/ProfilUser';\nimport HeaderMenu from './Components/HeaderMenu';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport prochainement from './img/prochainement2.png';\n\nconst {\n  Header, Footer, Content,\n} = Layout;\nconst { Meta } = Card;\n\nconst {TextArea} = Input;\n// const InputGroup = Input.Group;\nconst Option = Select.Option;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    firebase.initializeApp(config);\n        this.state = {\n            listeDeBase: [],\n            data: [],\n            item: null,\n            titreListe: [],\n            currentTitre: '',\n            choixComponent: 'menu',\n            currentCategory: '' || 'Ma super catégorie',\n            numChildCategory: 0,\n            isSignedIn: false,\n            clicked: false, \n            loading: true,\n            goHome: false,\n            isCategory: true,\n            clickedText : false,\n            indexItem: null,\n            isToggleSwitchType: false,\n            help: true,\n            inverseProduit: true,\n            userId: '' || 'Mikael',\n            userUid: '',\n            newUserUid: '',\n            choixUserUid: true,\n            currentUserUid: '',\n            linkName: '',\n            followers: [],\n            count: 0,\n            typeCount: 'unité',\n            newComment: '',\n            visible: false, //affiche le drawer\n            largeur: 0,\n            hauteur: 0,\n            lastMinuteItem: false //verifie si un item a ete ajoute a la derniere minute\n        };\n      this.delete = this.delete.bind(this);\n      this.deleteCategory = this.deleteCategory.bind(this);\n      this.createNewItem = this.createNewItem.bind(this);\n      this.addNewListTitre = this.addNewListTitre.bind(this);\n      this.deconnexion = this.deconnexion.bind(this);\n}\n\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\ncomponentDidMount() {\n  const loading = this.state.loading;\n  if(loading) {\n    this.getDataBase();\n  }\n  //détection du changement de taille d'écran\n  this.handleResize();\n  window.addEventListener('resize', this.handleResize);\n\n  this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        if(user) {\n          this.setState({\n            isSignedIn: !!user, \n            userId: user.displayName,\n            userUid: user.uid\n          });\n        } else {\n          return null\n        }\n      }\n  );\n  // console.log(this.unregisterAuthObserver());\n  \n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('resize', this.handleResize); //on enlève l'évènement qui regarde la taille de la fenêtre\n  this.unregisterAuthObserver();\n}\n\n  animFormButton = (button) => {\n    button.classList.add('formButton-active');\n    setTimeout(() => {\n        button.classList.remove('formButton-active');\n    }, 500);\n  }\n\n  animFormElt = (elt) => {\n    elt.classList.add('message-enter');\n  }\n\n  getDataBase = () => {\n    setTimeout(() => {\n    // alert('getDataBase est appelé!');\n    const user = this.state.userId;\n    const choixUserUid = this.state.choixUserUid;\n    const userUid = this.state.userUid;\n    const newUserUid = this.state.newUserUid;\n    const currentUser = choixUserUid ? userUid : newUserUid;\n    const ref = firebase.database().ref(`${currentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${userUid}/user/`).on('value', snapshot => {\n              this.setState({ \n                help: snapshot.val().help,\n                inverseProduit: snapshot.val().inverseProduit,\n                userUid: snapshot.val().userUid,\n                newUserUid: snapshot.val().newUserUid,\n                choixUserUid: snapshot.val().choixUserUid,\n                currentUserUid: snapshot.val().choixUserUid === true ? snapshot.val().userUid : snapshot.val().newUserUid,\n                linkName: snapshot.val().linkName,\n                followers: snapshot.val().followers\n               });\n               if(snapshot.val().choixUserUid) {\n                firebase.database().ref(`${currentUser}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               } else {\n                const newUserUid = snapshot.val().newUserUid;\n                firebase.database().ref(`${newUserUid}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               }\n            });\n            \n            } else {\n              firebase.database().ref(`${userUid}`).set({\n                user: {\n                  userName: user,\n                  userUid: userUid,\n                  newUserUid: '',\n                  help: true,\n                  inverseProduit: true,\n                  choixUserUid: choixUserUid,\n                  linkName: '',\n                  followers: []\n                }\n              });\n              this.setState({\n                loading: false\n            });\n          }\n        });\n      }, 2000);\n  }\n\n  //charger la database du compte sélectionné\n  getOtherDataBase = (linkName) => {\n    const curentUser = this.state.currentUserUid;\n    const user = this.state.userId;\n    const ref = firebase.database().ref(`${curentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${curentUser}/user`).on('value', snapshot => {\n              this.setState({ \n                linkName: snapshot.val().userName === user ? linkName : snapshot.val().userName  //probleme quand retour sur user d'origine\n               });\n            });\n            firebase.database().ref(`${curentUser}`).on('value', snapshot => {\n              Object.keys(snapshot.val()).map(item =>\n                listItem.push(item)\n              );\n                this.setState({\n                  listeDeBase: listItem,\n                  data: snapshot.val(),\n                  loading: false\n                  });\n              });\n            }\n        });\n        \n  }\n\n  //détecter la taille de la fenêtre\n  handleResize = () => this.setState({\n    hauteur: window.innerHeight,\n    largeur: window.innerWidth\n  });\n\n  // on ou off de l'aide\n  toggleSwitchHelp = (checked) => {\n    const user = this.state.userUid;\n    const help = this.state.help;\n    this.setState({ help : checked === true ? false : true });\n    let updates = {};\n    updates[`${user}/user/help`] = !help;\n    return firebase.database().ref().update(updates);\n  }\n\n  // on ou off pour inverser l'ordre des produits\n  toggleSwitchInverseProduit = (checked) => {\n    const user = this.state.userUid;\n    const inverseProduit = this.state.inverseProduit;\n    this.setState({ inverseProduit : checked === true ? true : false });\n    let updates = {};\n    updates[`${user}/user/inverseProduit`] = !inverseProduit;\n    return firebase.database().ref().update(updates);\n  }\n\n  // changer l'uid pour rejoindre une liste\n  changeUserUid = (event) => {\n    const newUserUid = event.target.value;\n    this.setState({ newUserUid });\n  }\n\n  //valider le changement de l'uid\n  valideChangeUserUid = () => {\n    const newUserUid = this.state.newUserUid;\n    const user = this.state.userUid;\n    const userId = this.state.userId;\n    const followers = [];\n    //on rajoute le nom du followers\n    followers.push(userId);\n    let updates = {};\n    firebase.database().ref(`${newUserUid}/user/userName`).on('value', snapshot => {\n      this.setState({ \n        linkName: snapshot.val(),\n        followers\n      });\n      updates[`${user}/user/linkName`] = snapshot.val();\n      firebase.database().ref().update(updates);\n\n    });\n    updates[`${user}/user/newUserUid`] = newUserUid;\n    firebase.database().ref().update(updates);\n\n    // console.log(followers);\n    updates[`${newUserUid}/user/followers`] = followers;\n    firebase.database().ref().update(updates);\n  }\n\n  choisirUserUid = (event) => {\n    const choixUserUid = this.state.choixUserUid;\n    const user = this.state.userUid;\n    const linkName = this.state.linkName;\n    // console.log( 'choisir la db de', linkName);\n    this.setState({ \n      choixUserUid: !choixUserUid,\n      currentUserUid: event.target.name\n    });\n\n    const choixDB = !choixUserUid;\n    if(choixDB) {\n      setTimeout(() => {\n        this.getDataBase();\n      }, 2000);\n    } else {\n      setTimeout(() => {\n        this.getOtherDataBase(linkName);\n      }, 2000);\n    }\n    \n\n    let updates = {};\n    updates[`${user}/user/choixUserUid`] = !choixUserUid;\n    firebase.database().ref().update(updates);\n  }\n\n  // Regarde si un produit est checked en mode collapse\n  isChecked = (item, id) => {\n    const user = this.state.currentUserUid;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    // console.log(collapse);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    // console.log(currentCategory);\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{checked : true} } : product));\n    item.checked = !item.checked;\n\n    this.setState({ data: newData });\n    // A ESSAYER POUR METTRE A JOUR LE STATE\n    // this.setState(state => {\n    //   const data = state.data.map((item, j) => {\n    //     if (j === id) {\n    //       return item.checked = !item.checked;\n    //     } else {\n    //       return item;\n    //     }\n    //   });\n\n    //   return {\n    //     data,\n    //   };\n    // });\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n}\n  // Delete un produit\n  delete(item, id){\n    const user = this.state.currentUserUid;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const contentElt = collapse.parentElement;\n    const currentTitre = this.state.currentTitre;\n    \n    this.setState({ \n      indexItem: `elt-${item.item}`,\n      numChildCategory: contentElt.childElementCount\n  });\n  //A ESSAYER POUR METTRE A JOUR LE STATE\n  // this.setState(state => {\n  //   const data = Object.keys(state.data).filter(item => item.id !== id);\n\n  //   return {\n  //     data,\n  //   };\n  // });\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    if(contentElt.childElementCount === 1) {\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n        const indexCat = snapshot.key;\n          setTimeout(() => {\n            firebase.database().ref(`${user}/${currentTitre}/category/${indexCat}`).remove();\n          }, 400);\n      });\n      setTimeout(() => {\n        this.setState({ indexItem: null});\n      }, 410);\n    } else {\n        firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n          snapshot.forEach(function(childSnapshot){\n            setTimeout(() => {\n              const indexItem = childSnapshot.key;\n              firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems/${indexItem}`).remove();\n            }, 400);\n          });\n        });\n        setTimeout(() => {\n          this.setState({ indexItem: null});\n        }, 410);\n    }\n      \n      \n  }\n\n  // delete une catégorie\n  deleteCategory = (item, id) => {\n    const user = this.state.currentUserUid;\n    // console.log(item.titreCat);\n    const collapse = document.getElementById(item.titreCat);\n    // console.log(collapse);\n    const currentTitre = this.state.currentTitre;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === collapse.id ? childSnapshot.key : null;\n      });\n    });\n    // console.log(index);\n\n    firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').on('value', snapshot => {\n        setTimeout(() => {\n          firebase.database().ref(`${user}/${currentTitre}/category/${index}`).remove();\n        }, 400);\n    });\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n  }\n\n  deleteList = (item) => {\n    const user = this.state.currentUserUid;\n    this.setState({ indexItem: `elt-${item}`});\n\n    setTimeout(() => {\n      firebase.database().ref(`${user}/${item}`).remove();\n    }, 400);\n\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n    \n  }\n\n  onChangeComment = (event, item) => {\n    const newComment = event.target.value;\n    const currentTitre = this.state.currentTitre;\n    const data = this.state.data;\n    Object.keys(data)\n      .map(elt => elt === currentTitre ? Object.keys(data[elt])\n        .map(product => Object.keys(data[elt][product])\n          .map(items => Object.keys(data[elt][product][items].categoryItems)\n            .map(keys => data[elt][product][items].categoryItems[keys].key === item.key ?\n              data[elt][product][items].categoryItems[keys].comment = newComment\n              :\n              keys\n              )\n            )\n              ) : null);\n              \n    this.setState({\n      data,\n      item,\n      newComment\n    });\n  }\n\n  onChangeCount = (value, item) => {\n    const newCount = value;\n    const currentTitre = this.state.currentTitre;\n    const data = this.state.data;\n    Object.keys(data)\n    .map(elt => elt === currentTitre ? Object.keys(data[elt])\n      .map(product => Object.keys(data[elt][product])\n        .map(items => Object.keys(data[elt][product][items].categoryItems)\n          .map(keys => data[elt][product][items].categoryItems[keys].key === item.key ?\n            data[elt][product][items].categoryItems[keys].count = newCount\n            :\n            keys\n            )\n          )\n            ) : null);\n    this.setState({\n      count: newCount,\n      data,\n      item\n    });\n  }\n\n  addCount = item => {\n    const currentTitre = this.state.currentTitre;\n    const data = this.state.data;\n    const newCount = this.state.count;\n    // console.log(\"count\", newCount);\n    Object.keys(data)\n    .map(elt => elt === currentTitre ? Object.keys(data[elt])\n      .map(product => Object.keys(data[elt][product])\n        .map(items => Object.keys(data[elt][product][items].categoryItems)\n          .map(keys => data[elt][product][items].categoryItems[keys].key === item.key ?\n            data[elt][product][items].categoryItems[keys].count = newCount\n            :\n            keys\n            )\n          )\n            ) : null);\n              \n    this.setState({\n      count: newCount\n    });\n  }\n\n  onChangeTypeCount = (value, item) => {\n    const newTypeCount = value;\n    const currentTitre = this.state.currentTitre;\n    const data = this.state.data;\n    Object.keys(data)\n    .map(elt => elt === currentTitre ? Object.keys(data[elt])\n      .map(product => Object.keys(data[elt][product])\n        .map(items => Object.keys(data[elt][product][items].categoryItems)\n          .map(keys => data[elt][product][items].categoryItems[keys].key === item.key ?\n            data[elt][product][items].categoryItems[keys].typeCount = newTypeCount\n            :\n            keys\n            )\n          )\n            ) : null);\n    this.setState({\n      typeCount: newTypeCount,\n      data,\n      item\n    });\n  }\n\n  modalContent = (item) => {\n    const { count, largeur, typeCount } = this.state;\n    return (\n      <>\n        <h3>{item.item}</h3>\n        <Row>\n          <Col span={16}>\n            <Slider\n              min={0}\n              max={30}\n              onChange={e => this.onChangeCount(e, item)}\n              value={typeof count === 'number' ? count : 0}\n            />\n          </Col>\n          <Col span={4}>\n            <InputNumber\n              min={0}\n              max={30}\n              style={{ marginLeft: 16, width: largeur > 720 ? 100 : 60 }}\n              value={count}\n              onChange={e => this.onChangeCount(e, item)}\n            />\n          </Col>\n          <Col span={4}>\n            <Select defaultValue={typeCount} onChange={e => this.onChangeTypeCount(e, item)} style={{ width: largeur > 720 ? 100 : 60 }}>\n              <Option value='unité'>{count <= 1 ? 'unité' : 'unités'}</Option>\n              <Option value='boite'>{count <= 1 ? 'boite' : 'boites'}</Option>\n              <Option value='litre'>{count <= 1 ? 'litre' : 'litres'}</Option>\n              <Option value='Kilo'>{count <= 1 ? 'Kilo' : 'Kilos'}</Option>\n              <Option value='Gramme'>{count <= 1 ? 'Gramme' : 'Grammes'}</Option>\n            </Select>\n          </Col>\n        </Row>\n        <TextArea \n          placeholder='ajouter un commentaire' \n          autosize={{ minRows: 5, maxRows: 10 }} \n          onChange={(e) => this.onChangeComment(e, item)}\n          value={item.comment} \n          rows={10}\n          cols={largeur > 720 ? 50 : 30}\n          autoFocus\n          autoComplete='on'\n          style={{ marginTop: '1em' }}\n        />\n      </>\n    )\n  }\n\n  modalContentCourse = item => {\n    const { count, largeur } = this.state;\n    const image = (\n        <Skeleton paragraph={{ rows: 4, width: ['90%', '90%','90%','90%'] }} title={false}>\n          <img alt=\"prochainement\" src={prochainement} />\n        </Skeleton>\n    )\n    return(\n        <Card\n          style={{ width: largeur > 720 ? '70%' : '90%', paddingTop: '1em'}}\n          cover={image}\n        >\n          <Meta\n            avatar={<Avatar style={{ backgroundColor: '#009688' }} icon=\"user\" />}\n            title={item.item}\n          />\n            <br/>\n            {\n              count ?\n              <>\n              <h4>Quantité</h4>\n              <p>{item.count} {item.typeCount}{count <= 1 ? '': 's'}</p>\n              </>\n              :\n              null\n            }\n            {\n              item.comment ?\n              <>\n                <h4>Commentaire</h4>\n                <p>{item.comment}</p>\n              </>\n              :\n              <p>Rien ici!</p>\n            }\n        </Card>\n    )\n  }\n\n  //faire apparaitre/disparaitre la commentaire\n  toggleComment = (item) => {\n    this.setState({ \n      visible: true,\n      item,\n      count: item.count,\n      typeCount: item.typeCount,\n    });\n  }\n\n  onClose = (event, item) => {\n    // this.addCount(item);\n    this.addComment(event, item);\n    this.setState({\n      visible: false,\n      count: 0,\n      typeCount: 'unité',\n    });\n  };\n\n  // Ajouter un commentaire à un élément de la liste\n  addComment = (event, items) => {\n    event.preventDefault();\n    // console.log(items);\n    const user = this.state.currentUserUid;\n    const currentTitre = this.state.currentTitre;\n    const collapse = document.querySelector(`#elt-${items.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const item = this.state.item;\n    // console.log(item);\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(items.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // événement qui ferme le commentaire\n  closeComment = (event, item) => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{show : true} } : product));\n    item.show = !item.show;\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // Créer une catégorie dans la liste de course\n  createNewCategory = (event) => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const currentTitre = this.state.currentTitre;\n    const currentCategory = this.state.currentCategory;\n    const formInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('.form>button');\n    let category = '';\n    if(currentCategory === 'Ajout de dernière minute') {\n      category = 'Ajout de dernière minute';\n    } else {\n      category = formInput.value;\n    }\n    \n    if(formInput.value === '') {\n      return null\n    }\n    //Arriver a insérer une catégorie sans exemple de produit!\n    const data = {\n      titreCat: category\n    }\n\n    this.setState(prevState => ({\n      // listeDeBase: [...prevState.listeDeBase, category],\n      currentCategory: category,\n      isCategory: false\n    }));\n    \n    firebase.database().ref(`${user}/${currentTitre}/category`).push({\n      ...data\n    });\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n\n  }\n\n  //message qui annonce la catégorie sélectionnée\n  success = currentTitre => {\n    message.success(`${currentTitre}`);\n  };\n\n  //prend la catégorie choisie au clic\n  getCurrentCategory = titreCat => {\n    const currentCategory = titreCat;\n    this.setState({ currentCategory, isCategory: false });\n    this.success(titreCat);\n  }\n\n  // Bouton switch pour choisir entre produit et catégorie\n  toggleSwitch = (checked) => {\n    this.setState({ isCategory : checked === false ? false : true });\n  }\n\n  //bouton switch pour choisir entre collapse et liste\n  toggleSwitchType = (checked) => {\n    this.setState({ isToggleSwitchType : checked === false ? false : true });\n}\n\n  // Créer un élément de liste de course\n  createNewItem = (event) => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const currentCategory = this.state.currentCategory;\n    const currentTitre = this.state.currentTitre;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n    };\n    if(currentCategory === 'Ma super catégorie') {\n      this.createNewCategory(event);\n      return null;\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n  }\n\n  // Ajout d'un titre de liste de course\n  addNewListTitre = event => {\n    event.preventDefault();\n    // const user = this.state.userId;\n    const formInput = document.querySelector('#form-input');\n    const todoFormButton = document.querySelector('#myButtonSubmit');\n    const titre = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n    this.setState(prevState => ({\n      listeDeBase: [...prevState.listeDeBase, titre],\n      currentTitre: titre,\n      isCategory: true\n    }));\n\n    // firebase.database().ref(`${user}`).push({\n    //   titre\n    // });\n\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n  }\n\n  // Détecte quelle liste à été choisie\n  choixListe = (e) => {\n    const user = this.state.currentUserUid;\n    const titreListe = e.target.id;\n    const ref = firebase.database().ref(`${user}`);\n    // console.log(titreListe);\n\n    ref.on('value', snapshot => {\n      this.setState({\n        data: snapshot.val(),\n        currentTitre: titreListe,\n        clicked: true\n      });\n    });\n  }\n\n  // En Course --------> Check toute la catégorie\n  checkCurrentCategory = titreCat => {\n    console.log(titreCat);\n  }\n\n  // EN COURSE --------> Crée un item dans la catégorie derniere minute\n  createNewItemLastMinute = event => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const currentCategory = this.state.currentCategory;\n    const currentTitre = this.state.currentTitre;\n    const lastMinuteItem = this.state.lastMinuteItem;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n    };\n\n    //on regarde si la catégorie existe déjà pour ne pas en recréer une identique\n    let hasTitreCat = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n         return hasTitreCat = childSnapshot.val().titreCat === 'Ajout de dernière minute';\n      });\n    });\n\n    if(currentCategory === 'Ajout de dernière minute' && !lastMinuteItem && !hasTitreCat) {\n      this.createNewCategory(event);\n      this.setState({ lastMinuteItem: true });\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n  }\n\n  // utilisé sur bouton pour retour en arrière\n  goHome = () => {\n    this.setState({ clicked: false, isCategory: true });\n  }\n\n  // retour au menu de l'accueil\n  returnToApp = () => {\n    this.setState({ choixComponent: 'menu' });\n  }\n\n  // détecte le composant choisi à l'accueil\n  choixComponent = (event) => {\n    const choixComponent = event.target.name;\n    if(choixComponent !== '') {\n      if(choixComponent === 'enCourse') {\n        this.setState({ choixComponent, currentCategory: 'Ajout de dernière minute' });\n      } else {\n        this.setState({ choixComponent, currentCategory: 'Ma super catégorie' });\n      }\n    }\n  }\n\n  hideText = () => {\n    const clickedText = this.state.clickedText;\n    this.setState({ clickedText : !clickedText });\n}\n\ndeconnexion = event => {\n  event.preventDefault();\n  firebase.auth().signOut();\n  // console.log(firebase.auth().currentUser.displayName);\n}\n\n//choix composant via headermenu\nhandleClick = (e) => {\n  const choixComponent = e.key;\n  if(choixComponent !== '') {\n    if(choixComponent === 'enCourse') {\n      this.setState({ choixComponent, currentCategory: 'Ajout de dernière minute' });\n    } else {\n      this.setState({ choixComponent, currentCategory: 'Ma super catégorie' });\n    }\n  }\n}\n\n  //renvoie dans le render le composent choisit\n  renderChoiseConponent = () => {\n    const name = this.state.choixComponent;\n    switch(name) {\n      case 'enCourse':\n      return <EnCourse\n                returnToApp={this.returnToApp}\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                closeComment={this.closeComment}\n                createNewItemLastMinute={this.createNewItemLastMinute}\n                goHome={this.goHome}\n                currentTitre={this.state.currentTitre}\n                data={this.state.data}\n                checkCurrentCategory={this.checkCurrentCategory}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                largeur={this.state.largeur}\n                modalContentCourse={this.modalContentCourse}\n              />\n      case 'mesListes':\n      return <Home\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                addNewListTitre={this.addNewListTitre}\n                deleteList={this.deleteList}\n                loading={this.state.loading}\n                data={this.state.data}\n                returnToApp={this.returnToApp}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                closeComment={this.closeComment}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                createNewCategory={this.createNewCategory}\n                isCategory={this.state.isCategory}\n                currentCategory={this.state.currentCategory}\n                toggleSwitch={this.toggleSwitch}\n                numChildCategory={this.state.numChildCategory}\n                deleteCategory={this.deleteCategory}\n                currentTitre={this.state.currentTitre}\n                getCurrentCategory={this.getCurrentCategory}\n                isToggleSwitchType={this.state.isToggleSwitchType}\n                toggleSwitchType={this.toggleSwitchType}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                modalContent={this.modalContent}\n                largeur={this.state.largeur}\n              />\n      case 'monProfil':\n      return <ProfilUser\n              returnToApp={this.returnToApp}\n              user={this.state.userId}\n              toggleSwitchHelp={this.toggleSwitchHelp}\n              help={this.state.help}\n              toggleSwitchInverseProduit={this.toggleSwitchInverseProduit}\n              inverseProduit={this.state.inverseProduit}\n              userUid={this.state.userUid}\n              changeUserUid={this.changeUserUid}\n              valideChangeUserUid={this.valideChangeUserUid}\n              newUserUid={this.state.newUserUid}\n              choixUserUid={this.state.choixUserUid}\n              choisirUserUid={this.choisirUserUid}\n              linkName={this.state.linkName}\n              />\n      default:\n      return null\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14}} lg={{ span: 10 }} id='connexion'>\n            <h1>Check-List-Course</h1>\n            <p>Veuillez vous connecter svp:</p>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n          </Col>\n        </Row>\n      );\n    }\n    if(this.state.loading) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n        {/* {this.getDataBase()} */}\n          <Col xs={{ span: 16 }} md={{ span: 14 }} lg={{ span: 10}} id='load'>\n            <Loading/>\n            <h3>Chargement du caddie</h3>\n          </Col>\n        </Row>\n      )\n    }\n    \n    return (\n      <>\n      <Row type=\"flex\" justify=\"space-around\" id='main'>\n        <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} id='mainCol' >\n        <Layout>\n          <Header \n            style={{ \n              padding : this.state.largeur >= 480 ? '0 50px' : '0'\n            }}>\n            <Col xs={0} lg={4}>\n              {\n                this.state.largeur >= 480 ? \n                <h4><Icon type=\"shopping-cart\" /> Check-Course</h4>\n                :\n                null\n              }\n            </Col>\n            <Col xs={24} lg={20} \n              style={{\n                textAlign : this.state.largeur >= 480 ? 'right' : 'center',\n                fontSize : this.state.largeur >= 480 ? '0.9em' : '0.7em'\n              }}\n            >\n                <HeaderMenu\n                  handleClick={this.handleClick}\n                  choixComponent={this.choixComponent}\n                  choixComponentState={this.state.choixComponent}\n                />\n            </Col>\n          </Header>\n        <Content>\n          \n          {\n            this.state.choixComponent === 'menu' ?\n            <>\n              <Col span={24} id={this.state.largeur >= 480 ? 'bckLogo' : 'bckLogo2'}>\n                <Icon type=\"shopping-cart\" />\n                <h2>CHECK-COURSE</h2>\n              </Col>\n              <Menu\n                choixComponent={this.choixComponent}\n                user={this.state.userId}\n                hideText={this.hideText}\n                clickedText={this.state.clickedText}\n                help={this.state.help}\n              />\n            </>\n            :\n            this.renderChoiseConponent()\n          }\n              {/* <Col span={6}>\n                  <Button \n                    type='primary'\n                    block \n                    onClick={e => this.deconnexion(e)} \n                    className='goBack'\n                    >\n                      Déconnexion\n                  </Button>\n              </Col> */}\n          </Content>\n            <Footer>\n              <p>Created By Mikael</p>\n            </Footer>\n          </Layout>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}