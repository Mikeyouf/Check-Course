{"version":3,"sources":["img/prochainement2.png","firebase.js","Components/Item.js","Components/ItemList.js","Components/MyLists.js","Components/Home.js","Components/Loading.js","Components/EnCourseList.js","Components/EnCourseItem.js","Components/EnCourse.js","Components/Menu.js","Components/ProfilUser.js","Components/HeaderMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Item","console","log","_this$props","this","props","item","itemKey","comment","count","itemIsVisible","itemVisible","deleteItem","toggleComment","isChecked","react_default","a","createElement","col","span","row","type","justify","align","key","id","concat","xs","sm","md","lg","onClick","className","es_button","name","style","background","border","block","icon","color","fontSize","badge","status","Component","ItemList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderData","data","currentTitre","inverseProduit","arrayData","keys","map","category","categoryItem","push","reverse","setState","liste","state","elt","list","titreCat","locale","emptyText","header","getCurrentCategory","categoryVisible","categoryIsVisible","deleteCategory","bordered","dataSource","categoryItems","renderItem","checked","Components_Item","delete","prevProps","prevState","_this2","_this$props2","largeur","visible","drawerWidth","Fragment","drawer","placement","width","onClose","e","modalContent","MyLists","help","notification","open","message","description","duration","textAlign","window","addEventListener","handleScroll","removeEventListener","isCategory","showForm","currentCategory","positionY","scrollY","onScroll","padding","reloadList","onSubmit","createNewCategory","createNewItem","es_switch","checkedChildren","unCheckedChildren","onChange","toggleSwitch","placeholder","maxLength","showFormulaire","Components_ItemList","addComment","titre","titreListe","indexItem","numChildCategory","marginRight","goHome","Home","choixUserUid","newData","choixListe","size","changeLocked","locked","popconfirm","title","onConfirm","confirmDelete","onCancel","cancel","okText","cancelText","listeDeBase","clicked","Components_MyLists","returnToApp","isToggleSwitchType","toggleSwitchType","followWindow","length","addNewListTitre","Loading","react_loading_default","height","countItem","EnCourseList","countProduit","countItemPos","countItemNeg","countTotal","checkCurrentCategory","createNewItemLastMinute","offset","backgroundColor","boxShadow","modalContentCourse","EnCourseItem","EnCourse","Components_EnCourseItem","Components_EnCourseList","closeComment","handleScrollButton","Menu","margin","choixComponent","ProfilUser","user","userUid","newUserUid","linkName","toggleSwitchHelp","toggleSwitchInverseProduit","marginBottom","toggleSwitchFollowWindow","choisirUserUid","changeUserUid","required","valideChangeUserUid","pull","deconnexion","borderRadius","marginLeft","HeaderMenu","menu","handleClick","selectedKeys","choixComponentState","mode","Header","Layout","Footer","Content","Meta","Card","TextArea","Input","Option","Select","App","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","animFormButton","button","classList","add","setTimeout","remove","animFormElt","getDataBase","myUser","_this$state","userId","currentUser","ref","on","snapshot","listItem","val","currentUserUid","followers","loading","set","userName","getOtherDataBase","curentUser","handleResize","hauteur","innerHeight","innerWidth","isScroll","formElt","document","getElementById","lastPositionY","updates","update","event","target","value","changeUserInput","error","text","_this$state2","success","_this$state3","_this$state4","collapse","querySelector","parentElement","toggle","index","forEach","childSnapshot","orderByChild","equalTo","_this$state5","contentElt","childNodes","indexCat","deleteList","onChangeComment","newComment","onChangeCount","onChangeTypeCount","typeCount","_this$state6","gutter","slider","min","max","input_number","es_select","defaultValue","autosize","minRows","maxRows","rows","cols","autoFocus","autoComplete","marginTop","onPressEnter","_this$state7","image","skeleton","paragraph","alt","src","prochainement","card","paddingTop","cover","avatar","items","preventDefault","_this$state8","_this$state9","_this$state10","_this$state11","_this$state12","formInput","todoFormButton","cat","charAt","toUpperCase","substring","toLowerCase","categoryExist","objectSpread","config","top","_this$state13","timestamp","Date","now","todoFormInput","dataElt","show","toConsumableArray","lastChild","firstChild","_this$state14","lastMinuteItem","hasTitreCat","hideText","clickedText","signOut","then","isSignedIn","catch","renderChoiseConponent","Components_EnCourse","Components_Home","Components_ProfilUser","totalItem","bind","assertThisInitialized","unregisterAuthObserver","onAuthStateChanged","uid","displayName","Components_Loading","layout","Components_HeaderMenu","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Boolean","location","hostname","match","ReactDOM","render","locale_provider","fr_FR","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9859df8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/prochainement2.cbd80974.png\";","export default {\r\n    apiKey: \"AIzaSyASNdLHf9itHbMfni5KLun3kcA57LFgkFg\",\r\n    authDomain: \"check-list-course.firebaseapp.com\",\r\n    databaseURL: \"https://check-list-course.firebaseio.com\",\r\n    projectId: \"check-list-course\",\r\n    storageBucket: \"check-list-course.appspot.com\",\r\n    messagingSenderId: \"873680903792\"\r\n}","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport { Row, Col, Button, Icon, Badge  } from 'antd';\r\n\r\nclass Item extends Component {\r\n    componentDidMount() {\r\n        console.log('item: je suis rendered');\r\n    }\r\n    render() { \r\n        const { item, itemKey, comment, count, itemIsVisible, itemVisible, deleteItem, toggleComment, isChecked } = this.props;\r\n        return ( \r\n            <Col span={24} >\r\n                <Row \r\n                    type=\"flex\" \r\n                    justify=\"space-between\" \r\n                    align=\"middle\"\r\n                    key={itemKey}\r\n                    id={`elt-${itemKey}`}\r\n                >\r\n                    <Col xs={12} sm={15} md={15} lg={18} onClick={isChecked} className={'ant-list-items-item'}>\r\n                        {item}\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                        <Button \r\n                            name=\"comment\" \r\n                            className='comment' \r\n                            style={{ background: 'transparent', border: 'none' }}\r\n                            type='primary'\r\n                            block\r\n                            onClick={toggleComment}>\r\n                            >\r\n                            {\r\n                                comment === '' && count === 0 ?\r\n                                <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                :\r\n                                <Badge status=\"success\">\r\n                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                </Badge>\r\n                            }\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                        <Button \r\n                            style={{ background: 'transparent' }}\r\n                            name=\"isVisible\" \r\n                            className=\"trash\"\r\n                            type='primary'\r\n                            block\r\n                            onClick={itemVisible}>\r\n                                {\r\n                                    itemIsVisible ?\r\n                                    <i className=\"far fa-eye\"></i>\r\n                                    :\r\n                                    <i className=\"far fa-eye-slash\"></i>\r\n                                }\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"trash\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={deleteItem}>\r\n                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                            </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Item;","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport Item from './Item'\r\n\r\nimport { List, Row, Col, Icon, Button, Badge, Drawer } from 'antd';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrayData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.data !== this.props.data) {\r\n            this.renderData();\r\n        }\r\n    }\r\n\r\n    renderData = () => {\r\n        const { data, currentTitre, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? \r\n                Object.keys(data[item])\r\n                    .map(category => Object.keys(data[item][category])\r\n                        .map(categoryItem => arrayData.push(data[item][category][categoryItem])))\r\n                : null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        this.setState({ arrayData });\r\n    }\r\n\r\n    liste = () => {\r\n        const { arrayData } = this.state;\r\n        if(!arrayData) {\r\n            return null\r\n        }\r\n        // console.log('je suis rendered');\r\n        // console.log('arrayData :', arrayData);\r\n        return (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                locale={{ emptyText: 'Veuillez ajouter un produit' }}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                        <Col xs={16} md={18} lg={20} className='titreCat' onClick={() => this.props.getCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                        <Col xs={4} sm={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"isVisible\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={() => this.props.categoryVisible(elt)}>\r\n                                    {\r\n                                        elt.categoryIsVisible ?\r\n                                        <i className=\"far fa-eye\" style={{ color: 'aliceblue' }}/>\r\n                                        :\r\n                                        <i className=\"far fa-eye-slash\" style={{ color: 'aliceblue' }}/>\r\n                                    }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col xs={4} md={3} lg={2}>\r\n                            <Button \r\n                                name=\"trash\" \r\n                                className=\"trash\"\r\n                                block\r\n                                type='primary'\r\n                                onClick={() => this.props.deleteCategory(elt, id)}>\r\n                                <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                        <Item\r\n                            item={item.item}\r\n                            itemKey={item.key}\r\n                            comment={item.comment}\r\n                            count={item.count}\r\n                            itemIsVisible={item.itemIsVisible}\r\n\r\n                            isChecked={() => this.props.isChecked(item)}\r\n                            toggleComment={() => this.props.toggleComment(item)}\r\n                            itemVisible={() => this.props.itemVisible(item)}\r\n                            deleteItem={() => this.props.delete(item)}\r\n                        />\r\n                    </List.Item>\r\n                    )}\r\n            />\r\n    \r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible } = this.props;\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        return ( \r\n            <>\r\n            {this.liste()}\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContent(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, notification, Switch } from 'antd';\r\n\r\nimport ItemList from './ItemList';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Ajouter une catégorie',\r\n        description: \"Pour ajouter une catégorie, cliquez sur \\\"Ajouter une catégorie\\\" et écrivez le nom que vous désirez, par exemple \\\"Boissons\\\". Pour finaliser, cliquez sur le +.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Ajouter un produit',\r\n                description: \"Pour ajouter un produit, cliquez sur \\\"Ajouter un produit\\\" et écrivez le nom que vous désirez, par exemple \\\"Eau\\\". Pour finaliser, cliquez sur le +. Vous pouvez ajouter autant de produits que vous le désirez.\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                  onClose: () => {\r\n                    notification.open({\r\n                        message: 'Astuce!',\r\n                        description: \"Pour ajouter un produit dans une catégorie existente, cliquez sur le nom de la catégorie voulue, ensuite il vous suffit d'ajouter un produit.\",\r\n                        duration: 0,\r\n                        style: {\r\n                            textAlign: 'justify'\r\n                          }\r\n                      });\r\n                  }\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass MyLists extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n    \r\n    render() { \r\n        const { isCategory, showForm, currentCategory, currentTitre } = this.props;\r\n        const positionY = window.scrollY;\r\n        return ( \r\n            <Col onScroll={e => this.props.handleScroll(e)} className='containerList'>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                        {\r\n                        showForm ?\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <h3 className='titreListe'><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                            </Col>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <Button block type=\"primary\" className='reload' onClick={this.props.reloadList}>\r\n                                    <Icon type=\"reload\" />\r\n                                </Button>\r\n                            </Col>\r\n                            <form className={showForm && positionY <= 80 ? 'form form-titre' : 'form form-titre fixedPosition'} id='myForm' onSubmit={isCategory === true ? e => this.props.createNewCategory(e) : e => this.props.createNewItem(e)}>\r\n                                <Switch checkedChildren=\"C\" unCheckedChildren=\"P\" checked={isCategory === true ? true : false}  onChange={this.props.toggleSwitch} id='switchButton'/>\r\n                                <input \r\n                                    id='myInput' \r\n                                    type='text' \r\n                                    placeholder={isCategory === true ? 'Ajouter une catégorie' : currentCategory === 'Ma super catégorie' ? 'Ajouter une catégorie' : `Ajouter à ${currentCategory}` } \r\n                                    maxLength={40} \r\n                                />\r\n                                <button type='submit' id='buttonSubmit'>\r\n                                    <Icon type=\"plus\" />\r\n                                </button>\r\n                            </form>\r\n                        </>\r\n                        :\r\n                        <>\r\n                        <Col xs={{ span: 12}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                            <h3 className='titreListe'><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                        </Col>\r\n                        <Col xs={{ span: 6}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                            <Button block type=\"primary\" className='reload' onClick={this.props.reloadList}>\r\n                                <Icon type=\"reload\" />\r\n                            </Button>\r\n                        </Col>\r\n                        <Col xs={{ span: 6}} sm={{ span: 14}} md={{ span: 16}} lg={{ span: 12}}>\r\n                            <button type='button' className={!showForm && positionY <= 80 ? '' : 'fixedPosition'} id='buttonSubmit2' onClick={this.props.showFormulaire} >\r\n                                <Icon type=\"edit\" style={{ fontSize: '2.5em' }}/>\r\n                            </button>\r\n                        </Col>\r\n                        </>\r\n                        }\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <ItemList\r\n                            data={this.props.data}\r\n                            isChecked={this.props.isChecked}\r\n                            delete={this.props.delete}\r\n                            toggleComment={this.props.toggleComment}\r\n                            addComment={this.props.addComment}\r\n                            titre={this.props.titreListe}\r\n                            indexItem={this.props.indexItem}\r\n                            currentCategory={this.props.currentCategory}\r\n                            numChildCategory={this.props.numChildCategory}\r\n                            deleteCategory={this.props.deleteCategory}\r\n                            currentTitre={this.props.currentTitre}\r\n                            getCurrentCategory={this.props.getCurrentCategory}\r\n                            inverseProduit={this.props.inverseProduit}\r\n                            visible={this.props.visible}\r\n                            onClose={this.props.onClose}\r\n                            item={this.props.item}\r\n                            modalContent={this.props.modalContent}\r\n                            largeur={this.props.largeur}\r\n                            itemIsVisible={this.props.itemIsVisible}\r\n                            itemVisible={this.props.itemVisible}\r\n                            categoryVisible={this.props.categoryVisible}\r\n                            categoryIsVisible={this.props.categoryIsVisible}\r\n                        />\r\n                    </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyLists;","import React, { Component } from 'react';\r\n\r\nimport MyLists from './MyLists';\r\n\r\nimport { Button, Icon, Col, notification, List, Popconfirm } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Créer une liste de course',\r\n        description: \"Pour créer une liste, il vous suffit simplement d'écrire son nom dans la case \\\"ajouter une liste\\\" et de cliquer sur le +. Ensuite cliquez sur le nom de votre liste qui vient d'apparaitre en dessous. Vous pouvez en créer maximum 3.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        // onClose: () => {\r\n        //   alert('clicked');\r\n        // },\r\n      });\r\n  };\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const { data, choixUserUid } = this.props;\r\n        const newData = [];\r\n        Object.keys(data).map(item => item !== 'user' ? newData.push(item) : null); //on enlève user des items\r\n            return (\r\n                <List\r\n                    bordered\r\n                    locale={{ emptyText: 'Veuillez créer une liste' }}\r\n                    dataSource={newData}\r\n                    renderItem={ (item, id) => (\r\n                        <>\r\n                        {\r\n                        item ?\r\n                            <>\r\n                            {\r\n                                choixUserUid ?\r\n                                <List.Item >\r\n                                    <Col span={24} key={id} className='listeDeBase'>  \r\n                                        <Col xs={{ span: 16 }} md={{ span: 18 }} lg={{ span: 20 }} key={`elt-${item}`} id={`id-${item}`} onClick={() => this.props.choixListe(item)}>\r\n                                            {item}\r\n                                        </Col>\r\n                                        <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                            <Button\r\n                                                size='large'\r\n                                                name=\"trash\" \r\n                                                type=\"primary\"\r\n                                                block \r\n                                                className=\"trash\"\r\n                                                onClick={() => this.props.changeLocked(data[item], item)}\r\n                                            >  \r\n                                            {\r\n                                                !data[item].locked ?\r\n                                                <Icon type=\"unlock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                :\r\n                                                <Icon type=\"lock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            }\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                            <Popconfirm title=\"Confirmer pour effacer\" onConfirm={() => this.props.confirmDelete(item)} onCancel={this.props.cancel} okText=\"Oui\" cancelText=\"Non\">\r\n                                                <Button\r\n                                                    size='large' \r\n                                                    name=\"trash\" \r\n                                                    type=\"primary\"\r\n                                                    block \r\n                                                    className=\"trash\"\r\n                                                >  \r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                </Button>\r\n                                            </Popconfirm>\r\n                                        </Col>\r\n                                    </Col>\r\n                                </List.Item>\r\n                                :\r\n                                <>\r\n                                    {\r\n                                        data[item].locked === false ?\r\n                                        <List.Item >\r\n                                            <Col span={24} key={id} className='listeDeBase'>  \r\n                                                <Col xs={{ span: 16 }} md={{ span: 18 }} lg={{ span: 20 }} key={`elt-${item}`} id={item} onClick={() => this.props.choixListe(item)}>\r\n                                                    {item}\r\n                                                </Col>\r\n                                                <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                                    <Button\r\n                                                        size='large' \r\n                                                        name=\"trash\" \r\n                                                        type=\"primary\"\r\n                                                        block \r\n                                                        className=\"trash\"\r\n                                                        // onClick={() => this.props.changeLocked(data[item], item)}\r\n                                                    >  \r\n                                                    {\r\n                                                        !data[item].locked ?\r\n                                                        <Icon type=\"unlock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                        :\r\n                                                        <Icon type=\"lock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                    }\r\n                                                    </Button>\r\n                                                </Col>\r\n                                                <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                                    <Popconfirm title=\"Confirmer pour effacer\" onConfirm={() => this.props.confirmDelete(item)} onCancel={this.props.cancel} okText=\"Oui\" cancelText=\"Non\">\r\n                                                        <Button\r\n                                                            size='large' \r\n                                                            name=\"trash\" \r\n                                                            type=\"primary\"\r\n                                                            block \r\n                                                            className=\"trash\"\r\n                                                        >  \r\n                                                            <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                        </Button>\r\n                                                    </Popconfirm>\r\n                                                </Col>\r\n                                            </Col>\r\n                                        </List.Item>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </>\r\n                            }\r\n                            </>\r\n                        \r\n                        :\r\n                        null\r\n                        }\r\n                        </>\r\n                    )}\r\n                />\r\n            )};\r\n        \r\n    render() {\r\n        const { listeDeBase, clicked } = this.props;\r\n        return (\r\n            <>\r\n            {\r\n            !clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    { \r\n                        listeDeBase.length >= 4 ?\r\n                        null\r\n                        :\r\n                        <form className='formulaire form-titre' onSubmit={e => this.props.addNewListTitre(e)}>\r\n                            <input type='text' id='form-input' placeholder='Ajouter une liste' maxLength={30}/>\r\n                            <button type='submit' id='myButtonSubmit'>+</button>\r\n                        </form>\r\n                    }\r\n                \r\n                    <Col>\r\n                        {this.liste()}\r\n                    </Col>\r\n                    <Col span={6} style={{ marginRight: '1em' }}>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </Col>\r\n                </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n                <MyLists\r\n                    currentTitre={this.props.currentTitre}\r\n                    createNewItem={this.props.createNewItem}\r\n                    data={this.props.data}\r\n                    isChecked={this.props.isChecked}\r\n                    delete={this.props.delete}\r\n                    toggleComment={this.props.toggleComment}\r\n                    addComment={this.props.addComment}\r\n                    titreListe={this.props.titreListe}\r\n                    returnToApp={this.props.returnToApp}\r\n                    goHome={this.props.goHome}\r\n                    indexItem={this.props.indexItem}\r\n                    createNewCategory={this.props.createNewCategory}\r\n                    isCategory={this.props.isCategory}\r\n                    toggleSwitch={this.props.toggleSwitch}\r\n                    numChildCategory={this.props.numChildCategory}\r\n                    deleteCategory={this.props.deleteCategory}\r\n                    getCurrentCategory={this.props.getCurrentCategory}\r\n                    isToggleSwitchType={this.props.isToggleSwitchType}\r\n                    toggleSwitchType={this.props.toggleSwitchType}\r\n                    help={this.props.help}\r\n                    inverseProduit={this.props.inverseProduit}\r\n                    visible={this.props.visible}\r\n                    onClose={this.props.onClose}\r\n                    item={this.props.item}\r\n                    modalContent={this.props.modalContent}\r\n                    largeur={this.props.largeur}\r\n                    itemIsVisible={this.props.itemIsVisible}\r\n                    itemVisible={this.props.itemVisible}\r\n                    handleScroll={this.props.handleScroll}\r\n                    followWindow={this.props.followWindow}\r\n                    showForm={this.props.showForm}\r\n                    showFormulaire={this.props.showFormulaire}\r\n                    currentCategory={this.props.currentCategory}\r\n                    categoryVisible={this.props.categoryVisible}\r\n                    categoryIsVisible={this.props.categoryIsVisible}\r\n                    reloadList={this.props.reloadList}\r\n                />\r\n            </Col>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => (\r\n    <ReactLoading \r\n    type=\"cylon\" \r\n    color=\"#078073\" \r\n    className=\"load\"\r\n    id=\"load\"\r\n    height={200}\r\n    width={200}\r\n    />\r\n)\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, List, Row, Badge, notification, Drawer  } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Astuce',\r\n        description: \"Lorsque vous faites vos courses, il suffit de cliquer sur un produit pour qu'il soit \\\"barré\\\" et \\\"grisé\\\".\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Astuce',\r\n                description: \"Vous ouvez rajouter un produit de dernière minute en l'ajoutant dans la case \\\"Entrez un produit\\\".\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n              });\r\n            }\r\n      });\r\n  };\r\nlet countItem = 0;\r\n\r\nclass EnCourseList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            count: 0\r\n         }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    //compteur de produits\r\n    countProduit = ( data, currentTitre ) => {\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? Object.keys(data[item])\r\n                .map(category => Object.keys(data[item][category])\r\n                    .map(categoryItem => data[item][category][categoryItem].categoryItems && data[item][category][categoryItem].categoryIsVisible ? arrayData.push(data[item][category][categoryItem]): null))\r\n            : null);\r\n        let countItemPos = [];\r\n        let countItemNeg = [];\r\n        let countTotal = [];\r\n        arrayData.map(elt => Object.keys(elt.categoryItems).map(item => countTotal.push(elt.categoryItems[item].checked)));\r\n        arrayData.map(elt => Object.keys(elt.categoryItems).map(item => elt.categoryItems[item].checked === false && elt.categoryItems[item].itemIsVisible ? countItemNeg.push(elt.categoryItems[item].checked): countItemPos.push(elt.categoryItems[item].checked)));\r\n        countItem = countTotal.length - countItemPos.length;\r\n    }\r\n\r\n    // création de la liste de produit et des catégories\r\n    liste = () => {\r\n        const { currentTitre, data, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        // On inverse la liste\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        \r\n        return (arrayData || []).map((elt, id) =>\r\n        <div key={`key-${id}`}>\r\n        {\r\n            elt.categoryIsVisible ? // cache ou affiche une catégorie\r\n            <List\r\n                key={`titreCat-${elt.titreCat}`}\r\n                id={`titreCat-${elt.titreCat}`}\r\n                header={\r\n                    <Row id={`titreCat-${id}`} type=\"flex\" justify=\"space-between\" align='middle' style={{height: '2.5em'}}>\r\n                        <Col span={24} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <>\r\n                    {\r\n                    item.itemIsVisible ? //cache ou affiche un produit\r\n                    <List.Item key={`listItemId-${item.key}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} key={`col24-${item.key}`}>\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={`elt-${item.key}`}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={20} sm={21} md={21} lg={22} key={`col20-${item.key}`} onClick={() => this.props.isChecked(item, arrayData)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2} key={`col4-${item.key}`}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' && item.count === 0 ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                    </List.Item>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                    )}\r\n            />\r\n            :\r\n            null\r\n        }\r\n        </div>\r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible, showForm, currentTitre, data } = this.props;\r\n        // width du drawer en fonction de la taille de l'écran\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        const positionY = window.scrollY;\r\n        this.countProduit(data, currentTitre);\r\n        return ( \r\n            <Col onScroll={ e => this.props.handleScroll(e) } className='containerList'>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                    {\r\n                        showForm ?\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                            </Col>\r\n                            \r\n                            <form id='myForm' className={showForm && positionY <= 80 ? 'formu formu-titre enCourse-formu-titre' : 'formu formu-titre enCourse-formu-titre fixedPosition'} onSubmit={this.props.createNewItemLastMinute}>\r\n                                <input type='text' placeholder='Produit de dernière minute' maxLength={40} />\r\n                                <button type='submit' id='buttonSubmit' onClick={this.props.showFormulaire}>\r\n                                    <Badge count={countItem} offset={[11, -30]} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}>\r\n                                        <Icon type=\"plus\" />\r\n                                    </Badge>\r\n                                </button>\r\n                            </form>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                            </Col>\r\n                            <Col xs={{ span: 12}} sm={{ span: 14}} md={{ span: 16}} lg={{ span: 18}}>\r\n                                <button type='button' className={!showForm && positionY <= 80 ? '' : 'fixedPosition'} id='buttonSubmit2' onClick={this.props.showFormulaire} >\r\n                                    <Badge count={countItem} offset={[5, -5]} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}>\r\n                                        <Icon type=\"edit\" style={{ fontSize: '2.5em' }}/>\r\n                                    </Badge>\r\n                                </button>\r\n                            </Col>\r\n                        </>\r\n                    }\r\n                    </Col>\r\n               <Col span={24}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={this.props.visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContentCourse(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseList;","import React, { Component } from 'react';\r\n\r\nimport { Col } from 'antd';\r\n\r\nclass EnCourseItem extends Component {\r\n    render() { \r\n        const { item, choixListe } = this.props;\r\n        return ( \r\n            <Col span={24} key={`key-${item}`} className='listeDeBaseEnCourse'>  \r\n                <Col xs={{ span: 20 }} md={{ span: 21 }} lg={{ span: 22 }} key={`elt-${item}`} id={`id-${item}`} onClick={choixListe}>\r\n                    {item}\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseItem;","import React, { Component } from 'react';\r\nimport { Button, Icon, Col, List } from 'antd';\r\n\r\nimport EnCourseList from './EnCourseList';\r\nimport EnCourseItem from './EnCourseItem';\r\n\r\nclass EnCourse extends Component {\r\n    liste = () => {\r\n        const { data, choixUserUid } = this.props;\r\n        const newData = [];\r\n        Object.keys(data).map(item => item !== 'user' ? newData.push(item) : null); //on enlève user des items\r\n        return ( \r\n            <List\r\n                bordered\r\n                locale={{ emptyText: 'Vous devez d\\'abord créer une liste avant de faire vos courses' }}\r\n                dataSource={newData}\r\n                renderItem={ (item, id) => (\r\n                    <>\r\n                    {\r\n                    item ?\r\n                    <>\r\n                    {\r\n                        choixUserUid ?\r\n                        <List.Item>\r\n                            <EnCourseItem\r\n                                item={item}\r\n                                choixListe={() => this.props.choixListe(item)}\r\n                            />\r\n                        </List.Item>\r\n                        :\r\n                        <>\r\n                        {\r\n                            data[item].locked === false ?\r\n                            <List.Item >\r\n                                <EnCourseItem\r\n                                    item={item}\r\n                                    choixListe={() => this.props.choixListe(item)}\r\n                                />\r\n                            </List.Item>\r\n                            :\r\n                            null\r\n                        }\r\n                        </>\r\n\r\n                    }\r\n                    </>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                </>\r\n                :\r\n                <Col span={24}>\r\n                    <EnCourseList\r\n                        currentTitre={this.props.currentTitre}\r\n                        createNewItemLastMinute={this.props.createNewItemLastMinute}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titreListe={this.props.titreListe}\r\n                        returnToApp={this.props.returnToApp}\r\n                        closeComment={this.props.closeComment}\r\n                        goHome={this.props.goHome}\r\n                        indexItem={this.props.indexItem}\r\n                        checkCurrentCategory={this.props.checkCurrentCategory}\r\n                        help={this.props.help}\r\n                        inverseProduit={this.props.inverseProduit}\r\n                        visible={this.props.visible}\r\n                        onClose={this.props.onClose}\r\n                        item={this.props.item}\r\n                        largeur={this.props.largeur}\r\n                        modalContentCourse={this.props.modalContentCourse}\r\n                        showFormulaire={this.props.showFormulaire}\r\n                        showForm={this.props.showForm}\r\n                        handleScroll={this.props.handleScroll}\r\n                        handleScrollButton={this.props.handleScrollButton}\r\n                    />\r\n                </Col>\r\n            }\r\n            \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourse;","import React, { Component } from 'react';\r\n\r\nimport '../NewApp.css';\r\n\r\nimport { Button, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Liste de course interactive',\r\n        description: \"Bienvenue sur votre application de liste de course. Pour commencer, veuillez cliquer sur \\\"créer une liste\\\". Si vous avez déjà créé une liste, cliquez sur \\\"En course\\\" lorsque vous faites vos course.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          }\r\n      });\r\n  };\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                        <Button \r\n                            style={{ margin : '1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='enCourse'\r\n                            onClick={this.props.choixComponent}\r\n                            >Faire ses courses\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='mesListes'\r\n                            onClick={this.props.choixComponent}\r\n                        >Créer une liste\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\" \r\n                            className='item-button'\r\n                            name='monProfil'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mon profil\r\n                        </Button>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Row, Col, notification, Switch } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Votre profil',\r\n        description: \"Bientôt vous aurez la possibilité de modifier votre profil et bien plus encore!\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Se connecter à un autre profil',\r\n                description: \"Il vous suffit de recopier l'identifiant de la liste que vous souhaitez rejoindre et de valider. Ensuite cliquez sur cette liste pour la rejoindre!\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                // onClose: () => {\r\n                //   alert('clicked');\r\n                // },\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass ProfilUser extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const { \r\n            user, help, inverseProduit, userUid, newUserUid, choixUserUid, linkName, followWindow,\r\n                toggleSwitchHelp, toggleSwitchInverseProduit \r\n            } = this.props;\r\n        return ( \r\n            <Col span={24}>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col  xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                    <h2>Bienvenue sur votre profil {user}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Aide : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={help === true ? true : false} onChange={toggleSwitchHelp} id='switchButtonHelp'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Inverser l'ordre des produits : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={inverseProduit === true ? true : false} onChange={toggleSwitchInverseProduit} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Case d'ajout de produit qui suit l'écran : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={followWindow === true ? true : false} onChange={this.props.toggleSwitchFollowWindow} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Votre identifiant : </b>{userUid}</span>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                        <Button block type={choixUserUid ? \"primary\" : \"default\"} name={userUid}  onClick={!choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                        {choixUserUid ? <span>Votre liste</span>: <span>Rejoindre votre liste</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <Button block type={choixUserUid ? \"default\" : \"primary\"} name={newUserUid} onClick={choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                            {choixUserUid ? <span>Rejoindre la liste de {linkName}</span>: <span>Liste de {linkName}</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Ajouter un identifiant : </b></span>\r\n                        <input type='text' placeholder='Entrez le nouvel identifiant' onChange={this.props.changeUserUid} required={true}/>\r\n                        <Button type=\"primary\" onClick={this.props.valideChangeUserUid} className='changeUid'>\r\n                            <Icon type=\"check\" />Valider\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 3, pull: 10 }} md={{ span: 3, pull: 10 }} lg={{ span: 3, pull: 10 }}>\r\n                        <Button type='primary' onClick={() => this.props.deconnexion()} style={{ borderRadius: '50px', width: '35px', height: '35px', marginLeft: '10px' }}>\r\n                            <Icon type=\"logout\" />\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row type='flex' justify='left'>\r\n                    <Col span={6}>\r\n                    <div className='button-anth'>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilUser;","import React, { Component } from 'react';\r\n\r\nimport { Menu, Icon } from 'antd';\r\n\r\nclass HeaderMenu extends Component {\r\n    render() { \r\n        return ( \r\n            <Menu\r\n            onClick={this.props.handleClick}\r\n            selectedKeys={[this.props.choixComponentState]}\r\n            mode=\"horizontal\"\r\n          >\r\n            <Menu.Item key=\"menu\">\r\n                <Icon type=\"home\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"mesListes\">\r\n                <Icon type=\"ordered-list\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"enCourse\">\r\n                <Icon type=\"shopping\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"monProfil\">\r\n                <Icon type=\"user\" />\r\n            </Menu.Item>\r\n          </Menu>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HeaderMenu;","import React, { Component } from 'react';\n// import './App.css';\nimport './NewApp.css';\nimport 'antd/dist/antd.css';\nimport './animations.css';\n\nimport * as firebase from 'firebase';\nimport config from './firebase';\n\n//ANT design\nimport { \n  Row, Col, Layout, Icon, message, Input, Slider, InputNumber, Select, Card, Avatar, Skeleton \n} from 'antd';\n\nimport Home from './Components/Home';\nimport Loading from './Components/Loading';\nimport EnCourse from './Components/EnCourse';\nimport Menu from './Components/Menu';\nimport ProfilUser from './Components/ProfilUser';\nimport HeaderMenu from './Components/HeaderMenu';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport prochainement from './img/prochainement2.png';\n\nconst {\n  Header, Footer, Content,\n} = Layout;\nconst { Meta } = Card;\n\nconst {TextArea} = Input;\nconst Option = Select.Option;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    firebase.initializeApp(config);\n        this.state = {\n            listeDeBase: [],\n            data: '',\n            item: null,\n            titreListe: [],\n            currentTitre: '',\n            choixComponent: 'menu',\n            currentCategory: '' || 'Ma super catégorie',\n            numChildCategory: 0,\n            isSignedIn: false,\n            clicked: false, \n            loading: true,\n            goHome: false,\n            isCategory: true,\n            clickedText : false,\n            indexItem: null,\n            isToggleSwitchType: false,\n            help: true,\n            inverseProduit: true,\n            userId: '' || 'Mikael',\n            userUid: '',\n            newUserUid: '',\n            choixUserUid: true,\n            changeUserInput: false,\n            currentUserUid: '',\n            linkName: '',\n            followers: [],\n            count: 0,\n            countItem: 0,\n            typeCount: 'unité',\n            newComment: '',\n            showForm: false, //affiche ou non le form dans faire ses courses\n            visible: false, //affiche le drawer\n            itemIsVisible: true, //affiche ou non l'item dans la liste de course\n            categoryIsVisible: true, //affiche ou non la catégorie dans la liste de course\n            totalItem: 0,\n            isScroll: 0,\n            followWindow: true,\n            largeur: 0,\n            hauteur: 0,\n            lastMinuteItem: false //verifie si un item a ete ajoute a la derniere minute\n        };\n      this.delete = this.delete.bind(this);\n      this.deleteCategory = this.deleteCategory.bind(this);\n      this.createNewItem = this.createNewItem.bind(this);\n      this.addNewListTitre = this.addNewListTitre.bind(this);\n      this.deconnexion = this.deconnexion.bind(this);\n}\n\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\ncomponentDidMount() {\n  const { loading } = this.state;\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        if(user) {\n          if(loading) {\n            this.getDataBase(user.uid);\n          }\n          this.setState({\n            isSignedIn: !!user, \n            userId: user.displayName,\n            userUid: user.uid\n          });\n        } else {\n          return null\n        }\n      }\n    );\n  \n  //détection du changement de taille d'écran\n  this.handleResize();\n  window.addEventListener('resize', this.handleResize);\n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('resize', this.handleResize); //on enlève l'évènement qui regarde la taille de la fenêtre\n  this.unregisterAuthObserver();\n}\n\n  animFormButton = button => {\n    button.classList.add('formButton-active');\n    setTimeout(() => {\n        button.classList.remove('formButton-active');\n    }, 500);\n  }\n\n  animFormElt = elt => {\n    elt.classList.add('message-enter');\n  }\n\n  getDataBase = myUser => {\n    const { userId, choixUserUid, newUserUid } = this.state;\n    const userUid = myUser || this.state.userUid;\n    const currentUser = choixUserUid ? userUid : newUserUid;\n    const ref = firebase.database().ref(`${currentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${userUid}/user/`).on('value', snapshot => {\n              this.setState({ \n                help: snapshot.val().help,\n                inverseProduit: snapshot.val().inverseProduit,\n                userUid: snapshot.val().userUid,\n                newUserUid: snapshot.val().newUserUid,\n                choixUserUid: snapshot.val().choixUserUid,\n                currentUserUid: snapshot.val().choixUserUid === true ? snapshot.val().userUid : snapshot.val().newUserUid,\n                linkName: snapshot.val().linkName,\n                followers: snapshot.val().followers,\n                followWindow: snapshot.val().followWindow\n               });\n               if(snapshot.val().choixUserUid) {\n                firebase.database().ref(`${currentUser}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               } else {\n                const newUserUid = snapshot.val().newUserUid;\n                firebase.database().ref(`${newUserUid}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               }\n            });\n            \n            } else {\n              firebase.database().ref(`${userUid}`).set({\n                user: {\n                  userName: userId,\n                  userUid: userUid,\n                  newUserUid: '',\n                  help: true,\n                  inverseProduit: true,\n                  choixUserUid: true,\n                  linkName: '',\n                  followers: [],\n                  followWindow: true\n                }\n              });\n              this.setState({\n                loading: false\n            });\n          }\n        });\n  }\n\n  //charger la database du compte sélectionné\n  getOtherDataBase = (linkName) => {\n    const curentUser = this.state.currentUserUid;\n    const user = this.state.userId;\n    const ref = firebase.database().ref(`${curentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${curentUser}/user`).on('value', snapshot => {\n              this.setState({ \n                linkName: snapshot.val().userName === user ? linkName : snapshot.val().userName  //probleme quand retour sur user d'origine\n               });\n            });\n            firebase.database().ref(`${curentUser}`).on('value', snapshot => {\n              Object.keys(snapshot.val()).map(item =>\n                listItem.push(item)\n              );\n                this.setState({\n                  listeDeBase: listItem,\n                  data: snapshot.val(),\n                  loading: false\n                  });\n              });\n            }\n        });\n        \n  }\n\n  showFormulaire = () => {\n    const showForm = !this.state.showForm;\n    \n    setTimeout(() => {\n      this.setState({ showForm });\n    }, 300);\n  }\n\n  //détecter la taille de la fenêtre\n  handleResize = () => this.setState({\n    hauteur: window.innerHeight,\n    largeur: window.innerWidth\n  });\n\n  // detection du scroll\n  handleScroll = () => {\n    const followWindow = this.state.followWindow;\n    const showForm = this.state.showForm;\n    let isScroll = 0;\n    const formElt = showForm ? document.getElementById('myForm') : document.getElementById('buttonSubmit2');\n    let lastPositionY = window.scrollY;\n    if(formElt && followWindow) {\n      if(isScroll !== lastPositionY && lastPositionY > 80) {\n        formElt.classList.add('opacity');\n        if(lastPositionY > 80) {\n          formElt.classList.add('fixedPosition');\n        }\n        setTimeout(() => {\n          isScroll = lastPositionY;\n          formElt.classList.remove('opacity');\n        }, 600);\n      }\n      if(lastPositionY <= 80) {\n        formElt.classList.remove('fixedPosition');\n      }\n    }\n}\n\n  // on ou off de l'aide\n  toggleSwitchHelp = checked => {\n    const { userUid } = this.state;\n    const help = checked;\n    this.setState({ help });\n    let updates = {};\n    updates[`${userUid}/user/help`] = !help;\n    return firebase.database().ref().update(updates);\n  }\n\n  // on ou off pour inverser l'ordre des produits\n  toggleSwitchInverseProduit = checked => {\n    const { userUid } = this.state;\n    const inverseProduit = checked;\n    this.setState({ inverseProduit });\n    let updates = {};\n    updates[`${userUid}/user/inverseProduit`] = !inverseProduit;\n    return firebase.database().ref().update(updates);\n  }\n\n  toggleSwitchFollowWindow = checked => {\n    // const user = this.state.userUid;\n    const followWindow = checked;\n    this.setState({ followWindow });\n    // let updates = {};\n    // updates[`${user}/user/followWindow`] = !followWindow;\n    // return firebase.database().ref().update(updates);\n  }\n\n  // changer l'uid pour rejoindre une liste\n  changeUserUid = event => {\n    const newUserUid = event.target.value;\n    if(newUserUid.length > 20) {\n      this.setState({ \n        newUserUid, \n        changeUserInput: true \n      });\n    }\n  }\n\n  error = text => {\n    message.error(`${text}`);\n  };\n\n  //valider le changement de l'uid\n  valideChangeUserUid = () => {\n    const { newUserUid, changeUserInput, userUid, userId } = this.state;\n    const followers = [];\n    const message = 'Utilisateur trouvé!'\n    //on rajoute le nom du followers\n    followers.push(userId);\n    let updates = {};\n    if(newUserUid !== '' && changeUserInput) {\n      firebase.database().ref(`${newUserUid}/user/userName`).on('value', snapshot => {\n        if(snapshot.val()) {\n          this.setState({ \n            linkName: snapshot.val(),\n            followers,\n            changeUserInput: false\n          });\n          updates[`${userUid}/user/linkName`] = snapshot.val();\n          firebase.database().ref().update(updates);\n\n          updates[`${userUid}/user/newUserUid`] = newUserUid;\n          firebase.database().ref().update(updates);\n      \n          updates[`${newUserUid}/user/followers`] = followers;\n          firebase.database().ref().update(updates);\n\n          this.success(message);\n        } else {\n          this.error('Cet utilisateur n\\'existe pas');\n          return;\n        }\n      });\n    } else {\n      this.error('Erreur de saisie');\n    }\n  }\n\n  choisirUserUid = event => {\n    const { choixUserUid, userUid, linkName} = this.state;\n    this.setState({ \n      choixUserUid: !choixUserUid,\n      currentUserUid: event.target.name\n    });\n\n    const choixDB = !choixUserUid;\n    if(choixDB) {\n        this.getDataBase();\n    } else {\n        this.getOtherDataBase(linkName);\n    }\n\n    this.success('Liste chargée!');\n        this.setState({ \n          currentTitre: '',\n          clicked: false,\n          choixComponent: 'menu'\n        });\n\n    let updates = {};\n    updates[`${userUid}/user/choixUserUid`] = !choixUserUid;\n    firebase.database().ref().update(updates);\n  }\n\n  // compteur de produits dans une liste\n  countProduit = arrayData => {\n    let countItemPos = [];\n    let countItemNeg = [];\n    arrayData.map(elt => Object.keys(elt.categoryItems)\n      .map(item => elt.categoryItems[item].checked === false ? \n          countItemNeg.push(elt.categoryItems[item].checked)\n          : \n          countItemPos.push(elt.categoryItems[item].checked)));\n    this.setState({\n        countItem : countItemNeg.length - countItemPos.length\n    });\n}\n\n  // Regarde si un produit est checked\n  isChecked = item => {\n    const { currentUserUid, currentTitre, data } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const divElt = collapse.parentElement.parentElement.parentElement;\n    divElt.classList.toggle('flip');\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    item.checked = !item.checked;\n    \n    this.setState({ data });\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n}\n  // Delete un produit\n  delete = item => {\n    const { currentUserUid, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const contentElt = collapse.parentElement.parentElement.parentElement.parentElement.childNodes;\n    \n    this.setState({ \n      indexItem: `elt-${item.item}`,\n      numChildCategory: contentElt.length\n  });\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    if(contentElt.length === 1) {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n        const indexCat = snapshot.key;\n          firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${indexCat}`).remove();\n      });\n      setTimeout(() => {\n        this.setState({ indexItem: null});\n      }, 50);\n    } else {\n        firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n          snapshot.forEach(function(childSnapshot){\n            const indexItem = childSnapshot.key;\n              firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${indexItem}`).remove();\n          });\n        });\n        setTimeout(() => {\n          this.setState({ indexItem: null});\n        }, 50);\n    }\n  }\n\n  // delete une catégorie\n  deleteCategory = (item, id) => {\n    const user = this.state.currentUserUid;\n    const collapse = document.getElementById(item.titreCat);\n    const currentTitre = this.state.currentTitre;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === collapse.id ? childSnapshot.key : null;\n      });\n    });\n\n    firebase.database().ref(`${user}/${currentTitre}/category/${index}`).remove();\n    \n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 50);\n  }\n\n  deleteList = (item) => {\n    const { currentUserUid } = this.state;\n    this.setState({ indexItem: `elt-${item}` });\n\n    firebase.database().ref(`${currentUserUid}/${item}`).remove();\n\n    setTimeout(() => {\n      this.setState({ indexItem: null });\n    }, 50);\n    \n  }\n\n  confirmDelete = item => {\n    this.setState({ clicked: false });\n    this.deleteList(item);\n    message.success('Liste effacée');\n  }\n\n  cancel = e => {\n      message.error('Action annulée');\n    }\n\n  onChangeComment = (event, item) => {\n    const newComment = event.target.value;\n    item.comment = newComment;\n    this.setState({\n      item,\n      newComment\n    });\n  }\n\n  onChangeCount = (value, item) => {\n    const count = value;\n    item.count = value;\n    this.setState({\n      count,\n      item\n    });\n  }\n\n  onChangeTypeCount = (value, item) => {\n    const typeCount = value;\n    item.typeCount = value;\n    this.setState({\n      typeCount,\n      item\n    });\n  }\n\n  modalContent = item => {\n    const { count, largeur, typeCount } = this.state;\n    return (\n      <>\n        <Row gutter={largeur > 720 ? 12 : 8}>\n          <Col span={ largeur > 720 ? 14 : 24 }>\n            <Slider\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              onChange={e => this.onChangeCount(e, item)}\n              value={typeof count === 'number' ? count : 0}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <InputNumber\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              style={{ marginLeft: 16, width: '90%' }}\n              value={count}\n              onChange={e => this.onChangeCount(e, item)}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <Select defaultValue={typeCount} onChange={e => this.onChangeTypeCount(e, item)} style={{ width: '90%' }}>\n              <Option value='unité'>{count <= 1 ? 'unité' : 'unités'}</Option>\n              <Option value='boite'>{count <= 1 ? 'boite' : 'boites'}</Option>\n              <Option value='litre'>{count <= 1 ? 'litre' : 'litres'}</Option>\n              <Option value='ml'>ml</Option>\n              <Option value='cl'>cl</Option>\n              <Option value='Kilo'>{count <= 1 ? 'kilo' : 'kilos'}</Option>\n              <Option value='Gramme'>{count <= 1 ? 'gramme' : 'grammes'}</Option>\n            </Select>\n          </Col>\n        </Row>\n        <TextArea \n          placeholder='ajouter un commentaire' \n          autosize={{ minRows: 5, maxRows: 10 }} \n          onChange={e => this.onChangeComment(e, item)}\n          value={item.comment} \n          rows={10}\n          cols={largeur > 720 ? 50 : 30}\n          autoFocus\n          autoComplete='on'\n          style={{ marginTop: '1em' }}\n          onPressEnter={event => this.onClose(event, item)}\n        />\n      </>\n    )\n  }\n\n  modalContentCourse = item => {\n    const { count, largeur } = this.state;\n    const image = (\n        <Skeleton paragraph={{ rows: 4, width: ['90%', '90%','90%','90%'] }} title={false}>\n          <img alt=\"prochainement\" src={prochainement} />\n        </Skeleton>\n    )\n    return(\n        <Card\n          style={{ width: largeur > 720 ? '70%' : '90%', paddingTop: '1em'}}\n          cover={image}\n        >\n          <Meta\n            avatar={<Avatar style={{ backgroundColor: '#009688' }} icon=\"user\" />}\n            title={item.item}\n          />\n            <br/>\n            {\n              count ?\n              <>\n              <h4>Quantité</h4>\n              <p>{item.count} {item.typeCount}{count <= 1 ? '': 's'}</p>\n              </>\n              :\n              null\n            }\n            {\n              item.comment ?\n              <>\n                <h4>Commentaire</h4>\n                <p>{item.comment}</p>\n              </>\n              :\n              <>\n                <h4>Commentaire</h4>\n                <p>Rien ici!</p>\n              </>\n            }\n        </Card>\n    )\n  }\n\n  //faire apparaitre/disparaitre la commentaire\n  toggleComment = item => {\n    this.setState({ \n      visible: true,\n      item,\n      count: item.count,\n      typeCount: item.typeCount,\n    });\n  }\n\n  onClose = (event, item) => {\n    this.addComment(event, item);\n    this.setState({\n      visible: false,\n      count: 0,\n      typeCount: 'unité',\n    });\n  };\n\n  // Ajouter un commentaire à un élément de la liste\n  addComment = (event, items) => {\n    event.preventDefault();\n    const { currentUserUid, item, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${items.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(items.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  //remettre la liste a zéro (check)\n  reloadList = () => {\n    const { currentTitre, data, currentUserUid } = this.state;\n    const arrayData = [];\n    Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\n    arrayData.map(elt => Object.keys(elt.categoryItems)\n      .map(item => elt.categoryItems[item].checked === true ? \n        elt.categoryItems[item].checked = false : null));\n\n    this.setState({ data });\n\n    let updates = {};\n    updates[`/${currentUserUid}`] = data;\n  \n    return firebase.database().ref().update(updates);\n  }\n\n  //rendre une liste privée\n  changeLocked = (item, title) => {\n    const { currentUserUid } = this.state;\n    item.locked = !item.locked;\n\n    let updates = {};\n    updates[`/${currentUserUid}/${title}/`] = item;      \n    return firebase.database().ref().update(updates);\n  }\n\n  //cache ou non une catégorie\n  categoryVisible = elt => {\n  const { currentUserUid, currentTitre } = this.state;\n  const currentCategory = elt.titreCat;\n\n  elt.categoryIsVisible = !elt.categoryIsVisible;\n\n  let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/`] = elt;\n          \n  return firebase.database().ref().update(updates);\n  }\n\n  itemVisible = item => {\n    const { currentUserUid, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    item.itemIsVisible = !item.itemIsVisible;\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n          \n  return firebase.database().ref().update(updates);\n  }\n\n  // Créer une catégorie dans la liste de course\n  createNewCategory = event => {\n    event.preventDefault();\n    const { currentUserUid, currentTitre, currentCategory, choixComponent } = this.state;\n    const formInput = document.querySelector('#myForm>input');\n    const todoFormButton = document.querySelector('#myForm>button');\n    let category = '';\n    if(currentCategory === 'Ajout de dernière minute' && choixComponent === 'enCourse') {\n      category = 'Ajout de dernière minute';\n    } else {\n      const cat = formInput.value;\n      category = cat.charAt(0).toUpperCase() + cat.substring(1).toLowerCase();\n    }\n    \n    if(formInput.value === '') {\n      this.setState({ \n        showForm: false\n      });\n      return null\n    }\n    //insérer une catégorie sans exemple de produit!\n    const data = {\n      titreCat: category,\n      categoryIsVisible: true\n    }\n    //on regarde si la catégorie existe déjà\n    let categoryExist = false;\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot) {\n        return categoryExist = childSnapshot.val().titreCat === category ? true : false;\n      });\n    });\n    //si la catégorie n'existe pas, on la push dans la bdd\n    if(!categoryExist) {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).push({\n        ...data\n      });\n      this.setState({\n        currentCategory: category,\n        isCategory: false,\n        showForm: true\n      });\n      this.animFormButton(todoFormButton);\n    } else { // si elle existe message d'alerte\n      this.error('Cette catégorie existe déjà!');\n    }\n    formInput.value = '';\n  }\n\n  //message qui annonce la catégorie sélectionnée\n  success = text => {\n    message.config({\n      top: 90,\n      duration: 2\n    });\n    message.success(`${text}`);\n  };\n\n  //prend la catégorie choisie au clic\n  getCurrentCategory = titreCat => {\n    const currentCategory = titreCat;\n    this.setState({ \n      currentCategory, \n      isCategory: false,\n      showForm: true\n     });\n    this.success(titreCat);\n  }\n\n  // Bouton switch pour choisir entre produit et catégorie\n  toggleSwitch = checked => {\n    this.setState({ isCategory : checked === false ? false : true });\n  }\n\n  //bouton switch pour choisir entre collapse et liste\n  toggleSwitchType = checked => {\n    this.setState({ isToggleSwitchType : checked === false ? false : true });\n}\n\n  // Créer un élément de liste de course\n  createNewItem = event => {\n    event.preventDefault();\n    const { currentUserUid, currentCategory, currentTitre } = this.state;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const dataElt = todoFormInput.value;\n    const newData = dataElt.charAt(0).toUpperCase() + dataElt.substring(1).toLowerCase();\n\n    if(todoFormInput.value === '') {\n      this.setState({ \n        showForm: false\n      });\n      return null\n    }\n\n    if(currentCategory === 'Ma super catégorie') {\n      this.createNewCategory(event);\n      return null;\n    }\n\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n  }\n\n  // Ajout d'un titre de liste de course\n  addNewListTitre = event => {\n    event.preventDefault();\n    const { currentUserUid } = this.state;\n    const formInput = document.querySelector('#form-input');\n    const todoFormButton = document.querySelector('#myButtonSubmit');\n    const titre = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n\n    this.setState(prevState => ({\n      listeDeBase: [...prevState.listeDeBase, titre],\n      isCategory: true\n    }));\n\n    firebase.database().ref(`${currentUserUid}/${titre}`).set({\n      locked: false\n    });\n\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n  }\n\n  // Détecte quelle liste à été choisie\n  choixListe = title => {\n    this.setState({\n      currentTitre: title,\n      clicked: true\n    });\n  }\n\n  // En Course --------> Check toute la catégorie\n  checkCurrentCategory = titreCat => {\n    const titre = document.getElementById(`titreCat-${titreCat}`);\n    titre.lastChild.firstChild.classList.toggle('hidden');\n  }\n\n  // EN COURSE --------> Crée un item dans la catégorie derniere minute\n  createNewItemLastMinute = event => {\n    event.preventDefault();\n    const todoFormInput = document.querySelector('.formu>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    if(!newData) {\n      return\n    }\n    const { currentUserUid, currentCategory, currentTitre, lastMinuteItem } = this.state;\n    const timestamp = Date.now();\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    //on regarde si la catégorie existe déjà pour ne pas en recréer une identique\n    let hasTitreCat = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n         return hasTitreCat = childSnapshot.val().titreCat === 'Ajout de dernière minute';\n      });\n    });\n\n    if(currentCategory === 'Ajout de dernière minute' && !lastMinuteItem && !hasTitreCat) {\n      this.createNewCategory(event);\n      this.setState({ lastMinuteItem: true });\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n    this.setState({ showForm: false });\n  }\n\n  // utilisé sur bouton pour retour en arrière\n  goHome = () => {\n    this.setState({ clicked: false, isCategory: true });\n  }\n\n  // retour au menu de l'accueil\n  returnToApp = () => {\n    this.setState({ choixComponent: 'menu' });\n  }\n\n  // détecte le composant choisi à l'accueil\n  choixComponent = event => {\n    const choixComponent = event.target.name;\n    if(choixComponent !== '') {\n      if(choixComponent === 'enCourse') {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ajout de dernière minute',\n          showForm: false\n        });\n      } else {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ma super catégorie',\n          showForm: false\n        });\n      }\n    }\n  }\n\n  hideText = () => {\n    const clickedText = this.state.clickedText;\n    this.setState({ clickedText : !clickedText });\n}\n\ndeconnexion = () => {\n  firebase.auth().signOut().then(function() {\n    this.setState({ isSignedIn: false });\n  }).catch(function(error) {\n    console.log(error);\n  });\n}\n\n//choix composant via headermenu\nhandleClick = event => {\n  const choixComponent = event.key;\n  if(choixComponent !== '') {\n    if(choixComponent === 'enCourse') {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ajout de dernière minute',\n        clicked: false,\n        currentTitre: '',\n        showForm: false\n      });\n    } else {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ma super catégorie',\n        clicked: false,\n        currentTitre: '',\n        showForm: false,\n        isCategory: true\n      });\n    }\n  }\n}\n\n  //renvoie dans le render le composent choisit\n  renderChoiseConponent = () => {\n    const { choixComponent } = this.state;\n    switch(choixComponent) {\n      case 'enCourse':\n      return <EnCourse\n                returnToApp={this.returnToApp}\n                choixListe={this.choixListe}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                createNewItemLastMinute={this.createNewItemLastMinute}\n                goHome={this.goHome}\n                currentTitre={this.state.currentTitre}\n                data={this.state.data}\n                checkCurrentCategory={this.checkCurrentCategory}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                largeur={this.state.largeur}\n                modalContentCourse={this.modalContentCourse}\n                showFormulaire={this.showFormulaire}\n                showForm={this.state.showForm}\n                handleScroll={this.handleScroll}\n                choixUserUid={this.state.choixUserUid}\n              />\n      case 'mesListes':\n      return <Home\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                addNewListTitre={this.addNewListTitre}\n                deleteList={this.deleteList}\n                loading={this.state.loading}\n                data={this.state.data}\n                returnToApp={this.returnToApp}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                createNewCategory={this.createNewCategory}\n                isCategory={this.state.isCategory}\n                currentCategory={this.state.currentCategory}\n                toggleSwitch={this.toggleSwitch}\n                numChildCategory={this.state.numChildCategory}\n                deleteCategory={this.deleteCategory}\n                currentTitre={this.state.currentTitre}\n                getCurrentCategory={this.getCurrentCategory}\n                isToggleSwitchType={this.state.isToggleSwitchType}\n                toggleSwitchType={this.toggleSwitchType}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                modalContent={this.modalContent}\n                largeur={this.state.largeur}\n                itemIsVisible={this.state.itemIsVisible}\n                itemVisible={this.itemVisible}\n                handleScroll={this.handleScroll}\n                showForm={this.state.showForm}\n                showFormulaire={this.showFormulaire}\n                categoryVisible={this.categoryVisible}\n                categoryIsVisible={this.state.categoryIsVisible}\n                reloadList={this.reloadList}\n                confirmDelete={this.confirmDelete}\n                cancel={this.cancel}\n                changeLocked={this.changeLocked}\n                choixUserUid={this.state.choixUserUid}\n              />\n      case 'monProfil':\n      return <ProfilUser\n              returnToApp={this.returnToApp}\n              user={this.state.userId}\n              toggleSwitchHelp={this.toggleSwitchHelp}\n              help={this.state.help}\n              toggleSwitchInverseProduit={this.toggleSwitchInverseProduit}\n              inverseProduit={this.state.inverseProduit}\n              userUid={this.state.userUid}\n              changeUserUid={this.changeUserUid}\n              valideChangeUserUid={this.valideChangeUserUid}\n              newUserUid={this.state.newUserUid}\n              choixUserUid={this.state.choixUserUid}\n              choisirUserUid={this.choisirUserUid}\n              linkName={this.state.linkName}\n              followWindow={this.state.followWindow}\n              toggleSwitchFollowWindow={this.toggleSwitchFollowWindow}\n              deconnexion={this.deconnexion}\n              />\n      default:\n      return null\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14}} lg={{ span: 10 }} id='connexion'>\n            <h1>Check-Course</h1>\n            <p>Veuillez vous connecter svp:</p>\n            <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n          </Col>\n        </Row>\n      );\n    }\n    if(this.state.loading) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14 }} lg={{ span: 10}} id='load'>\n            <Loading/>\n            <h3>Chargement du caddie</h3>\n          </Col>\n        </Row>\n      )\n    }\n    \n    return (\n        <Row type=\"flex\" justify=\"space-around\" id='main'>\n          <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} id='mainCol' >\n          <Layout>\n            <Header \n              style={{ \n                padding : this.state.largeur >= 480 ? '0 50px' : '0'\n              }}>\n              <Col xs={0} lg={4}>\n                {\n                  this.state.largeur >= 480 ? \n                  <h4><Icon type=\"shopping-cart\" />Check-Course</h4>\n                  :\n                  null\n                }\n              </Col>\n              <Col xs={24} lg={20} \n                style={{\n                  textAlign : this.state.largeur >= 480 ? 'right' : 'center',\n                  fontSize : this.state.largeur >= 480 ? '0.9em' : '0.7em'\n                }}\n              >\n                  <HeaderMenu\n                    handleClick={this.handleClick}\n                    choixComponent={this.choixComponent}\n                    choixComponentState={this.state.choixComponent}\n                  />\n              </Col>\n            </Header>\n          <Content>\n            \n            {\n              this.state.choixComponent === 'menu' ?\n              <>\n                <Col span={24} id={this.state.largeur >= 480 ? 'bckLogo' : 'bckLogo2'}>\n                  <Icon type=\"shopping-cart\" />\n                  <h2>CHECK-COURSE</h2>\n                </Col>\n                <Menu\n                  choixComponent={this.choixComponent}\n                  user={this.state.userId}\n                  hideText={this.hideText}\n                  clickedText={this.state.clickedText}\n                  help={this.state.help}\n                />\n              </>\n              :\n              this.renderChoiseConponent()\n            }\n            </Content>\n              <Footer>\n                <p>Created By Mikael</p>\n              </Footer>\n            </Layout>\n            </Col>\n          </Row>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { LocaleProvider } from 'antd';\nimport fr_FR from 'antd/lib/locale-provider/fr_FR';\n\nReactDOM.render(\n    <LocaleProvider locale={fr_FR}>\n        <App />\n    </LocaleProvider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}