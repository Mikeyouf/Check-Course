{"version":3,"sources":["img/prochainement2.png","firebase.js","Components/ItemList.js","Components/MyLists.js","Components/Home.js","Components/Loading.js","Components/EnCourseList.js","Components/EnCourse.js","Components/Menu.js","Components/ProfilUser.js","Components/HeaderMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ItemList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","liste","_this$props","currentTitre","data","inverseProduit","arrayData","keys","map","item","category","categoryItem","push","reverse","elt","id","react_default","a","createElement","list","key","concat","titreCat","header","row","type","justify","align","col","xs","md","lg","className","onClick","getCurrentCategory","name","deleteCategory","icon","style","color","fontSize","bordered","dataSource","categoryItems","renderItem","Item","checked","span","sm","isChecked","es_button","background","block","itemVisible","itemIsVisible","delete","border","toggleComment","comment","count","badge","status","state","_this2","_this$props2","largeur","visible","drawerWidth","Fragment","drawer","placement","width","onClose","e","modalContent","Component","MyLists","help","notification","open","message","description","duration","textAlign","window","addEventListener","handleScroll","removeEventListener","isCategory","onScroll","padding","onSubmit","createNewCategory","createNewItem","es_switch","checkedChildren","unCheckedChildren","onChange","toggleSwitch","placeholder","maxLength","Components_ItemList","addComment","titre","titreListe","closeComment","indexItem","currentCategory","numChildCategory","marginRight","goHome","Home","listeDeBase","size","choixListe","deleteList","clicked","Components_MyLists","returnToApp","isToggleSwitchType","toggleSwitchType","followWindow","length","addNewListTitre","Loading","react_loading_default","height","EnCourseList","checkCurrentCategory","createNewItemLastMinute","marginTop","modalContentCourse","EnCourse","Components_EnCourseList","Menu","margin","choixComponent","ProfilUser","user","userUid","newUserUid","choixUserUid","linkName","marginBottom","toggleSwitchHelp","toggleSwitchInverseProduit","toggleSwitchFollowWindow","choisirUserUid","changeUserUid","valideChangeUserUid","HeaderMenu","menu","handleClick","selectedKeys","choixComponentState","mode","Header","Layout","Footer","Content","Meta","Card","TextArea","Input","Option","Select","App","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","animFormButton","button","classList","add","setTimeout","remove","animFormElt","getDataBase","userId","currentUser","ref","on","snapshot","listItem","val","setState","currentUserUid","followers","loading","set","userName","getOtherDataBase","curentUser","handleResize","hauteur","innerHeight","innerWidth","event","isScroll","formElt","document","getElementById","lastPositionY","scrollY","updates","update","target","value","querySelector","parentElement","newData","product","objectSpread","index","forEach","childSnapshot","itemKey","orderByChild","equalTo","collapse","onChangeComment","newComment","items","onChangeCount","newCount","addCount","onChangeTypeCount","newTypeCount","typeCount","_this$state","gutter","slider","min","max","input_number","marginLeft","es_select","defaultValue","autosize","minRows","maxRows","rows","cols","autoFocus","autoComplete","_this$state2","image","skeleton","paragraph","title","alt","src","prochainement","card","paddingTop","cover","avatar","backgroundColor","preventDefault","show","formInput","todoFormButton","prevState","success","timestamp","Date","now","todoFormInput","toConsumableArray","console","log","lastMinuteItem","hasTitreCat","hideText","clickedText","deconnexion","signOut","renderChoiseConponent","Components_EnCourse","Components_Home","Components_ProfilUser","config","isSignedIn","totalItem","bind","assertThisInitialized","unregisterAuthObserver","onAuthStateChanged","displayName","uid","_this3","contentElt","childNodes","indexCat","Components_Loading","layout","Components_HeaderMenu","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd395bf6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/prochainement2.cbd80974.png\";","export default {\r\n    apiKey: \"AIzaSyASNdLHf9itHbMfni5KLun3kcA57LFgkFg\",\r\n    authDomain: \"check-list-course.firebaseapp.com\",\r\n    databaseURL: \"https://check-list-course.firebaseio.com\",\r\n    projectId: \"check-list-course\",\r\n    storageBucket: \"check-list-course.appspot.com\",\r\n    messagingSenderId: \"873680903792\"\r\n}","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport { List, Row, Col, Icon, Button, Badge, Drawer } from 'antd';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n         }\r\n    }\r\n    liste = () => {\r\n        const { currentTitre, data, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        return (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                        <Col xs={21} md={22}  lg={23} className='titreCat' onClick={() => this.props.getCurrentCategory(elt.titreCat, elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                        <Col xs={3} md={2} lg={1}>\r\n                            <button \r\n                            name=\"trash\" \r\n                            className=\"trash\" \r\n                            onClick={() => this.props.deleteCategory(elt, id)}>\r\n                                <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} >\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={item.key}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={12} sm={15} md={15} lg={18} onClick={() => this.props.isChecked(item, id)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Button \r\n                                            style={{ background: 'transparent' }}\r\n                                            name=\"isVisible\" \r\n                                            className=\"trash\"\r\n                                            type='primary'\r\n                                            block\r\n                                            onClick={() => this.props.itemVisible(item, id)}>\r\n                                                {\r\n                                                    item.itemIsVisible ?\r\n                                                    <i className=\"far fa-eye\"></i>\r\n                                                    :\r\n                                                    <i className=\"far fa-eye-slash\"></i>\r\n                                                }\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                            <Button \r\n                                                style={{ background: 'transparent' }}\r\n                                                name=\"trash\" \r\n                                                className=\"trash\"\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.delete(item, id)}>\r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            </Button>\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Button \r\n                                            name=\"comment\" \r\n                                            className='comment' \r\n                                            style={{ background: 'transparent', border: 'none' }}\r\n                                            type='primary'\r\n                                            block\r\n                                            onClick={() => this.props.toggleComment(item)}>\r\n                                            >\r\n                                            {\r\n                                                item.comment === '' && item.count === 0 ?\r\n                                                <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                :\r\n                                                <Badge status=\"success\">\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                </Badge>\r\n                                            }\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                    </List.Item>\r\n                    )}\r\n            />\r\n    \r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible } = this.props;\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        return ( \r\n            <>\r\n            {this.liste()}\r\n                <Drawer\r\n                    // title='commentaire'\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={this.props.visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContent(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, notification, Switch } from 'antd';\r\n\r\nimport ItemList from './ItemList';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Ajouter une catégorie',\r\n        description: \"Pour ajouter une catégorie, cliquez sur \\\"Ajouter une catégorie\\\" et écrivez le nom que vous désirez, par exemple \\\"Boissons\\\". Pour finaliser, cliquez sur le +.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Ajouter un produit',\r\n                description: \"Pour ajouter un produit, cliquez sur \\\"Ajouter un produit\\\" et écrivez le nom que vous désirez, par exemple \\\"Eau\\\". Pour finaliser, cliquez sur le +. Vous pouvez ajouter autant de produits que vous le désirez.\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                  onClose: () => {\r\n                    notification.open({\r\n                        message: 'Astuce!',\r\n                        description: \"Pour ajouter un produit dans une catégorie existente, cliquez sur le nom de la catégorie voulue, ensuite il vous suffit d'ajouter un produit.\",\r\n                        duration: 0,\r\n                        style: {\r\n                            textAlign: 'justify'\r\n                          }\r\n                      });\r\n                  }\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass MyLists extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n    \r\n    render() { \r\n        const { isCategory } = this.props;\r\n        return ( \r\n            <Col onScroll={e => this.props.handleScroll(e)} className='containerList'>\r\n                <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{this.props.currentTitre}</h3>\r\n                </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                        <form className='form form-titre' id='myForm' onSubmit={isCategory === true ? e => this.props.createNewCategory(e) : e => this.props.createNewItem(e)}>\r\n                        {/* <Col span={2} > */}\r\n                            <Switch checkedChildren=\"C\" unCheckedChildren=\"P\" checked={isCategory === true ? true : false}  onChange={this.props.toggleSwitch} id='switchButton'/>\r\n                        {/* </Col> */}\r\n                        {/* <Col span={20} > */}\r\n                            <input id='myInput' type='text' placeholder={isCategory === true ? 'Ajouter une catégorie' : 'Ajouter un produit'} maxLength={40} />\r\n                        {/* </Col> */}\r\n                        {/* <Col span={2}> */}\r\n                            <button type='submit' id='buttonSubmit'>+</button>\r\n                        {/* </Col> */}\r\n                        </form>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <ItemList\r\n                            data={this.props.data}\r\n                            isChecked={this.props.isChecked}\r\n                            delete={this.props.delete}\r\n                            toggleComment={this.props.toggleComment}\r\n                            addComment={this.props.addComment}\r\n                            titre={this.props.titreListe}\r\n                            closeComment={this.props.closeComment}\r\n                            indexItem={this.props.indexItem}\r\n                            currentCategory={this.props.currentCategory}\r\n                            numChildCategory={this.props.numChildCategory}\r\n                            deleteCategory={this.props.deleteCategory}\r\n                            currentTitre={this.props.currentTitre}\r\n                            getCurrentCategory={this.props.getCurrentCategory}\r\n                            inverseProduit={this.props.inverseProduit}\r\n                            visible={this.props.visible}\r\n                            onClose={this.props.onClose}\r\n                            item={this.props.item}\r\n                            modalContent={this.props.modalContent}\r\n                            largeur={this.props.largeur}\r\n                            itemIsVisible={this.props.itemIsVisible}\r\n                            itemVisible={this.props.itemVisible}\r\n                        />\r\n                    </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyLists;","import React, { Component } from 'react';\r\n\r\nimport MyLists from './MyLists';\r\n\r\nimport { Button, Icon, Col, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Créer une liste de course',\r\n        description: \"Pour créer une liste, il vous suffit simplement d'écrire son nom dans la case \\\"ajouter une liste\\\" et de cliquer sur le +. Ensuite cliquez sur le nom de votre liste qui vient d'apparaitre en dessous. Vous pouvez en créer maximum 3.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        // onClose: () => {\r\n        //   alert('clicked');\r\n        // },\r\n      });\r\n  };\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const indexItem = this.props.indexItem;\r\n        const listeDeBase = this.props.listeDeBase;\r\n        return listeDeBase.map((item, id) => \r\n        item !== 'user'?\r\n        <div key={id}>  \r\n            <Col xs={{ span: 22 }} md={{ span: 23 }} lg={{ span: 23 }} key={`elt-${item}`}>\r\n                <Button \r\n                    size='large' \r\n                    block \r\n                    type=\"primary\"\r\n                    id={item}\r\n                    onClick={e => this.props.choixListe(e)}\r\n                    className={indexItem === `elt-${item}` ? 'item-titre message-leave': 'item-titre'}\r\n                    >\r\n                        {item}\r\n                </Button>\r\n            </Col>\r\n            <Col xs={{ span: 2 }} md={{ span: 1 }} lg={{ span: 1 }} key={`delete-${id}`}>\r\n                <Button \r\n                    size='large' \r\n                    name=\"trash\" \r\n                    type=\"primary\"\r\n                    block \r\n                    className=\"trash\" \r\n                    onClick={() => this.props.deleteList(item)}\r\n                >  \r\n                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                </Button>\r\n            </Col>\r\n        </div>\r\n        : null\r\n        )};\r\n    render() {\r\n        const listeDeBase = this.props.listeDeBase;\r\n        return (\r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    { \r\n                        listeDeBase.length >= 4 ?\r\n                        null\r\n                        :\r\n                        <form className='formulaire form-titre' onSubmit={e => this.props.addNewListTitre(e)}>\r\n                            <input type='text' id='form-input' placeholder='Ajouter une liste' maxLength={30}/>\r\n                            <button type='submit' id='myButtonSubmit'>+</button>\r\n                        </form>\r\n                    }\r\n                </Col>\r\n                    <>\r\n                        {this.liste()}\r\n                    </>\r\n                    <Col span={6} style={{ marginRight: '1em' }}>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n                <MyLists\r\n                    currentTitre={this.props.currentTitre}\r\n                    createNewItem={this.props.createNewItem}\r\n                    data={this.props.data}\r\n                    isChecked={this.props.isChecked}\r\n                    delete={this.props.delete}\r\n                    toggleComment={this.props.toggleComment}\r\n                    addComment={this.props.addComment}\r\n                    titreListe={this.props.titreListe}\r\n                    returnToApp={this.props.returnToApp}\r\n                    closeComment={this.props.closeComment}\r\n                    goHome={this.props.goHome}\r\n                    indexItem={this.props.indexItem}\r\n                    createNewCategory={this.props.createNewCategory}\r\n                    isCategory={this.props.isCategory}\r\n                    toggleSwitch={this.props.toggleSwitch}\r\n                    numChildCategory={this.props.numChildCategory}\r\n                    deleteCategory={this.props.deleteCategory}\r\n                    getCurrentCategory={this.props.getCurrentCategory}\r\n                    isToggleSwitchType={this.props.isToggleSwitchType}\r\n                    toggleSwitchType={this.props.toggleSwitchType}\r\n                    help={this.props.help}\r\n                    inverseProduit={this.props.inverseProduit}\r\n                    visible={this.props.visible}\r\n                    onClose={this.props.onClose}\r\n                    item={this.props.item}\r\n                    modalContent={this.props.modalContent}\r\n                    largeur={this.props.largeur}\r\n                    itemIsVisible={this.props.itemIsVisible}\r\n                    itemVisible={this.props.itemVisible}\r\n                    handleScroll={this.props.handleScroll}\r\n                    followWindow={this.props.followWindow}\r\n                />\r\n            </Col>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => (\r\n    <ReactLoading \r\n    type=\"cylon\" \r\n    color=\"#078073\" \r\n    className=\"load\"\r\n    id=\"load\"\r\n    height={200}\r\n    width={200}\r\n    />\r\n)\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, List, Row, Badge, notification, Drawer  } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Astuce',\r\n        description: \"Lorsque vous faites vos courses, il suffit de cliquer sur un produit pour qu'il soit \\\"barré\\\" et \\\"grisé\\\".\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Astuce',\r\n                description: \"Vous ouvez rajouter un produit de dernière minute en l'ajoutant dans la case \\\"Entrez un produit\\\".\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n              });\r\n            }\r\n      });\r\n  };\r\n\r\nclass EnCourseList extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const { currentTitre, data, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        \r\n        return (arrayData || []).map((elt, id) => \r\n        // <Col span={largeur > 720 ? 12 : 24}  key={`list-${id}`}>\r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle' style={{height: '2.5em'}}>\r\n                        <Col span={24} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <>\r\n                    {\r\n                    item.itemIsVisible ?\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} >\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={item.key}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={20} sm={21} md={21} lg={22} onClick={() => this.props.isChecked(item, id)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' && item.count === 0 ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                    </List.Item>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                    )}\r\n            />\r\n            // {/* </Col> */}\r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible } = this.props;\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        return ( \r\n            <>\r\n                <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{this.props.currentTitre}</h3>\r\n                </Col>\r\n                    {/* largeur > 720 ?  */}\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                        <form className='formu formu-titre enCourse-formu-titre' onSubmit={this.props.createNewItemLastMinute}>\r\n                            <input type='text' placeholder='Produit de dernière minute' maxLength={40} />\r\n                            <button type='submit' id='buttonSubmit'>+</button>\r\n                        </form>\r\n                    </Col>\r\n                    {/* : */}\r\n                    {/* <Icon type=\"plus-circle\" style={{ position: 'fixed', top: '12%', left: '5%', color: '#009688', fontSize: '2.5em', cursor: 'pointer', zIndex: '5' }}/> */}\r\n                    {/* <button type='submit' id='buttonSubmit' style={{ position: 'fixed', top: '20%', left: '10%' }} >+</button> */}\r\n                <Col span={24} style={{ marginTop: '2em' }}>\r\n                {/* <Row gutter={16}>  */}\r\n                    {this.liste()}\r\n                {/* </Row> */}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={this.props.visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContentCourse(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseList;","import React, { Component } from 'react';\r\nimport { Button, Icon, Col } from 'antd';\r\n\r\n// import MyLists from './MyLists';\r\nimport EnCourseList from './EnCourseList';\r\n\r\nclass EnCourse extends Component {\r\n    liste = () => {\r\n        const listeDeBase = this.props.listeDeBase;\r\n        return listeDeBase.map((item, id) =>\r\n            item !== 'user'?\r\n            <Button \r\n                    size='large' \r\n                    block \r\n                    type=\"primary\" \r\n                    key={id}\r\n                    id={item}\r\n                    onClick={e => this.props.choixListe(e)}\r\n                    className='item-button'\r\n                    >\r\n                {item}\r\n            </Button>\r\n            :\r\n            null\r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                </>\r\n                :\r\n                <Col span={24}>\r\n                    <EnCourseList\r\n                        currentTitre={this.props.currentTitre}\r\n                        createNewItemLastMinute={this.props.createNewItemLastMinute}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titreListe={this.props.titreListe}\r\n                        returnToApp={this.props.returnToApp}\r\n                        closeComment={this.props.closeComment}\r\n                        goHome={this.props.goHome}\r\n                        indexItem={this.props.indexItem}\r\n                        checkCurrentCategory={this.props.checkCurrentCategory}\r\n                        help={this.props.help}\r\n                        inverseProduit={this.props.inverseProduit}\r\n                        visible={this.props.visible}\r\n                        onClose={this.props.onClose}\r\n                        item={this.props.item}\r\n                        largeur={this.props.largeur}\r\n                        modalContentCourse={this.props.modalContentCourse}\r\n                    />\r\n                </Col>\r\n            }\r\n            \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourse;","import React, { Component } from 'react';\r\n\r\nimport '../NewApp.css';\r\n\r\nimport { Button, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Liste de course interactive',\r\n        description: \"Bienvenue sur votre application de liste de course. Pour commencer, veuillez cliquer sur \\\"créer une liste\\\". Si vous avez déjà créé une liste, cliquez sur \\\"En course\\\" lorsque vous faites vos course.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          }\r\n      });\r\n  };\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                        <Button \r\n                            style={{ margin : '1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='enCourse'\r\n                            onClick={this.props.choixComponent}\r\n                            >Faire ses courses\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='mesListes'\r\n                            onClick={this.props.choixComponent}\r\n                        >Créer une liste\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\" \r\n                            className='item-button'\r\n                            name='monProfil'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mon profil\r\n                        </Button>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Row, Col, notification, Switch } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Votre profil',\r\n        description: \"Bientôt vous aurez la possibilité de modifier votre profil et bien plus encore!\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Se connecter à un autre profil',\r\n                description: \"Il vous suffit de recopier l'identifiant de la liste que vous souhaitez rejoindre et de valider. Ensuite cliquez sur cette liste pour la rejoindre!\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                // onClose: () => {\r\n                //   alert('clicked');\r\n                // },\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass ProfilUser extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const { user, help, inverseProduit, userUid, newUserUid, choixUserUid, linkName, followWindow } = this.props;\r\n        return ( \r\n            <Col span={24}>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col  xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                    <h2>Bienvenue sur votre profil {user}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Aide : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={help === true ? true : false} onChange={this.props.toggleSwitchHelp} id='switchButtonHelp'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Inverser l'ordre des produits : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={inverseProduit === true ? true : false} onChange={this.props.toggleSwitchInverseProduit} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Case d'ajout de produit qui suit l'écran : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={followWindow === true ? true : false} onChange={this.props.toggleSwitchFollowWindow} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Votre identifiant : </b>{userUid}</span>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                        <Button block type={choixUserUid ? \"primary\" : \"default\"} name={userUid}  onClick={!choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                        {choixUserUid ? <span>Votre liste</span>: <span>Rejoindre votre liste</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <Button block type={choixUserUid ? \"default\" : \"primary\"} name={newUserUid} onClick={choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                            {choixUserUid ? <span>Rejoindre la liste de {linkName}</span>: <span>Liste de {linkName}</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Ajouter un identifiant : </b></span>\r\n                        <input type='text' placeholder='Entrez le nouvel identifiant' onChange={this.props.changeUserUid} />\r\n                        <Button type=\"primary\" onClick={this.props.valideChangeUserUid} className='changeUid'>\r\n                            <Icon type=\"check\" />Valider\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row type='flex' justify='left'>\r\n                    <Col span={6}>\r\n                    <div className='button-anth'>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilUser;","import React, { Component } from 'react';\r\n\r\nimport { Menu, Icon } from 'antd';\r\n\r\nclass HeaderMenu extends Component {\r\n    render() { \r\n        return ( \r\n            <Menu\r\n            onClick={this.props.handleClick}\r\n            selectedKeys={[this.props.choixComponentState]}\r\n            mode=\"horizontal\"\r\n          >\r\n            <Menu.Item key=\"menu\">\r\n                <Icon type=\"home\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"mesListes\">\r\n                <Icon type=\"ordered-list\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"enCourse\">\r\n                <Icon type=\"shopping\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"monProfil\">\r\n                <Icon type=\"user\" />\r\n            </Menu.Item>\r\n          </Menu>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HeaderMenu;","import React, { Component } from 'react';\n// import './App.css';\nimport './NewApp.css';\nimport 'antd/dist/antd.css';\nimport './animations.css';\n\nimport * as firebase from 'firebase';\nimport config from './firebase';\n\n//ANT design\nimport { \n  Row, Col, Layout, Icon, message, Input, Slider, InputNumber, Select, Card, Avatar, Skeleton \n} from 'antd';\n\nimport Home from './Components/Home';\nimport Loading from './Components/Loading';\nimport EnCourse from './Components/EnCourse';\nimport Menu from './Components/Menu';\nimport ProfilUser from './Components/ProfilUser';\nimport HeaderMenu from './Components/HeaderMenu';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport prochainement from './img/prochainement2.png';\n\nconst {\n  Header, Footer, Content,\n} = Layout;\nconst { Meta } = Card;\n\nconst {TextArea} = Input;\nconst Option = Select.Option;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    firebase.initializeApp(config);\n        this.state = {\n            listeDeBase: [],\n            data: [],\n            item: null,\n            titreListe: [],\n            currentTitre: '',\n            choixComponent: 'menu',\n            currentCategory: '' || 'Ma super catégorie',\n            numChildCategory: 0,\n            isSignedIn: false,\n            clicked: false, \n            loading: true,\n            goHome: false,\n            isCategory: true,\n            clickedText : false,\n            indexItem: null,\n            isToggleSwitchType: false,\n            help: true,\n            inverseProduit: true,\n            userId: '' || 'Mikael',\n            userUid: '',\n            newUserUid: '',\n            choixUserUid: true,\n            currentUserUid: '',\n            linkName: '',\n            followers: [],\n            count: 0,\n            typeCount: 'unité',\n            newComment: '',\n            visible: false, //affiche le drawer\n            itemIsVisible: 'true', //affaiche ou non l'item dans la liste de course\n            totalItem: 0,\n            isScroll: 0,\n            followWindow: true,\n            largeur: 0,\n            hauteur: 0,\n            lastMinuteItem: false //verifie si un item a ete ajoute a la derniere minute\n        };\n      this.delete = this.delete.bind(this);\n      this.deleteCategory = this.deleteCategory.bind(this);\n      this.createNewItem = this.createNewItem.bind(this);\n      this.addNewListTitre = this.addNewListTitre.bind(this);\n      this.deconnexion = this.deconnexion.bind(this);\n}\n\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\ncomponentDidMount() {\n  const loading = this.state.loading;\n  if(loading) {\n    this.getDataBase();\n  }\n  //détection du changement de taille d'écran\n  this.handleResize();\n  window.addEventListener('resize', this.handleResize);\n  // window.addEventListener('scroll', this.handleScroll);\n\n  this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        if(user) {\n          this.setState({\n            isSignedIn: !!user, \n            userId: user.displayName,\n            userUid: user.uid\n          });\n        } else {\n          return null\n        }\n      }\n  );\n  // console.log(this.unregisterAuthObserver());\n  \n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('resize', this.handleResize); //on enlève l'évènement qui regarde la taille de la fenêtre\n  // window.removeEventListener('scroll', this.handleScroll);\n  this.unregisterAuthObserver();\n}\n\n  animFormButton = (button) => {\n    button.classList.add('formButton-active');\n    setTimeout(() => {\n        button.classList.remove('formButton-active');\n    }, 500);\n  }\n\n  animFormElt = (elt) => {\n    elt.classList.add('message-enter');\n  }\n\n  getDataBase = () => {\n    setTimeout(() => {\n    const user = this.state.userId;\n    const choixUserUid = this.state.choixUserUid;\n    const userUid = this.state.userUid;\n    const newUserUid = this.state.newUserUid;\n    const currentUser = choixUserUid ? userUid : newUserUid;\n    const ref = firebase.database().ref(`${currentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${userUid}/user/`).on('value', snapshot => {\n              this.setState({ \n                help: snapshot.val().help,\n                inverseProduit: snapshot.val().inverseProduit,\n                userUid: snapshot.val().userUid,\n                newUserUid: snapshot.val().newUserUid,\n                choixUserUid: snapshot.val().choixUserUid,\n                currentUserUid: snapshot.val().choixUserUid === true ? snapshot.val().userUid : snapshot.val().newUserUid,\n                linkName: snapshot.val().linkName,\n                followers: snapshot.val().followers,\n                followWindow: snapshot.val().followWindow\n               });\n               if(snapshot.val().choixUserUid) {\n                firebase.database().ref(`${currentUser}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               } else {\n                const newUserUid = snapshot.val().newUserUid;\n                firebase.database().ref(`${newUserUid}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               }\n            });\n            \n            } else {\n              firebase.database().ref(`${userUid}`).set({\n                user: {\n                  userName: user,\n                  userUid: userUid,\n                  newUserUid: '',\n                  help: true,\n                  inverseProduit: true,\n                  choixUserUid: choixUserUid,\n                  linkName: '',\n                  followers: [],\n                  followWindow: true\n                }\n              });\n              this.setState({\n                loading: false\n            });\n          }\n        });\n      }, 2000);\n  }\n\n  //charger la database du compte sélectionné\n  getOtherDataBase = (linkName) => {\n    const curentUser = this.state.currentUserUid;\n    const user = this.state.userId;\n    const ref = firebase.database().ref(`${curentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${curentUser}/user`).on('value', snapshot => {\n              this.setState({ \n                linkName: snapshot.val().userName === user ? linkName : snapshot.val().userName  //probleme quand retour sur user d'origine\n               });\n            });\n            firebase.database().ref(`${curentUser}`).on('value', snapshot => {\n              Object.keys(snapshot.val()).map(item =>\n                listItem.push(item)\n              );\n                this.setState({\n                  listeDeBase: listItem,\n                  data: snapshot.val(),\n                  loading: false\n                  });\n              });\n            }\n        });\n        \n  }\n\n  //détecter la taille de la fenêtre\n  handleResize = () => this.setState({\n    hauteur: window.innerHeight,\n    largeur: window.innerWidth\n  });\n\n  // detection du scroll\n  handleScroll = event => {\n    const followWindow = this.state.followWindow;\n    let isScroll = 0;\n    const formElt = document.getElementById('myForm');\n    let lastPositionY = window.scrollY;\n    if(formElt && followWindow) {\n      if(isScroll !== lastPositionY && lastPositionY > 80) {\n        formElt.classList.add('opacity');\n        if(lastPositionY > 80) {\n          formElt.classList.add('fixedPosition');\n        }\n        setTimeout(() => {\n          isScroll = lastPositionY;\n          formElt.classList.remove('opacity');\n        }, 600);\n      }\n      if(lastPositionY <= 80) {\n        formElt.classList.remove('fixedPosition');\n      }\n    }\n}\n\n  // on ou off de l'aide\n  toggleSwitchHelp = (checked) => {\n    const user = this.state.userUid;\n    const help = this.state.help;\n    this.setState({ help : checked === true ? false : true });\n    let updates = {};\n    updates[`${user}/user/help`] = !help;\n    return firebase.database().ref().update(updates);\n  }\n\n  // on ou off pour inverser l'ordre des produits\n  toggleSwitchInverseProduit = (checked) => {\n    const user = this.state.userUid;\n    const inverseProduit = this.state.inverseProduit;\n    this.setState({ inverseProduit : checked === true ? true : false });\n    let updates = {};\n    updates[`${user}/user/inverseProduit`] = !inverseProduit;\n    return firebase.database().ref().update(updates);\n  }\n\n  toggleSwitchFollowWindow = checked => {\n    const user = this.state.userUid;\n    const followWindow = this.state.followWindow;\n    this.setState({ followWindow : checked === true ? true : false });\n    let updates = {};\n    updates[`${user}/user/followWindow`] = !followWindow;\n    return firebase.database().ref().update(updates);\n  }\n\n  // changer l'uid pour rejoindre une liste\n  changeUserUid = (event) => {\n    const newUserUid = event.target.value;\n    this.setState({ newUserUid });\n  }\n\n  //valider le changement de l'uid\n  valideChangeUserUid = () => {\n    const newUserUid = this.state.newUserUid;\n    const user = this.state.userUid;\n    const userId = this.state.userId;\n    const followers = [];\n    //on rajoute le nom du followers\n    followers.push(userId);\n    let updates = {};\n    firebase.database().ref(`${newUserUid}/user/userName`).on('value', snapshot => {\n      this.setState({ \n        linkName: snapshot.val(),\n        followers\n      });\n      updates[`${user}/user/linkName`] = snapshot.val();\n      firebase.database().ref().update(updates);\n\n    });\n    updates[`${user}/user/newUserUid`] = newUserUid;\n    firebase.database().ref().update(updates);\n\n    // console.log(followers);\n    updates[`${newUserUid}/user/followers`] = followers;\n    firebase.database().ref().update(updates);\n  }\n\n  choisirUserUid = (event) => {\n    const choixUserUid = this.state.choixUserUid;\n    const user = this.state.userUid;\n    const linkName = this.state.linkName;\n    // console.log( 'choisir la db de', linkName);\n    this.setState({ \n      choixUserUid: !choixUserUid,\n      currentUserUid: event.target.name\n    });\n\n    const choixDB = !choixUserUid;\n    if(choixDB) {\n      setTimeout(() => {\n        this.getDataBase();\n      }, 2000);\n    } else {\n      setTimeout(() => {\n        this.getOtherDataBase(linkName);\n      }, 2000);\n    }\n    \n\n    let updates = {};\n    updates[`${user}/user/choixUserUid`] = !choixUserUid;\n    firebase.database().ref().update(updates);\n  }\n\n  // Regarde si un produit est checked en mode collapse\n  isChecked = (item, id) => {\n    const user = this.state.currentUserUid;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    // console.log(collapse);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    // console.log(currentCategory);\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{checked : true} } : product));\n    item.checked = !item.checked;\n\n    this.setState({ data: newData });\n    // A ESSAYER POUR METTRE A JOUR LE STATE\n    // this.setState(state => {\n    //   const data = state.data.map((item, j) => {\n    //     if (j === id) {\n    //       return item.checked = !item.checked;\n    //     } else {\n    //       return item;\n    //     }\n    //   });\n\n    //   return {\n    //     data,\n    //   };\n    // });\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n}\n  // Delete un produit\n  delete(item, id){\n    const user = this.state.currentUserUid;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const contentElt = collapse.parentElement.parentElement.parentElement.parentElement.childNodes;\n    const currentTitre = this.state.currentTitre;\n    \n    this.setState({ \n      indexItem: `elt-${item.item}`,\n      numChildCategory: contentElt.length\n  });\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    if(contentElt.length === 1) {\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n        const indexCat = snapshot.key;\n          setTimeout(() => {\n            firebase.database().ref(`${user}/${currentTitre}/category/${indexCat}`).remove();\n          }, 200);\n      });\n      setTimeout(() => {\n        this.setState({ indexItem: null});\n      }, 410);\n    } else {\n        firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n          snapshot.forEach(function(childSnapshot){\n            setTimeout(() => {\n              const indexItem = childSnapshot.key;\n              firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems/${indexItem}`).remove();\n            }, 400);\n          });\n        });\n        setTimeout(() => {\n          this.setState({ indexItem: null});\n        }, 210);\n    }\n  }\n\n  // delete une catégorie\n  deleteCategory = (item, id) => {\n    const user = this.state.currentUserUid;\n    const collapse = document.getElementById(item.titreCat);\n    const currentTitre = this.state.currentTitre;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === collapse.id ? childSnapshot.key : null;\n      });\n    });\n\n    firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').on('value', snapshot => {\n        setTimeout(() => {\n          firebase.database().ref(`${user}/${currentTitre}/category/${index}`).remove();\n        }, 400);\n    });\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n  }\n\n  deleteList = (item) => {\n    const user = this.state.currentUserUid;\n    this.setState({ indexItem: `elt-${item}`});\n\n    setTimeout(() => {\n      firebase.database().ref(`${user}/${item}`).remove();\n    }, 400);\n\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n    \n  }\n\n  onChangeComment = (event, item) => {\n    const newComment = event.target.value;\n    const currentTitre = this.state.currentTitre;\n    const data = this.state.data;\n    Object.keys(data)\n      .map(elt => elt === currentTitre ? Object.keys(data[elt])\n        .map(product => Object.keys(data[elt][product])\n          .map(items => Object.keys(data[elt][product][items].categoryItems)\n            .map(keys => data[elt][product][items].categoryItems[keys].key === item.key ?\n              data[elt][product][items].categoryItems[keys].comment = newComment\n              :\n              keys\n              )\n            )\n              ) : null);\n              \n    this.setState({\n      data,\n      item,\n      newComment\n    });\n  }\n\n  onChangeCount = (value, item) => {\n    const newCount = value;\n    const currentTitre = this.state.currentTitre;\n    const data = this.state.data;\n    Object.keys(data)\n    .map(elt => elt === currentTitre ? Object.keys(data[elt])\n      .map(product => Object.keys(data[elt][product])\n        .map(items => Object.keys(data[elt][product][items].categoryItems)\n          .map(keys => data[elt][product][items].categoryItems[keys].key === item.key ?\n            data[elt][product][items].categoryItems[keys].count = newCount\n            :\n            keys\n            )\n          )\n            ) : null);\n    this.setState({\n      count: newCount,\n      data,\n      item\n    });\n  }\n\n  addCount = item => {\n    const currentTitre = this.state.currentTitre;\n    const data = this.state.data;\n    const newCount = this.state.count;\n    // console.log(\"count\", newCount);\n    Object.keys(data)\n    .map(elt => elt === currentTitre ? Object.keys(data[elt])\n      .map(product => Object.keys(data[elt][product])\n        .map(items => Object.keys(data[elt][product][items].categoryItems)\n          .map(keys => data[elt][product][items].categoryItems[keys].key === item.key ?\n            data[elt][product][items].categoryItems[keys].count = newCount\n            :\n            keys\n            )\n          )\n            ) : null);\n              \n    this.setState({\n      count: newCount\n    });\n  }\n\n  onChangeTypeCount = (value, item) => {\n    const newTypeCount = value;\n    const currentTitre = this.state.currentTitre;\n    const data = this.state.data;\n    Object.keys(data)\n    .map(elt => elt === currentTitre ? Object.keys(data[elt])\n      .map(product => Object.keys(data[elt][product])\n        .map(items => Object.keys(data[elt][product][items].categoryItems)\n          .map(keys => data[elt][product][items].categoryItems[keys].key === item.key ?\n            data[elt][product][items].categoryItems[keys].typeCount = newTypeCount\n            :\n            keys\n            )\n          )\n            ) : null);\n    this.setState({\n      typeCount: newTypeCount,\n      data,\n      item\n    });\n  }\n\n  modalContent = (item) => {\n    const { count, largeur, typeCount } = this.state;\n    return (\n      <>\n        <Row gutter={largeur > 720 ? 12 : 8}>\n          <Col span={ largeur > 720 ? 14 : 24 }>\n            <Slider\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              onChange={e => this.onChangeCount(e, item)}\n              value={typeof count === 'number' ? count : 0}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <InputNumber\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              style={{ marginLeft: 16, width: '90%' }}\n              value={count}\n              onChange={e => this.onChangeCount(e, item)}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <Select defaultValue={typeCount} onChange={e => this.onChangeTypeCount(e, item)} style={{ width: '90%' }}>\n              <Option value='unité'>{count <= 1 ? 'unité' : 'unités'}</Option>\n              <Option value='boite'>{count <= 1 ? 'boite' : 'boites'}</Option>\n              <Option value='litre'>{count <= 1 ? 'litre' : 'litres'}</Option>\n              <Option value='ml'>ml</Option>\n              <Option value='cl'>cl</Option>\n              <Option value='Kilo'>{count <= 1 ? 'kilo' : 'kilos'}</Option>\n              <Option value='Gramme'>{count <= 1 ? 'gramme' : 'grammes'}</Option>\n            </Select>\n          </Col>\n        </Row>\n        <TextArea \n          placeholder='ajouter un commentaire' \n          autosize={{ minRows: 5, maxRows: 10 }} \n          onChange={(e) => this.onChangeComment(e, item)}\n          value={item.comment} \n          rows={10}\n          cols={largeur > 720 ? 50 : 30}\n          autoFocus\n          autoComplete='on'\n          style={{ marginTop: '1em' }}\n        />\n      </>\n    )\n  }\n\n  modalContentCourse = item => {\n    const { count, largeur } = this.state;\n    const image = (\n        <Skeleton paragraph={{ rows: 4, width: ['90%', '90%','90%','90%'] }} title={false}>\n          <img alt=\"prochainement\" src={prochainement} />\n        </Skeleton>\n    )\n    return(\n        <Card\n          style={{ width: largeur > 720 ? '70%' : '90%', paddingTop: '1em'}}\n          cover={image}\n        >\n          <Meta\n            avatar={<Avatar style={{ backgroundColor: '#009688' }} icon=\"user\" />}\n            title={item.item}\n          />\n            <br/>\n            {\n              count ?\n              <>\n              <h4>Quantité</h4>\n              <p>{item.count} {item.typeCount}{count <= 1 ? '': 's'}</p>\n              </>\n              :\n              null\n            }\n            {\n              item.comment ?\n              <>\n                <h4>Commentaire</h4>\n                <p>{item.comment}</p>\n              </>\n              :\n              <>\n                <h4>Commentaire</h4>\n                <p>Rien ici!</p>\n              </>\n            }\n        </Card>\n    )\n  }\n\n  //faire apparaitre/disparaitre la commentaire\n  toggleComment = (item) => {\n    this.setState({ \n      visible: true,\n      item,\n      count: item.count,\n      typeCount: item.typeCount,\n    });\n  }\n\n  onClose = (event, item) => {\n    // this.addCount(item);\n    this.addComment(event, item);\n    this.setState({\n      visible: false,\n      count: 0,\n      typeCount: 'unité',\n    });\n  };\n\n  // Ajouter un commentaire à un élément de la liste\n  addComment = (event, items) => {\n    event.preventDefault();\n    // console.log(items);\n    const user = this.state.currentUserUid;\n    const currentTitre = this.state.currentTitre;\n    const collapse = document.querySelector(`#elt-${items.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const item = this.state.item;\n    // console.log(item);\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(items.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  itemVisible = (items, id) => {\n    const user = this.state.currentUserUid;\n    const currentTitre = this.state.currentTitre;\n    const collapse = document.querySelector(`#elt-${items.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    items.itemIsVisible = !items.itemIsVisible;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(items.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n          \n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = items;\n          \n  return firebase.database().ref().update(updates);\n  }\n\n  // événement qui ferme le commentaire\n  closeComment = (event, item) => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{show : true} } : product));\n    item.show = !item.show;\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // Créer une catégorie dans la liste de course\n  createNewCategory = (event) => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const currentTitre = this.state.currentTitre;\n    const currentCategory = this.state.currentCategory;\n    const formInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('.form>button');\n    let category = '';\n    if(currentCategory === 'Ajout de dernière minute') {\n      category = 'Ajout de dernière minute';\n    } else {\n      category = formInput.value;\n    }\n    \n    if(formInput.value === '') {\n      return null\n    }\n    //Arriver a insérer une catégorie sans exemple de produit!\n    const data = {\n      titreCat: category\n    }\n\n    this.setState(prevState => ({\n      // listeDeBase: [...prevState.listeDeBase, category],\n      currentCategory: category,\n      isCategory: false\n    }));\n    \n    firebase.database().ref(`${user}/${currentTitre}/category`).push({\n      ...data\n    });\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n\n  }\n\n  //message qui annonce la catégorie sélectionnée\n  success = currentTitre => {\n    message.success(`${currentTitre}`);\n  };\n\n  //prend la catégorie choisie au clic\n  getCurrentCategory = (titreCat, elt) => {\n    const currentCategory = titreCat;\n    this.setState({ currentCategory, isCategory: false });\n    this.success(titreCat);\n  }\n\n  // Bouton switch pour choisir entre produit et catégorie\n  toggleSwitch = (checked) => {\n    this.setState({ isCategory : checked === false ? false : true });\n  }\n\n  //bouton switch pour choisir entre collapse et liste\n  toggleSwitchType = (checked) => {\n    this.setState({ isToggleSwitchType : checked === false ? false : true });\n}\n\n  // Créer un élément de liste de course\n  createNewItem = (event) => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const currentCategory = this.state.currentCategory;\n    const currentTitre = this.state.currentTitre;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    if(currentCategory === 'Ma super catégorie') {\n      this.createNewCategory(event);\n      return null;\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n  }\n\n  // Ajout d'un titre de liste de course\n  addNewListTitre = event => {\n    event.preventDefault();\n    // const user = this.state.userId;\n    const formInput = document.querySelector('#form-input');\n    const todoFormButton = document.querySelector('#myButtonSubmit');\n    const titre = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n    this.setState(prevState => ({\n      listeDeBase: [...prevState.listeDeBase, titre],\n      currentTitre: titre,\n      isCategory: true\n    }));\n\n    // firebase.database().ref(`${user}`).push({\n    //   titre\n    // });\n\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n  }\n\n  // Détecte quelle liste à été choisie\n  choixListe = (e) => {\n    const user = this.state.currentUserUid;\n    const titreListe = e.target.id;\n    const ref = firebase.database().ref(`${user}`);\n    // console.log(titreListe);\n\n    ref.on('value', snapshot => {\n      this.setState({\n        data: snapshot.val(),\n        currentTitre: titreListe,\n        clicked: true\n      });\n    });\n  }\n\n  // En Course --------> Check toute la catégorie\n  checkCurrentCategory = titreCat => {\n    console.log(titreCat);\n  }\n\n  // EN COURSE --------> Crée un item dans la catégorie derniere minute\n  createNewItemLastMinute = event => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const currentCategory = this.state.currentCategory;\n    const currentTitre = this.state.currentTitre;\n    const lastMinuteItem = this.state.lastMinuteItem;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n\n    //on regarde si la catégorie existe déjà pour ne pas en recréer une identique\n    let hasTitreCat = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n         return hasTitreCat = childSnapshot.val().titreCat === 'Ajout de dernière minute';\n      });\n    });\n\n    if(currentCategory === 'Ajout de dernière minute' && !lastMinuteItem && !hasTitreCat) {\n      this.createNewCategory(event);\n      this.setState({ lastMinuteItem: true });\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n  }\n\n  // utilisé sur bouton pour retour en arrière\n  goHome = () => {\n    this.setState({ clicked: false, isCategory: true });\n  }\n\n  // retour au menu de l'accueil\n  returnToApp = () => {\n    this.setState({ choixComponent: 'menu' });\n  }\n\n  // détecte le composant choisi à l'accueil\n  choixComponent = (event) => {\n    const choixComponent = event.target.name;\n    if(choixComponent !== '') {\n      if(choixComponent === 'enCourse') {\n        this.setState({ choixComponent, currentCategory: 'Ajout de dernière minute' });\n      } else {\n        this.setState({ choixComponent, currentCategory: 'Ma super catégorie' });\n      }\n    }\n  }\n\n  hideText = () => {\n    const clickedText = this.state.clickedText;\n    this.setState({ clickedText : !clickedText });\n}\n\ndeconnexion = event => {\n  event.preventDefault();\n  firebase.auth().signOut();\n  // console.log(firebase.auth().currentUser.displayName);\n}\n\n//choix composant via headermenu\nhandleClick = (e) => {\n  const choixComponent = e.key;\n  if(choixComponent !== '') {\n    if(choixComponent === 'enCourse') {\n      this.setState({ choixComponent, currentCategory: 'Ajout de dernière minute' });\n    } else {\n      this.setState({ choixComponent, currentCategory: 'Ma super catégorie' });\n    }\n  }\n}\n\n  //renvoie dans le render le composent choisit\n  renderChoiseConponent = () => {\n    const name = this.state.choixComponent;\n    switch(name) {\n      case 'enCourse':\n      return <EnCourse\n                returnToApp={this.returnToApp}\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                closeComment={this.closeComment}\n                createNewItemLastMinute={this.createNewItemLastMinute}\n                goHome={this.goHome}\n                currentTitre={this.state.currentTitre}\n                data={this.state.data}\n                checkCurrentCategory={this.checkCurrentCategory}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                largeur={this.state.largeur}\n                modalContentCourse={this.modalContentCourse}\n              />\n      case 'mesListes':\n      return <Home\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                addNewListTitre={this.addNewListTitre}\n                deleteList={this.deleteList}\n                loading={this.state.loading}\n                data={this.state.data}\n                returnToApp={this.returnToApp}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                closeComment={this.closeComment}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                createNewCategory={this.createNewCategory}\n                isCategory={this.state.isCategory}\n                currentCategory={this.state.currentCategory}\n                toggleSwitch={this.toggleSwitch}\n                numChildCategory={this.state.numChildCategory}\n                deleteCategory={this.deleteCategory}\n                currentTitre={this.state.currentTitre}\n                getCurrentCategory={this.getCurrentCategory}\n                isToggleSwitchType={this.state.isToggleSwitchType}\n                toggleSwitchType={this.toggleSwitchType}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                modalContent={this.modalContent}\n                largeur={this.state.largeur}\n                itemIsVisible={this.state.itemIsVisible}\n                itemVisible={this.itemVisible}\n                handleScroll={this.handleScroll}\n              />\n      case 'monProfil':\n      return <ProfilUser\n              returnToApp={this.returnToApp}\n              user={this.state.userId}\n              toggleSwitchHelp={this.toggleSwitchHelp}\n              help={this.state.help}\n              toggleSwitchInverseProduit={this.toggleSwitchInverseProduit}\n              inverseProduit={this.state.inverseProduit}\n              userUid={this.state.userUid}\n              changeUserUid={this.changeUserUid}\n              valideChangeUserUid={this.valideChangeUserUid}\n              newUserUid={this.state.newUserUid}\n              choixUserUid={this.state.choixUserUid}\n              choisirUserUid={this.choisirUserUid}\n              linkName={this.state.linkName}\n              followWindow={this.state.followWindow}\n              toggleSwitchFollowWindow={this.toggleSwitchFollowWindow}\n              />\n      default:\n      return null\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14}} lg={{ span: 10 }} id='connexion'>\n            <h1>Check-List-Course</h1>\n            <p>Veuillez vous connecter svp:</p>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n          </Col>\n        </Row>\n      );\n    }\n    if(this.state.loading) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n        {/* {this.getDataBase()} */}\n          <Col xs={{ span: 16 }} md={{ span: 14 }} lg={{ span: 10}} id='load'>\n            <Loading/>\n            <h3>Chargement du caddie</h3>\n          </Col>\n        </Row>\n      )\n    }\n    \n    return (\n      <>\n      <Row type=\"flex\" justify=\"space-around\" id='main'>\n        <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} id='mainCol' >\n        <Layout>\n          <Header \n            style={{ \n              padding : this.state.largeur >= 480 ? '0 50px' : '0'\n            }}>\n            <Col xs={0} lg={4}>\n              {\n                this.state.largeur >= 480 ? \n                <h4><Icon type=\"shopping-cart\" /> Check-Course</h4>\n                :\n                null\n              }\n            </Col>\n            <Col xs={24} lg={20} \n              style={{\n                textAlign : this.state.largeur >= 480 ? 'right' : 'center',\n                fontSize : this.state.largeur >= 480 ? '0.9em' : '0.7em'\n              }}\n            >\n                <HeaderMenu\n                  handleClick={this.handleClick}\n                  choixComponent={this.choixComponent}\n                  choixComponentState={this.state.choixComponent}\n                />\n            </Col>\n          </Header>\n        <Content>\n          \n          {\n            this.state.choixComponent === 'menu' ?\n            <>\n              <Col span={24} id={this.state.largeur >= 480 ? 'bckLogo' : 'bckLogo2'}>\n                <Icon type=\"shopping-cart\" />\n                <h2>CHECK-COURSE</h2>\n              </Col>\n              <Menu\n                choixComponent={this.choixComponent}\n                user={this.state.userId}\n                hideText={this.hideText}\n                clickedText={this.state.clickedText}\n                help={this.state.help}\n              />\n            </>\n            :\n            this.renderChoiseConponent()\n          }\n              {/* <Col span={6}>\n                  <Button \n                    type='primary'\n                    block \n                    onClick={e => this.deconnexion(e)} \n                    className='goBack'\n                    >\n                      Déconnexion\n                  </Button>\n              </Col> */}\n          </Content>\n            <Footer>\n              <p>Created By Mikael</p>\n            </Footer>\n          </Layout>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}