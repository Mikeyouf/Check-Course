{"version":3,"sources":["img/prochainement2.png","firebase.js","Components/Item.js","Components/ItemList.js","Components/MyLists.js","Components/Home.js","Components/Loading.js","Components/EnCourseList.js","Components/EnCourseItem.js","Components/EnCourse.js","Components/Menu.js","Components/ProfilUser.js","Components/HeaderMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Item","_this$props","this","props","item","itemKey","comment","count","itemIsVisible","itemVisible","deleteItem","toggleComment","changeItem","itemIsChanged","handleChangeItem","valideChangeItem","itemSelected","react_default","a","createElement","col","span","row","type","justify","align","key","id","concat","xs","sm","md","lg","onClick","className","input","value","placeholder","onChange","onKeyUp","es_button","name","style","background","border","block","icon","color","fontSize","badge","status","Component","ItemList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderData","data","currentTitre","inverseProduit","arrayData","keys","map","category","categoryItem","push","reverse","setState","liste","state","_this$props2","inputOpen","currentCategory","categoryIsChanged","showCategory","categorySelected","valideChangeCategory","elt","list","titreCat","locale","emptyText","header","changeCategory","e","handleChangeCategory","checkCurrentCategory","categoryVisible","categoryIsVisible","deleteCategory","footer","Fragment","onSubmit","createNewItem","maxLength","autoFocus","ref","nameInput2","openInput","bordered","dataSource","categoryItems","renderItem","checked","Components_Item","delete","prevProps","prevState","nameInput","focus","_this2","_this$props3","largeur","visible","showForm","drawerWidth","createNewCategory","showFormulaire","length","loadListExemple","drawer","placement","width","onClose","modalContent","MyLists","help","notification","open","message","description","duration","textAlign","window","addEventListener","handleScroll","removeEventListener","onScroll","padding","reloadList","Components_ItemList","addComment","titre","titreListe","indexItem","numChildCategory","marginRight","goHome","Home","choixUserUid","newData","choixListe","size","changeLocked","locked","popconfirm","title","onConfirm","confirmDelete","onCancel","cancel","okText","cancelText","listeDeBase","clicked","Components_MyLists","returnToApp","isCategory","toggleSwitchType","followWindow","addNewListTitre","Loading","react_loading_default","height","countItem","EnCourseList","countProduit","countItemPos","countItemNeg","countTotal","isChecked","positionY","scrollY","createNewItemLastMinute","offset","backgroundColor","boxShadow","modalContentCourse","EnCourseItem","EnCourse","Components_EnCourseItem","Components_EnCourseList","closeComment","handleScrollButton","Menu","margin","choixComponent","ProfilUser","user","userUid","newUserUid","linkName","toggleSwitchHelp","toggleSwitchInverseProduit","marginBottom","es_switch","checkedChildren","unCheckedChildren","toggleSwitchFollowWindow","choisirUserUid","changeUserUid","required","valideChangeUserUid","pull","deconnexion","borderRadius","marginLeft","HeaderMenu","menu","handleClick","selectedKeys","choixComponentState","mode","Header","Layout","Footer","Content","Meta","Card","TextArea","Input","Option","Select","App","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","animFormButton","button","classList","add","setTimeout","remove","animFormElt","getDataBase","myUser","_this$state","userId","currentUser","on","snapshot","listItem","val","currentUserUid","followers","loading","set","userName","getOtherDataBase","curentUser","adminAddList","listeExemple","handleResize","hauteur","innerHeight","innerWidth","_this$state2","isScroll","formElt","document","getElementById","lastPositionY","updates","update","event","target","changeUserInput","error","text","_this$state3","success","_this$state4","_this$state5","collapse","querySelector","parentElement","toggle","index","forEach","childSnapshot","orderByChild","equalTo","_this$state6","contentElt","childNodes","indexCat","deleteList","onChangeComment","newComment","onChangeCount","onChangeTypeCount","typeCount","_this$state7","gutter","slider","min","max","input_number","es_select","defaultValue","autosize","minRows","maxRows","rows","cols","autoComplete","marginTop","ontSize","onPressEnter","_this$state8","image","skeleton","paragraph","alt","src","prochainement","card","paddingTop","cover","avatar","items","preventDefault","_this$state9","_this$state10","_this$state11","_this$state12","_this$state13","formInput","todoFormButton","cat","charAt","toUpperCase","substring","toLowerCase","timestamp","Date","now","categoryExist","objectSpread","config","top","_this$state14","todoFormInput","dataElt","show","toConsumableArray","_this$state15","lastChild","firstChild","_this$state16","lastMinuteItem","hasTitreCat","_this$state17","hideText","clickedText","_this$state18","_this$state19","signOut","then","isSignedIn","catch","console","log","renderChoiseConponent","Components_EnCourse","Components_Home","isToggleSwitchType","Components_ProfilUser","totalItem","bind","assertThisInitialized","unregisterAuthObserver","onAuthStateChanged","uid","displayName","Components_Loading","layout","Components_HeaderMenu","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Boolean","location","hostname","match","ReactDOM","render","locale_provider","fr_FR","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b217547.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/prochainement2.cbd80974.png\";","export default {\r\n    apiKey: \"AIzaSyASNdLHf9itHbMfni5KLun3kcA57LFgkFg\",\r\n    authDomain: \"check-list-course.firebaseapp.com\",\r\n    databaseURL: \"https://check-list-course.firebaseio.com\",\r\n    projectId: \"check-list-course\",\r\n    storageBucket: \"check-list-course.appspot.com\",\r\n    messagingSenderId: \"873680903792\"\r\n}","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport { Row, Col, Button, Icon, Badge, Input  } from 'antd';\r\n\r\nclass Item extends Component {\r\n    render() { \r\n        const { \r\n            item, itemKey, comment, count, \r\n            itemIsVisible, itemVisible, deleteItem, \r\n            toggleComment, changeItem, itemIsChanged, \r\n            handleChangeItem, valideChangeItem, itemSelected\r\n        } = this.props;\r\n        return ( \r\n            <Col span={24} >\r\n                <Row \r\n                    type=\"flex\" \r\n                    justify=\"space-between\" \r\n                    align=\"middle\"\r\n                    key={itemKey}\r\n                    id={`elt-${itemKey}`}\r\n                >\r\n                {\r\n                    itemIsChanged && itemSelected === itemKey ?\r\n                    <Col xs={12} sm={15} md={15} lg={18} onClick={changeItem} className={'ant-list-items-item'}>\r\n                        <Input type='text' value={item} placeholder='Modifier le produit' onChange={handleChangeItem} onKeyUp={valideChangeItem}/>\r\n                    </Col>\r\n                    :\r\n                    <Col xs={12} sm={15} md={15} lg={18} onClick={changeItem} className={'ant-list-items-item'}>\r\n                        {item}\r\n                    </Col>\r\n                }\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                        <Button \r\n                            name=\"comment\" \r\n                            className='comment' \r\n                            style={{ background: 'transparent', border: 'none' }}\r\n                            type='primary'\r\n                            block\r\n                            onClick={toggleComment}>\r\n                            >\r\n                            {\r\n                                comment === '' && count === 0 ?\r\n                                <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                :\r\n                                <Badge status=\"success\">\r\n                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                </Badge>\r\n                            }\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                        <Button \r\n                            style={{ background: 'transparent' }}\r\n                            name=\"isVisible\" \r\n                            className=\"trash\"\r\n                            type='primary'\r\n                            block\r\n                            onClick={itemVisible}>\r\n                                {\r\n                                    itemIsVisible ?\r\n                                    <i className=\"far fa-eye\"></i>\r\n                                    :\r\n                                    <i className=\"far fa-eye-slash\"></i>\r\n                                }\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"trash\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={deleteItem}>\r\n                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                            </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Item;","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport Item from './Item'\r\n\r\nimport { List, Row, Col, Icon, Button, Drawer, Input } from 'antd';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrayData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.data !== this.props.data) {\r\n            this.renderData();\r\n        }\r\n        if(this.nameInput) {\r\n            this.nameInput.focus();\r\n        }\r\n        if(this.nameInput2) {\r\n            this.nameInput2.focus();\r\n        }\r\n    }\r\n\r\n    renderData = () => {\r\n        const { data, currentTitre, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? \r\n                Object.keys(data[item])\r\n                    .map(category => Object.keys(data[item][category])\r\n                        .map(categoryItem => arrayData.push(data[item][category][categoryItem])))\r\n                : null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        this.setState({ arrayData });\r\n    }\r\n\r\n    liste = () => {\r\n        const { arrayData } = this.state;\r\n        const { inputOpen, currentCategory, itemIsChanged,\r\n                showCategory, category, categoryIsChanged,\r\n                categorySelected,\r\n                valideChangeCategory\r\n            } = this.props;\r\n        if(!arrayData) {\r\n            return null\r\n        }\r\n        return (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                name={`name-${elt.titreCat}`}\r\n                locale={{ emptyText: 'Veuillez ajouter un produit' }}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                    {\r\n                        categoryIsChanged && categorySelected === elt.key ?\r\n                        <Col xs={12} sm={15} lg={18} className='titreCat' onClick={() => this.props.changeCategory(elt)}>\r\n                            <Input type='text' value={elt.titreCat} placeholder='Modifier la catégorie' onChange={e => this.props.handleChangeCategory(e, elt)} onKeyUp={e => valideChangeCategory(e, elt)}/>\r\n                        </Col>\r\n                        :\r\n                        <Col xs={12} sm={15} lg={18} className='titreCat' onClick={() => this.props.changeCategory(elt)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    }\r\n                        <Col xs={4} sm={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"isVisible\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={() => this.props.checkCurrentCategory(elt.titreCat, elt.showCategory)}>\r\n                                {\r\n                                    elt.showCategory ?\r\n                                    <Icon type=\"caret-up\" />\r\n                                    :\r\n                                    <Icon type=\"caret-down\" />\r\n                                }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col xs={4} sm={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"isVisible\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={() => this.props.categoryVisible(elt)}>\r\n                                    {\r\n                                        elt.categoryIsVisible ?\r\n                                        <i className=\"far fa-eye\" style={{ color: 'aliceblue' }}/>\r\n                                        :\r\n                                        <i className=\"far fa-eye-slash\" style={{ color: 'aliceblue' }}/>\r\n                                    }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col xs={4} md={3} lg={2}>\r\n                            <Button \r\n                                name=\"trash\" \r\n                                className=\"trash\"\r\n                                block\r\n                                type='primary'\r\n                                onClick={() => this.props.deleteCategory(elt, id)}>\r\n                                <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                footer={\r\n                    <>\r\n                    {\r\n                        inputOpen && currentCategory === elt.titreCat ? \r\n                        <Row type=\"flex\" justify=\"center\" align='middle'>\r\n                            <form className='form form-titre' id='myForm' onSubmit={ e => this.props.createNewItem(e)}>\r\n                                <input \r\n                                    id='myInput' \r\n                                    type='text' \r\n                                    placeholder='Ajouter un produit'\r\n                                    maxLength={40} \r\n                                    autoFocus={true} \r\n                                    ref={input => { this.nameInput2 = input }} \r\n                                />\r\n                                <button type='submit' id='buttonSubmit'>\r\n                                    <Icon type=\"plus\" />\r\n                                </button>\r\n                            </form>\r\n                        </Row>\r\n                        :\r\n                        <Row \r\n                            type=\"flex\" \r\n                            justify=\"center\" \r\n                            align='middle' \r\n                            onClick={() => this.props.openInput(elt.titreCat)}\r\n                            >\r\n                            <p>Ajouter un produit</p>\r\n                        </Row>\r\n                    }\r\n                    </>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <>\r\n                    {\r\n                        elt.showCategory ?\r\n                        <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Item\r\n                                item={item.item}\r\n                                itemKey={item.key}\r\n                                comment={item.comment}\r\n                                count={item.count}\r\n                                itemIsVisible={item.itemIsVisible}\r\n                                itemIsChanged={this.props.itemIsChanged}\r\n                                itemSelected={this.props.itemSelected}\r\n\r\n                                handleChangeItem={e => this.props.handleChangeItem(e, item)}\r\n                                valideChangeItem={e => this.props.valideChangeItem(e, item)}\r\n                                changeItem={() => this.props.changeItem(item)}\r\n                                toggleComment={() => this.props.toggleComment(item)}\r\n                                itemVisible={() => this.props.itemVisible(item)}\r\n                                deleteItem={() => this.props.delete(item)}\r\n                            />\r\n                        </List.Item>\r\n                        :\r\n                        null\r\n                    }\r\n                    </>\r\n                    \r\n                    )}\r\n            />\r\n    \r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible, showForm } = this.props;\r\n        const { arrayData } = this.state;\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        return ( \r\n            <>\r\n            {\r\n                showForm ?\r\n                    <form className='form form-titre' id='myForm' onSubmit={ e => this.props.createNewCategory(e)}>\r\n                        <input \r\n                            id='myInput2'\r\n                            type='text' \r\n                            placeholder='Ajouter une catégorie'\r\n                            maxLength={40} \r\n                            autoFocus={true} \r\n                            ref={input => { this.nameInput = input }} \r\n                        />\r\n                        <button type='submit' id='buttonSubmit'>\r\n                            <Icon type=\"plus\" />\r\n                        </button>\r\n                    </form>\r\n                :\r\n                <>\r\n                <Row \r\n                    className='ant-list-footer addCategory' \r\n                    type=\"flex\" \r\n                    justify=\"center\" \r\n                    align='middle'\r\n                    onClick={this.props.showFormulaire}\r\n                    >\r\n                    <p>Ajouter une catégorie</p>\r\n                </Row>\r\n                {\r\n                    arrayData.length === 0 ?\r\n                    <Col xs={{ span: 6}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                        <Button block type=\"primary\" className='reload' onClick={this.props.loadListExemple}>\r\n                            <Icon type=\"download\" />\r\n                            Charger un exemple\r\n                        </Button>\r\n                    </Col>\r\n                    :\r\n                    null\r\n                }\r\n                </>\r\n            }\r\n            {this.liste()}\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContent(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, notification } from 'antd';\r\n\r\nimport ItemList from './ItemList';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Ajouter une catégorie',\r\n        description: \"Pour ajouter une catégorie, cliquez sur \\\"Ajouter une catégorie\\\" et écrivez le nom que vous désirez, par exemple \\\"Boissons\\\". Pour finaliser, cliquez sur le +.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Ajouter un produit',\r\n                description: \"Pour ajouter un produit, cliquez sur \\\"Ajouter un produit\\\" et écrivez le nom que vous désirez, par exemple \\\"Eau\\\". Pour finaliser, cliquez sur le +. Vous pouvez ajouter autant de produits que vous le désirez.\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                  onClose: () => {\r\n                    notification.open({\r\n                        message: 'Astuce!',\r\n                        description: \"Pour ajouter un produit dans une catégorie existente, cliquez sur le nom de la catégorie voulue, ensuite il vous suffit d'ajouter un produit.\",\r\n                        duration: 0,\r\n                        style: {\r\n                            textAlign: 'justify'\r\n                          }\r\n                      });\r\n                  }\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass MyLists extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n    \r\n    render() { \r\n        const { currentTitre } = this.props;\r\n        return ( \r\n            <Col onScroll={e => this.props.handleScroll(e)} className='containerList'>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                                <h3 className='titreListe'>\r\n                                    <i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>\r\n                                    {currentTitre}\r\n                                </h3>\r\n                            </Col>\r\n                            <Col xs={{ span: 6}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                                <Button block type=\"primary\" className='reload' onClick={this.props.reloadList}>\r\n                                    <Icon type=\"reload\" />\r\n                                </Button>\r\n                            </Col>\r\n                        </>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <ItemList\r\n                            data={this.props.data}\r\n                            changeItem={this.props.changeItem}\r\n                            itemIsChanged={this.props.itemIsChanged}\r\n                            handleChangeItem={this.props.handleChangeItem}\r\n                            valideChangeItem={this.props.valideChangeItem}\r\n                            itemSelected={this.props.itemSelected}\r\n                            delete={this.props.delete}\r\n                            toggleComment={this.props.toggleComment}\r\n                            addComment={this.props.addComment}\r\n                            titre={this.props.titreListe}\r\n                            indexItem={this.props.indexItem}\r\n                            numChildCategory={this.props.numChildCategory}\r\n                            deleteCategory={this.props.deleteCategory}\r\n                            currentTitre={this.props.currentTitre}\r\n                            inverseProduit={this.props.inverseProduit}\r\n                            visible={this.props.visible}\r\n                            onClose={this.props.onClose}\r\n                            item={this.props.item}\r\n                            modalContent={this.props.modalContent}\r\n                            largeur={this.props.largeur}\r\n                            itemIsVisible={this.props.itemIsVisible}\r\n                            itemVisible={this.props.itemVisible}\r\n                            categoryVisible={this.props.categoryVisible}\r\n                            categoryIsVisible={this.props.categoryIsVisible}\r\n                            createNewItem={this.props.createNewItem}\r\n                            inputOpen={this.props.inputOpen}\r\n                            openInput={this.props.openInput}\r\n                            currentCategory={this.props.currentCategory}\r\n                            showForm={this.props.showForm}\r\n                            createNewCategory={this.props.createNewCategory}\r\n                            showFormulaire={this.props.showFormulaire}\r\n                            checkCurrentCategory={this.props.checkCurrentCategory}\r\n                            loadListExemple={this.props.loadListExemple}\r\n                            showCategory={this.props.showCategory}\r\n                            categoryIsChanged={this.props.categoryIsChanged}\r\n                            category={this.props.category}\r\n                            categorySelected={this.props.categorySelected}\r\n                            changeCategory={this.props.changeCategory}\r\n                            handleChangeCategory={this.props.handleChangeCategory}\r\n                            valideChangeCategory={this.props.valideChangeCategory}\r\n                        />\r\n                    </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyLists;","import React, { Component } from 'react';\r\n\r\nimport MyLists from './MyLists';\r\n\r\nimport { Button, Icon, Col, notification, List, Popconfirm } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Créer une liste de course',\r\n        description: \"Pour créer une liste, il vous suffit simplement d'écrire son nom dans la case \\\"ajouter une liste\\\" et de cliquer sur le +. Ensuite cliquez sur le nom de votre liste qui vient d'apparaitre en dessous. Vous pouvez en créer maximum 3.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        // onClose: () => {\r\n        //   alert('clicked');\r\n        // },\r\n      });\r\n  };\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const { data, choixUserUid } = this.props;\r\n        const newData = [];\r\n        Object.keys(data).map(item => item !== 'user' ? newData.push(item) : null); //on enlève user des items\r\n            return (\r\n                <List\r\n                    bordered\r\n                    locale={{ emptyText: 'Veuillez créer une liste' }}\r\n                    dataSource={newData}\r\n                    renderItem={ (item, id) => (\r\n                        <>\r\n                        {\r\n                        item ?\r\n                            <>\r\n                            {\r\n                                choixUserUid ?\r\n                                <List.Item >\r\n                                    <Col span={24} key={id} className='listeDeBase'>  \r\n                                        <Col xs={{ span: 16 }} md={{ span: 18 }} lg={{ span: 20 }} key={`elt-${item}`} id={`id-${item}`} onClick={() => this.props.choixListe(item)}>\r\n                                            {item}\r\n                                        </Col>\r\n                                        <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                            <Button\r\n                                                size='large'\r\n                                                name=\"trash\" \r\n                                                type=\"primary\"\r\n                                                block \r\n                                                className=\"trash\"\r\n                                                onClick={() => this.props.changeLocked(data[item], item)}\r\n                                            >  \r\n                                            {\r\n                                                !data[item].locked ?\r\n                                                <Icon type=\"unlock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                :\r\n                                                <Icon type=\"lock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            }\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                            <Popconfirm title=\"Confirmer pour effacer\" onConfirm={() => this.props.confirmDelete(item)} onCancel={this.props.cancel} okText=\"Oui\" cancelText=\"Non\">\r\n                                                <Button\r\n                                                    size='large' \r\n                                                    name=\"trash\" \r\n                                                    type=\"primary\"\r\n                                                    block \r\n                                                    className=\"trash\"\r\n                                                >  \r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                </Button>\r\n                                            </Popconfirm>\r\n                                        </Col>\r\n                                    </Col>\r\n                                </List.Item>\r\n                                :\r\n                                <>\r\n                                    {\r\n                                        data[item].locked === false ?\r\n                                        <List.Item >\r\n                                            <Col span={24} key={id} className='listeDeBase'>  \r\n                                                <Col xs={{ span: 16 }} md={{ span: 18 }} lg={{ span: 20 }} key={`elt-${item}`} id={item} onClick={() => this.props.choixListe(item)}>\r\n                                                    {item}\r\n                                                </Col>\r\n                                                <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                                    <Button\r\n                                                        size='large' \r\n                                                        name=\"trash\" \r\n                                                        type=\"primary\"\r\n                                                        block \r\n                                                        className=\"trash\"\r\n                                                        // onClick={() => this.props.changeLocked(data[item], item)}\r\n                                                    >  \r\n                                                    {\r\n                                                        !data[item].locked ?\r\n                                                        <Icon type=\"unlock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                        :\r\n                                                        <Icon type=\"lock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                    }\r\n                                                    </Button>\r\n                                                </Col>\r\n                                                <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                                    <Popconfirm title=\"Confirmer pour effacer\" onConfirm={() => this.props.confirmDelete(item)} onCancel={this.props.cancel} okText=\"Oui\" cancelText=\"Non\">\r\n                                                        <Button\r\n                                                            size='large' \r\n                                                            name=\"trash\" \r\n                                                            type=\"primary\"\r\n                                                            block \r\n                                                            className=\"trash\"\r\n                                                        >  \r\n                                                            <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                        </Button>\r\n                                                    </Popconfirm>\r\n                                                </Col>\r\n                                            </Col>\r\n                                        </List.Item>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </>\r\n                            }\r\n                            </>\r\n                        \r\n                        :\r\n                        null\r\n                        }\r\n                        </>\r\n                    )}\r\n                />\r\n            )};\r\n        \r\n    render() {\r\n        const { listeDeBase, clicked } = this.props;\r\n        return (\r\n            <>\r\n            {\r\n            !clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    { \r\n                        listeDeBase.length >= 4 ?\r\n                        null\r\n                        :\r\n                        <form className='formulaire form-titre' onSubmit={e => this.props.addNewListTitre(e)}>\r\n                            <input type='text' id='form-input' placeholder='Ajouter une liste' maxLength={30}/>\r\n                            <button type='submit' id='myButtonSubmit'>+</button>\r\n                        </form>\r\n                    }\r\n                \r\n                    <Col>\r\n                        {this.liste()}\r\n                    </Col>\r\n                    <Col span={6} style={{ marginRight: '1em' }}>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </Col>\r\n                </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n                <MyLists\r\n                    currentTitre={this.props.currentTitre}\r\n                    createNewItem={this.props.createNewItem}\r\n                    data={this.props.data}\r\n                    changeItem={this.props.changeItem}\r\n                    itemIsChanged={this.props.itemIsChanged}\r\n                    handleChangeItem={this.props.handleChangeItem}\r\n                    valideChangeItem={this.props.valideChangeItem}\r\n                    itemSelected={this.props.itemSelected}\r\n                    delete={this.props.delete}\r\n                    toggleComment={this.props.toggleComment}\r\n                    addComment={this.props.addComment}\r\n                    titreListe={this.props.titreListe}\r\n                    returnToApp={this.props.returnToApp}\r\n                    goHome={this.props.goHome}\r\n                    indexItem={this.props.indexItem}\r\n                    createNewCategory={this.props.createNewCategory}\r\n                    isCategory={this.props.isCategory}\r\n                    numChildCategory={this.props.numChildCategory}\r\n                    deleteCategory={this.props.deleteCategory}\r\n                    toggleSwitchType={this.props.toggleSwitchType}\r\n                    help={this.props.help}\r\n                    inverseProduit={this.props.inverseProduit}\r\n                    visible={this.props.visible}\r\n                    onClose={this.props.onClose}\r\n                    item={this.props.item}\r\n                    modalContent={this.props.modalContent}\r\n                    largeur={this.props.largeur}\r\n                    itemIsVisible={this.props.itemIsVisible}\r\n                    itemVisible={this.props.itemVisible}\r\n                    handleScroll={this.props.handleScroll}\r\n                    followWindow={this.props.followWindow}\r\n                    showForm={this.props.showForm}\r\n                    showFormulaire={this.props.showFormulaire}\r\n                    currentCategory={this.props.currentCategory}\r\n                    categoryVisible={this.props.categoryVisible}\r\n                    categoryIsVisible={this.props.categoryIsVisible}\r\n                    reloadList={this.props.reloadList}\r\n                    inputOpen={this.props.inputOpen}\r\n                    openInput={this.props.openInput}\r\n                    checkCurrentCategory={this.props.checkCurrentCategory}\r\n                    loadListExemple={this.props.loadListExemple}\r\n                    showCategory={this.props.showCategory}\r\n                    categoryIsChanged={this.props.categoryIsChanged}\r\n                    category={this.props.category}\r\n                    categorySelected={this.props.categorySelected}\r\n                    changeCategory={this.props.changeCategory}\r\n                    handleChangeCategory={this.props.handleChangeCategory}\r\n                    valideChangeCategory={this.props.valideChangeCategory}\r\n                />\r\n            </Col>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => (\r\n    <ReactLoading \r\n    type=\"cylon\" \r\n    color=\"#078073\" \r\n    className=\"load\"\r\n    id=\"load\"\r\n    height={200}\r\n    width={200}\r\n    />\r\n)\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, List, Row, Badge, notification, Drawer  } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Astuce',\r\n        description: \"Lorsque vous faites vos courses, il suffit de cliquer sur un produit pour qu'il soit \\\"barré\\\" et \\\"grisé\\\".\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Astuce',\r\n                description: \"Vous ouvez rajouter un produit de dernière minute en l'ajoutant dans la case \\\"Entrez un produit\\\".\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n              });\r\n            }\r\n      });\r\n  };\r\nlet countItem = 0;\r\n\r\nclass EnCourseList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            count: 0,\r\n            arrayData: []\r\n         }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        this.renderData();\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.data !== this.props.data) {\r\n            this.renderData();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    //compteur de produits\r\n    countProduit = ( data, currentTitre ) => {\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? Object.keys(data[item])\r\n                .map(category => Object.keys(data[item][category])\r\n                    .map(categoryItem => data[item][category][categoryItem].categoryItems && data[item][category][categoryItem].categoryIsVisible ? arrayData.push(data[item][category][categoryItem]): null))\r\n            : null);\r\n        let countItemPos = [];\r\n        let countItemNeg = [];\r\n        let countTotal = [];\r\n        arrayData.map(elt => Object.keys(elt.categoryItems).map(item => countTotal.push(elt.categoryItems[item].checked)));\r\n        arrayData.map(elt => Object.keys(elt.categoryItems).map(item => elt.categoryItems[item].checked === false && elt.categoryItems[item].itemIsVisible ? countItemNeg.push(elt.categoryItems[item].checked): countItemPos.push(elt.categoryItems[item].checked)));\r\n        countItem = countTotal.length - countItemPos.length;\r\n    }\r\n\r\n    renderData = () => {\r\n        const { data, currentTitre, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? \r\n                Object.keys(data[item])\r\n                    .map(category => Object.keys(data[item][category])\r\n                        .map(categoryItem => arrayData.push(data[item][category][categoryItem])))\r\n                : null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        this.setState({ arrayData });\r\n    }\r\n\r\n    // création de la liste de produit et des catégories\r\n    liste = () => {\r\n        const { arrayData } = this.state;\r\n        if(!arrayData) {\r\n            return null\r\n        }\r\n        \r\n        return (arrayData || []).map((elt, id) =>\r\n        <div key={`key-${id}`}>\r\n        {\r\n            elt.categoryIsVisible ? // cache ou affiche une catégorie\r\n            <List\r\n                key={`titreCat-${elt.titreCat}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row id={`titreCat-${id}`} type=\"flex\" justify=\"space-between\" align='middle' style={{height: '2.5em'}}>\r\n                        <Col span={24} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat, elt.showCategory)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <>\r\n                    {\r\n                    item.itemIsVisible ? //cache ou affiche un produit\r\n                    <List.Item key={`listItemId-${item.key}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} key={`col24-${item.key}`}>\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={`elt-${item.key}`}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={20} sm={21} md={21} lg={22} key={`col20-${item.key}`} onClick={() => this.props.isChecked(item, arrayData)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2} key={`col4-${item.key}`}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' && item.count === 0 ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                    </List.Item>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                    )}\r\n            />\r\n            :\r\n            null\r\n        }\r\n        </div>\r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible, showForm, currentTitre, data } = this.props;\r\n        // width du drawer en fonction de la taille de l'écran\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        const positionY = window.scrollY;\r\n        this.countProduit(data, currentTitre);\r\n        return ( \r\n            <Col onScroll={ e => this.props.handleScroll(e) } className='containerList'>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                    {\r\n                        showForm ?\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                            </Col>\r\n                            \r\n                            <form id='myForm' className={showForm && positionY <= 80 ? 'formu formu-titre enCourse-formu-titre' : 'formu formu-titre enCourse-formu-titre fixedPosition'} onSubmit={this.props.createNewItemLastMinute}>\r\n                                <input type='text' placeholder='Produit de dernière minute' maxLength={40} />\r\n                                <button type='submit' id='buttonSubmit' onClick={this.props.showFormulaire}>\r\n                                    <Badge count={countItem} offset={[11, -30]} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}>\r\n                                        <Icon type=\"plus\" />\r\n                                    </Badge>\r\n                                </button>\r\n                            </form>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                            </Col>\r\n                            <Col xs={{ span: 12}} sm={{ span: 14}} md={{ span: 16}} lg={{ span: 18}}>\r\n                                <button type='button' className={!showForm && positionY <= 80 ? '' : 'fixedPosition'} id='buttonSubmit2' onClick={this.props.showFormulaire} >\r\n                                    <Badge count={countItem} offset={[5, -5]} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}>\r\n                                        <Icon type=\"edit\" style={{ fontSize: '2.5em' }}/>\r\n                                    </Badge>\r\n                                </button>\r\n                            </Col>\r\n                        </>\r\n                    }\r\n                    </Col>\r\n               <Col span={24}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={this.props.visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContentCourse(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseList;","import React, { Component } from 'react';\r\n\r\nimport { Col } from 'antd';\r\n\r\nclass EnCourseItem extends Component {\r\n    render() { \r\n        const { item, choixListe } = this.props;\r\n        return ( \r\n            <Col span={24} key={`key-${item}`} className='listeDeBaseEnCourse'>  \r\n                <Col xs={{ span: 20 }} md={{ span: 21 }} lg={{ span: 22 }} key={`elt-${item}`} id={`id-${item}`} onClick={choixListe}>\r\n                    {item}\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseItem;","import React, { Component } from 'react';\r\nimport { Button, Icon, Col, List } from 'antd';\r\n\r\nimport EnCourseList from './EnCourseList';\r\nimport EnCourseItem from './EnCourseItem';\r\n\r\nclass EnCourse extends Component {\r\n    liste = () => {\r\n        const { data, choixUserUid } = this.props;\r\n        const newData = [];\r\n        Object.keys(data).map(item => item !== 'user' ? newData.push(item) : null); //on enlève user des items\r\n        return ( \r\n            <List\r\n                bordered\r\n                locale={{ emptyText: 'Vous devez d\\'abord créer une liste avant de faire vos courses' }}\r\n                dataSource={newData}\r\n                renderItem={ (item, id) => (\r\n                    <>\r\n                    {\r\n                    item ?\r\n                    <>\r\n                    {\r\n                        choixUserUid ?\r\n                        <List.Item>\r\n                            <EnCourseItem\r\n                                item={item}\r\n                                choixListe={() => this.props.choixListe(item)}\r\n                            />\r\n                        </List.Item>\r\n                        :\r\n                        <>\r\n                        {\r\n                            data[item].locked === false ?\r\n                            <List.Item >\r\n                                <EnCourseItem\r\n                                    item={item}\r\n                                    choixListe={() => this.props.choixListe(item)}\r\n                                />\r\n                            </List.Item>\r\n                            :\r\n                            null\r\n                        }\r\n                        </>\r\n\r\n                    }\r\n                    </>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                </>\r\n                :\r\n                <Col span={24}>\r\n                    <EnCourseList\r\n                        currentTitre={this.props.currentTitre}\r\n                        createNewItemLastMinute={this.props.createNewItemLastMinute}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titreListe={this.props.titreListe}\r\n                        returnToApp={this.props.returnToApp}\r\n                        closeComment={this.props.closeComment}\r\n                        goHome={this.props.goHome}\r\n                        indexItem={this.props.indexItem}\r\n                        checkCurrentCategory={this.props.checkCurrentCategory}\r\n                        help={this.props.help}\r\n                        inverseProduit={this.props.inverseProduit}\r\n                        visible={this.props.visible}\r\n                        onClose={this.props.onClose}\r\n                        item={this.props.item}\r\n                        largeur={this.props.largeur}\r\n                        modalContentCourse={this.props.modalContentCourse}\r\n                        showFormulaire={this.props.showFormulaire}\r\n                        showForm={this.props.showForm}\r\n                        handleScroll={this.props.handleScroll}\r\n                        handleScrollButton={this.props.handleScrollButton}\r\n                    />\r\n                </Col>\r\n            }\r\n            \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourse;","import React, { Component } from 'react';\r\n\r\nimport '../NewApp.css';\r\n\r\nimport { Button, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Liste de course interactive',\r\n        description: \"Bienvenue sur votre application de liste de course. Pour commencer, veuillez cliquer sur \\\"créer une liste\\\". Si vous avez déjà créé une liste, cliquez sur \\\"En course\\\" lorsque vous faites vos course.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          }\r\n      });\r\n  };\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                        <Button \r\n                            style={{ margin : '1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='enCourse'\r\n                            onClick={this.props.choixComponent}\r\n                            >Faire ses courses\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='mesListes'\r\n                            onClick={this.props.choixComponent}\r\n                        >Créer une liste\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\" \r\n                            className='item-button'\r\n                            name='monProfil'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mon profil\r\n                        </Button>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Row, Col, notification, Switch } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Votre profil',\r\n        description: \"Bientôt vous aurez la possibilité de modifier votre profil et bien plus encore!\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Se connecter à un autre profil',\r\n                description: \"Il vous suffit de recopier l'identifiant de la liste que vous souhaitez rejoindre et de valider. Ensuite cliquez sur cette liste pour la rejoindre!\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                // onClose: () => {\r\n                //   alert('clicked');\r\n                // },\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass ProfilUser extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const { \r\n            user, help, inverseProduit, userUid, newUserUid, choixUserUid, linkName, followWindow,\r\n                toggleSwitchHelp, toggleSwitchInverseProduit \r\n            } = this.props;\r\n        return ( \r\n            <Col span={24}>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col  xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                    <h2>Bienvenue sur votre profil {user}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Aide : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={help === true ? true : false} onChange={toggleSwitchHelp} id='switchButtonHelp'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Inverser l'ordre des produits : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={inverseProduit === true ? true : false} onChange={toggleSwitchInverseProduit} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Case d'ajout de produit qui suit l'écran : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={followWindow === true ? true : false} onChange={this.props.toggleSwitchFollowWindow} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Votre identifiant : </b>{userUid}</span>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                        <Button block type={choixUserUid ? \"primary\" : \"default\"} name={userUid}  onClick={!choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                        {choixUserUid ? <span>Votre liste</span>: <span>Rejoindre votre liste</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <Button block type={choixUserUid ? \"default\" : \"primary\"} name={newUserUid} onClick={choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                            {choixUserUid ? <span>Rejoindre la liste de {linkName}</span>: <span>Liste de {linkName}</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Ajouter un identifiant : </b></span>\r\n                        <input type='text' placeholder='Entrez le nouvel identifiant' onChange={this.props.changeUserUid} required={true}/>\r\n                        <Button type=\"primary\" onClick={this.props.valideChangeUserUid} className='changeUid'>\r\n                            <Icon type=\"check\" />Valider\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 3, pull: 10 }} md={{ span: 3, pull: 10 }} lg={{ span: 3, pull: 10 }}>\r\n                        <Button type='primary' onClick={() => this.props.deconnexion()} style={{ borderRadius: '50px', width: '35px', height: '35px', marginLeft: '10px' }}>\r\n                            <Icon type=\"logout\" />\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row type='flex' justify='left'>\r\n                    <Col span={6}>\r\n                    <div className='button-anth'>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilUser;","import React, { Component } from 'react';\r\n\r\nimport { Menu, Icon } from 'antd';\r\n\r\nclass HeaderMenu extends Component {\r\n    render() { \r\n        return ( \r\n            <Menu\r\n            onClick={this.props.handleClick}\r\n            selectedKeys={[this.props.choixComponentState]}\r\n            mode=\"horizontal\"\r\n          >\r\n            <Menu.Item key=\"menu\">\r\n                <Icon type=\"home\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"mesListes\">\r\n                <Icon type=\"ordered-list\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"enCourse\">\r\n                <Icon type=\"shopping\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"monProfil\">\r\n                <Icon type=\"user\" />\r\n            </Menu.Item>\r\n          </Menu>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HeaderMenu;","import React, { Component } from 'react';\n// import './App.css';\nimport './NewApp.css';\nimport 'antd/dist/antd.css';\nimport './animations.css';\n\nimport * as firebase from 'firebase';\nimport config from './firebase';\n\n//ANT design\nimport { \n  Row, Col, Layout, Icon, message, Input, Slider, InputNumber, Select, Card, Avatar, Skeleton \n} from 'antd';\n\nimport Home from './Components/Home';\nimport Loading from './Components/Loading';\nimport EnCourse from './Components/EnCourse';\nimport Menu from './Components/Menu';\nimport ProfilUser from './Components/ProfilUser';\nimport HeaderMenu from './Components/HeaderMenu';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport prochainement from './img/prochainement2.png';\n\nconst {\n  Header, Footer, Content,\n} = Layout;\nconst { Meta } = Card;\n\nconst {TextArea} = Input;\nconst Option = Select.Option;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    firebase.initializeApp(config);\n        this.state = {\n            listeDeBase: [],\n            data: '',\n            item: null,\n            category: null,\n            categoryIsChanged: false,\n            categorySelected: '',\n            itemSelected: '',\n            titreListe: [],\n            currentTitre: '',\n            choixComponent: 'menu',\n            currentCategory: '' || 'Ma super catégorie',\n            numChildCategory: 0,\n            isSignedIn: false,\n            clicked: false,\n            itemIsChanged: false,\n            loading: true,\n            goHome: false,\n            isCategory: true,\n            clickedText : false,\n            indexItem: null,\n            isToggleSwitchType: false,\n            help: true,\n            inverseProduit: true,\n            userId: '' || 'Mikael',\n            userUid: '',\n            newUserUid: '',\n            choixUserUid: true,\n            changeUserInput: false,\n            currentUserUid: '',\n            linkName: '',\n            followers: [],\n            count: 0,\n            countItem: 0,\n            typeCount: 'unité',\n            newComment: '',\n            showCategory: true, // cache ou pas la catégorie avec hidden\n            showForm: false, //affiche ou non le form dans faire ses courses\n            inputOpen: false, // rend visible l'input du form\n            visible: false, //affiche le drawer\n            itemIsVisible: true, //affiche ou non l'item dans la liste de course\n            categoryIsVisible: true, //affiche ou non la catégorie dans la liste de course\n            totalItem: 0,\n            isScroll: 0,\n            followWindow: true,\n            largeur: 0,\n            hauteur: 0,\n            lastMinuteItem: false //verifie si un item a ete ajoute a la derniere minute\n        };\n      this.delete = this.delete.bind(this);\n      this.deleteCategory = this.deleteCategory.bind(this);\n      this.createNewItem = this.createNewItem.bind(this);\n      this.addNewListTitre = this.addNewListTitre.bind(this);\n      this.deconnexion = this.deconnexion.bind(this);\n}\n\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\ncomponentDidMount() {\n  const { loading } = this.state;\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        if(user) {\n          if(loading) {\n            this.getDataBase(user.uid);\n          }\n          this.setState({\n            isSignedIn: !!user, \n            userId: user.displayName,\n            userUid: user.uid\n          });\n        } else {\n          return null\n        }\n      }\n    );\n  \n  //détection du changement de taille d'écran\n  this.handleResize();\n  window.addEventListener('resize', this.handleResize);\n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('resize', this.handleResize); //on enlève l'évènement qui regarde la taille de la fenêtre\n  this.unregisterAuthObserver();\n}\n\n  animFormButton = button => {\n    button.classList.add('formButton-active');\n    setTimeout(() => {\n        button.classList.remove('formButton-active');\n    }, 500);\n  }\n\n  animFormElt = elt => {\n    elt.classList.add('message-enter');\n  }\n\n  getDataBase = myUser => {\n    const { userId, choixUserUid, newUserUid } = this.state;\n    const userUid = myUser || this.state.userUid;\n    const currentUser = choixUserUid ? userUid : newUserUid;\n    const ref = firebase.database().ref(`${currentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${userUid}/user/`).on('value', snapshot => {\n              this.setState({ \n                help: snapshot.val().help,\n                inverseProduit: snapshot.val().inverseProduit,\n                userUid: snapshot.val().userUid,\n                newUserUid: snapshot.val().newUserUid,\n                choixUserUid: snapshot.val().choixUserUid,\n                currentUserUid: snapshot.val().choixUserUid === true ? snapshot.val().userUid : snapshot.val().newUserUid,\n                linkName: snapshot.val().linkName,\n                followers: snapshot.val().followers,\n                followWindow: snapshot.val().followWindow\n               });\n               if(snapshot.val().choixUserUid) {\n                firebase.database().ref(`${currentUser}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               } else {\n                const newUserUid = snapshot.val().newUserUid;\n                firebase.database().ref(`${newUserUid}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               }\n            });\n            \n            } else {\n              firebase.database().ref(`${userUid}`).set({\n                user: {\n                  userName: userId,\n                  userUid: userUid,\n                  newUserUid: '',\n                  help: true,\n                  inverseProduit: true,\n                  choixUserUid: true,\n                  linkName: '',\n                  followers: [],\n                  followWindow: true\n                }\n              });\n              this.setState({\n                loading: false\n            });\n          }\n        });\n  }\n\n  //charger la database du compte sélectionné\n  getOtherDataBase = (linkName) => {\n    const curentUser = this.state.currentUserUid;\n    const user = this.state.userId;\n    const ref = firebase.database().ref(`${curentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${curentUser}/user`).on('value', snapshot => {\n              this.setState({ \n                linkName: snapshot.val().userName === user ? linkName : snapshot.val().userName  //probleme quand retour sur user d'origine\n               });\n            });\n            firebase.database().ref(`${curentUser}`).on('value', snapshot => {\n              Object.keys(snapshot.val()).map(item =>\n                listItem.push(item)\n              );\n                this.setState({\n                  listeDeBase: listItem,\n                  data: snapshot.val(),\n                  loading: false\n                  });\n              });\n            }\n        });\n        \n  }\n\n  adminAddList = () => {\n    const { data } = this.state;\n    const listeExemple = [];\n    Object.keys(data).map(item => item === 'Liste d\\'exemple' ? listeExemple.push(data[item]) : null);\n    firebase.database().ref('Liste-Exemple/').push(listeExemple);\n  }\n\n  showFormulaire = () => {\n    const showForm = !this.state.showForm;\n    \n    setTimeout(() => {\n      this.setState({ showForm });\n    }, 300);\n  }\n\n  //détecter la taille de la fenêtre\n  handleResize = () => this.setState({\n    hauteur: window.innerHeight,\n    largeur: window.innerWidth\n  });\n\n  // detection du scroll\n  handleScroll = () => {\n    const { followWindow, showForm } = this.state;\n    let isScroll = 0;\n    const formElt = showForm ? document.getElementById('myForm2') : document.getElementById('buttonSubmit2');\n    let lastPositionY = window.scrollY;\n    if(formElt && followWindow) {\n      if(isScroll !== lastPositionY && lastPositionY > 80) {\n        formElt.classList.add('opacity');\n        if(lastPositionY > 80) {\n          formElt.classList.add('fixedPosition');\n        }\n        setTimeout(() => {\n          isScroll = lastPositionY;\n          formElt.classList.remove('opacity');\n        }, 600);\n      }\n      if(lastPositionY <= 80) {\n        formElt.classList.remove('fixedPosition');\n      }\n    }\n}\n\n  // on ou off de l'aide\n  toggleSwitchHelp = checked => {\n    const { userUid } = this.state;\n    const help = checked;\n    this.setState({ help });\n    let updates = {};\n    updates[`${userUid}/user/help`] = !help;\n    return firebase.database().ref().update(updates);\n  }\n\n  // on ou off pour inverser l'ordre des produits\n  toggleSwitchInverseProduit = checked => {\n    const { userUid } = this.state;\n    const inverseProduit = checked;\n    this.setState({ inverseProduit });\n    let updates = {};\n    updates[`${userUid}/user/inverseProduit`] = !inverseProduit;\n    return firebase.database().ref().update(updates);\n  }\n\n  toggleSwitchFollowWindow = checked => {\n    const followWindow = checked;\n    this.setState({ followWindow });\n  }\n\n  // changer l'uid pour rejoindre une liste\n  changeUserUid = event => {\n    const newUserUid = event.target.value;\n    if(newUserUid.length > 20) {\n      this.setState({ \n        newUserUid, \n        changeUserInput: true \n      });\n    }\n  }\n\n  error = text => {\n    message.error(`${text}`);\n  };\n\n  //valider le changement de l'uid\n  valideChangeUserUid = () => {\n    const { newUserUid, changeUserInput, userUid, userId } = this.state;\n    const followers = [];\n    const message = 'Utilisateur trouvé!'\n    //on rajoute le nom du followers\n    followers.push(userId);\n    let updates = {};\n    if(newUserUid !== '' && changeUserInput) {\n      firebase.database().ref(`${newUserUid}/user/userName`).on('value', snapshot => {\n        if(snapshot.val()) {\n          this.setState({ \n            linkName: snapshot.val(),\n            followers,\n            changeUserInput: false\n          });\n          updates[`${userUid}/user/linkName`] = snapshot.val();\n          firebase.database().ref().update(updates);\n\n          updates[`${userUid}/user/newUserUid`] = newUserUid;\n          firebase.database().ref().update(updates);\n      \n          updates[`${newUserUid}/user/followers`] = followers;\n          firebase.database().ref().update(updates);\n\n          this.success(message);\n        } else {\n          this.error('Cet utilisateur n\\'existe pas');\n          return;\n        }\n      });\n    } else {\n      this.error('Erreur de saisie');\n    }\n  }\n\n  choisirUserUid = event => {\n    const { choixUserUid, userUid, linkName} = this.state;\n    this.setState({ \n      choixUserUid: !choixUserUid,\n      currentUserUid: event.target.name\n    });\n\n    const choixDB = !choixUserUid;\n    if(choixDB) {\n        this.getDataBase();\n    } else {\n        this.getOtherDataBase(linkName);\n    }\n\n    this.success('Liste chargée!');\n        this.setState({ \n          currentTitre: '',\n          clicked: false,\n          choixComponent: 'menu'\n        });\n\n    let updates = {};\n    updates[`${userUid}/user/choixUserUid`] = !choixUserUid;\n    firebase.database().ref().update(updates);\n  }\n\n  // compteur de produits dans une liste\n  countProduit = arrayData => {\n    let countItemPos = [];\n    let countItemNeg = [];\n    arrayData.map(elt => Object.keys(elt.categoryItems)\n      .map(item => elt.categoryItems[item].checked === false ? \n          countItemNeg.push(elt.categoryItems[item].checked)\n          : \n          countItemPos.push(elt.categoryItems[item].checked)));\n    this.setState({\n        countItem : countItemNeg.length - countItemPos.length\n    });\n}\n\n  // Regarde si un produit est checked\n  isChecked = item => {\n    const { currentUserUid, currentTitre, data } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const divElt = collapse.parentElement.parentElement.parentElement;\n    divElt.classList.toggle('flip');\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    item.checked = !item.checked;\n\n    this.setState({ data });\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n}\n  // Delete un produit\n  delete = item => {\n    const { currentUserUid, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const contentElt = collapse.parentElement.parentElement.parentElement.parentElement.childNodes;\n    \n    this.setState({ \n      indexItem: `elt-${item.item}`,\n      numChildCategory: contentElt.length\n  });\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    if(contentElt.length === 1) {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n        const indexCat = snapshot.key;\n          firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${indexCat}`).remove();\n      });\n      setTimeout(() => {\n        this.setState({ indexItem: null});\n      }, 50);\n    } else {\n        firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n          snapshot.forEach(function(childSnapshot){\n            const indexItem = childSnapshot.key;\n              firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${indexItem}`).remove();\n          });\n        });\n        setTimeout(() => {\n          this.setState({ indexItem: null});\n        }, 50);\n    }\n  }\n\n  // delete une catégorie\n  deleteCategory = (item, id) => {\n    const user = this.state.currentUserUid;\n    const collapse = document.getElementById(item.titreCat);\n    const currentTitre = this.state.currentTitre;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === collapse.id ? childSnapshot.key : null;\n      });\n    });\n\n    firebase.database().ref(`${user}/${currentTitre}/category/${index}`).remove();\n    \n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 50);\n  }\n\n  deleteList = (item) => {\n    const { currentUserUid } = this.state;\n    this.setState({ indexItem: `elt-${item}` });\n\n    firebase.database().ref(`${currentUserUid}/${item}`).remove();\n\n    setTimeout(() => {\n      this.setState({ indexItem: null });\n    }, 50);\n    \n  }\n\n  confirmDelete = item => {\n    this.setState({ clicked: false });\n    this.deleteList(item);\n    message.success('Liste effacée');\n  }\n\n  cancel = e => {\n      message.error('Action annulée');\n    }\n\n  onChangeComment = (event, item) => {\n    const newComment = event.target.value;\n    item.comment = newComment;\n    this.setState({\n      item,\n      newComment\n    });\n  }\n\n  onChangeCount = (value, item) => {\n    const count = value;\n    item.count = value;\n    this.setState({\n      count,\n      item\n    });\n  }\n\n  onChangeTypeCount = (value, item) => {\n    const typeCount = value;\n    item.typeCount = value;\n    this.setState({\n      typeCount,\n      item\n    });\n  }\n\n  modalContent = item => {\n    const { count, largeur, typeCount } = this.state;\n    return (\n      <>\n        <Row gutter={largeur > 720 ? 12 : 8}>\n          <Col span={ largeur > 720 ? 14 : 24 }>\n            <Slider\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              onChange={e => this.onChangeCount(e, item)}\n              value={typeof count === 'number' ? count : 0}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <InputNumber\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              style={{ marginLeft: 16, width: '90%', fontSize: '16px' }}\n              value={count}\n              onChange={e => this.onChangeCount(e, item)}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <Select defaultValue={typeCount} onChange={e => this.onChangeTypeCount(e, item)} style={{ width: '90%' }}>\n              <Option value='unité'>{count <= 1 ? 'unité' : 'unités'}</Option>\n              <Option value='boite'>{count <= 1 ? 'boite' : 'boites'}</Option>\n              <Option value='litre'>{count <= 1 ? 'litre' : 'litres'}</Option>\n              <Option value='ml'>ml</Option>\n              <Option value='cl'>cl</Option>\n              <Option value='Kilo'>{count <= 1 ? 'kilo' : 'kilos'}</Option>\n              <Option value='Gramme'>{count <= 1 ? 'gramme' : 'grammes'}</Option>\n            </Select>\n          </Col>\n        </Row>\n        <TextArea \n          placeholder='ajouter un commentaire' \n          autosize={{ minRows: 5, maxRows: 10 }} \n          onChange={e => this.onChangeComment(e, item)}\n          value={item.comment} \n          rows={10}\n          cols={largeur > 720 ? 50 : 30}\n          autoFocus\n          autoComplete='on'\n          style={{ marginTop: '1em', ontSize: '16px' }}\n          onPressEnter={event => this.onClose(event, item)}\n        />\n      </>\n    )\n  }\n\n  modalContentCourse = item => {\n    const { count, largeur } = this.state;\n    const image = (\n        <Skeleton paragraph={{ rows: 4, width: ['90%', '90%','90%','90%'] }} title={false}>\n          <img alt=\"prochainement\" src={prochainement} />\n        </Skeleton>\n    )\n    return(\n        <Card\n          style={{ width: largeur > 720 ? '70%' : '90%', paddingTop: '1em'}}\n          cover={image}\n        >\n          <Meta\n            avatar={<Avatar style={{ backgroundColor: '#009688' }} icon=\"user\" />}\n            title={item.item}\n          />\n            <br/>\n            {\n              count ?\n              <>\n              <h4>Quantité</h4>\n              <p>{item.count} {item.typeCount}{count <= 1 ? '': 's'}</p>\n              </>\n              :\n              null\n            }\n            {\n              item.comment ?\n              <>\n                <h4>Commentaire</h4>\n                <p>{item.comment}</p>\n              </>\n              :\n              <>\n                <h4>Commentaire</h4>\n                <p>Rien ici!</p>\n              </>\n            }\n        </Card>\n    )\n  }\n\n  //faire apparaitre/disparaitre la commentaire\n  toggleComment = item => {\n    this.setState({ \n      visible: true,\n      item,\n      count: item.count,\n      typeCount: item.typeCount,\n    });\n  }\n\n  onClose = (event, item) => {\n    this.addComment(event, item);\n    this.setState({\n      visible: false,\n      count: 0,\n      typeCount: 'unité',\n    });\n  };\n\n  // Ajouter un commentaire à un élément de la liste\n  addComment = (event, items) => {\n    event.preventDefault();\n    const { currentUserUid, item, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${items.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(items.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  //remettre la liste a zéro (check)\n  reloadList = () => {\n    const { currentTitre, data, currentUserUid } = this.state;\n    const arrayData = [];\n    Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\n    arrayData.map(elt => Object.keys(elt.categoryItems)\n      .map(item => elt.categoryItems[item].checked === true ? \n        elt.categoryItems[item].checked = false : null));\n\n    this.setState({ data });\n\n    let updates = {};\n    updates[`/${currentUserUid}`] = data;\n  \n    return firebase.database().ref().update(updates);\n  }\n\n  //rendre une liste privée\n  changeLocked = (item, title) => {\n    const { currentUserUid } = this.state;\n    item.locked = !item.locked;\n\n    let updates = {};\n    updates[`/${currentUserUid}/${title}/`] = item;      \n    return firebase.database().ref().update(updates);\n  }\n\n  //cache ou non une catégorie\n  categoryVisible = elt => {\n  const { currentUserUid, currentTitre } = this.state;\n  const currentCategory = elt.titreCat;\n\n  elt.categoryIsVisible = !elt.categoryIsVisible;\n\n  let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/`] = elt;\n          \n  return firebase.database().ref().update(updates);\n  }\n\n  itemVisible = item => {\n    const { currentUserUid, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    item.itemIsVisible = !item.itemIsVisible;\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n          \n  return firebase.database().ref().update(updates);\n  }\n\n  // Créer une catégorie dans la liste de course\n  createNewCategory = event => {\n    event.preventDefault();\n    const { currentUserUid, currentTitre, currentCategory, choixComponent } = this.state;\n    const formInput = document.querySelector('#myForm>input');\n    const todoFormButton = document.querySelector('#myForm>button');\n    let category = '';\n    if(currentCategory === 'Ajout de dernière minute' && choixComponent === 'enCourse') {\n      category = 'Ajout de dernière minute';\n    } else {\n      const cat = formInput.value;\n      category = cat.charAt(0).toUpperCase() + cat.substring(1).toLowerCase();\n    }\n    \n    if(formInput.value === '') {\n      this.setState({ \n        showForm: false\n      });\n      return null\n    }\n    const timestamp = Date.now();\n    //insérer une catégorie sans exemple de produit!\n    const data = {\n      titreCat: category,\n      categoryIsVisible: true,\n      key: timestamp,\n      showCategory: true\n    }\n    //on regarde si la catégorie existe déjà\n    let categoryExist = false;\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot) {\n        return categoryExist = childSnapshot.val().titreCat === category ? true : false;\n      });\n    });\n    //si la catégorie n'existe pas, on la push dans la bdd\n    if(!categoryExist) {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).push({\n        ...data\n      });\n      this.setState({\n        currentCategory: category,\n        isCategory: false,\n        showForm: false\n      });\n      this.animFormButton(todoFormButton);\n    } else { // si elle existe message d'alerte\n      this.error('Cette catégorie existe déjà!');\n    }\n    formInput.value = '';\n  }\n\n  //message qui annonce la catégorie sélectionnée\n  success = text => {\n    message.config({\n      top: 90,\n      duration: 2\n    });\n    message.success(`${text}`);\n  };\n\n  // on ouvre le formulaire\n  openInput = titre => {\n    const currentCategory = titre;\n    this.setState({ \n      inputOpen: true,\n      currentCategory\n    });\n  }\n\n  // Créer un élément de liste de course\n  createNewItem = event => {\n    event.preventDefault();\n    const { currentUserUid, currentCategory, currentTitre } = this.state;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const dataElt = todoFormInput.value;\n    const newData = dataElt.charAt(0).toUpperCase() + dataElt.substring(1).toLowerCase();\n\n    if(todoFormInput.value === '') {\n      this.setState({ \n        inputOpen: false\n      });\n      return null\n    }\n\n    if(currentCategory === 'Ma super catégorie') {\n      this.createNewCategory(event);\n      return null;\n    }\n\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n    this.setState({ inputOpen: false });\n  }\n\n  // Ajout d'un titre de liste de course\n  addNewListTitre = event => {\n    event.preventDefault();\n    const { currentUserUid } = this.state;\n    const formInput = document.querySelector('#form-input');\n    const todoFormButton = document.querySelector('#myButtonSubmit');\n    const titre = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n\n    this.setState(prevState => ({\n      listeDeBase: [...prevState.listeDeBase, titre],\n      isCategory: true\n    }));\n\n    firebase.database().ref(`${currentUserUid}/${titre}`).set({\n      locked: false\n    });\n\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n  }\n\n  // Détecte quelle liste à été choisie\n  choixListe = title => {\n    this.setState({\n      currentTitre: title,\n      clicked: true\n    });\n  }\n\n  // En Course --------> Check toute la catégorie\n  checkCurrentCategory = (titreCat, showCategory) => {\n    const { choixComponent, currentTitre, currentUserUid } = this.state;\n    const titre = document.getElementById(titreCat);\n    if(!titreCat) {\n      return null\n    } else {\n      if(choixComponent === 'enCourse') {\n        titre.lastChild.firstChild.classList.toggle('hidden');\n      } else {\n        // titre.lastChild.firstChild.classList.toggle('hidden');\n        // titre.children[1].classList.toggle('hidden');\n      }\n      //on cherche l'index de la catégorie selectionnée\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === titreCat ? childSnapshot.key : null;\n        });\n      });\n      let updates = {};\n      updates[`/${currentUserUid}/${currentTitre}/category/${index}/showCategory`] = !showCategory;   \n      firebase.database().ref().update(updates);\n    }\n  }\n\n  // EN COURSE --------> Crée un item dans la catégorie derniere minute\n  createNewItemLastMinute = event => {\n    event.preventDefault();\n    const todoFormInput = document.querySelector('.formu>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    if(!newData) {\n      return\n    }\n    const { currentUserUid, currentCategory, currentTitre, lastMinuteItem } = this.state;\n    const timestamp = Date.now();\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    //on regarde si la catégorie existe déjà pour ne pas en recréer une identique\n    let hasTitreCat = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n         return hasTitreCat = childSnapshot.val().titreCat === 'Ajout de dernière minute';\n      });\n    });\n\n    if(currentCategory === 'Ajout de dernière minute' && !lastMinuteItem && !hasTitreCat) {\n      this.createNewCategory(event);\n      this.setState({ lastMinuteItem: true });\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n    this.setState({ showForm: false });\n  }\n\n  // charger une liste d'exemple\n  loadListExemple = () => {\n    const { currentTitre, currentUserUid } = this.state;\n    firebase.database().ref('Liste-Exemple/-LY14-nVOqZIM_Cn9Ma6/0/').on('value', snapshot => {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/`).set(snapshot.val().category);\n    });\n  }\n\n  // utilisé sur bouton pour retour en arrière\n  goHome = () => {\n    this.setState({ clicked: false, isCategory: true });\n  }\n\n  // retour au menu de l'accueil\n  returnToApp = () => {\n    this.setState({ choixComponent: 'menu' });\n  }\n\n  // détecte le composant choisi à l'accueil\n  choixComponent = event => {\n    const choixComponent = event.target.name;\n    if(choixComponent !== '') {\n      if(choixComponent === 'enCourse') {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ajout de dernière minute',\n          showForm: false\n        });\n      } else {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ma super catégorie',\n          showForm: false\n        });\n      }\n    }\n  }\n\n  hideText = () => {\n    const clickedText = this.state.clickedText;\n    this.setState({ clickedText : !clickedText });\n}\n\n//changer le texte d'un produit\nchangeItem = item => {\n  this.setState({ \n    itemIsChanged: true,\n    itemSelected: item.key\n  });\n}\n\n//changer le texte d'une catégorie\nchangeCategory = elt => {\n  this.setState({\n    categoryIsChanged: true,\n    categorySelected: elt.key,\n    currentCategory: elt.titreCat\n   });\n}\n\n//on capture le changement categorie\nhandleChangeCategory = (event, elt) => {\n  elt.titreCat = event.target.value;\n  this.setState({ category: elt.titreCat });\n}\n\n//on capture le changement produit\nhandleChangeItem = (event, item) => {\n  item.item = event.target.value;\n  this.setState({ item });\n}\n\n//on valide le changement de catégorie\nvalideChangeCategory = (event, elt) => {\n  const { currentUserUid, currentTitre, category, currentCategory } = this.state;\n  //on cherche l'index de la catégorie selectionnée\n  let index = '';\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n        return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n    });\n  });\n  if(event.key === 'Enter' && category !== null) {\n    //on regarde si la catégorie existe déjà\n    let categoryExist = false;\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot) {\n        return categoryExist = childSnapshot.val().titreCat === category ? true : false;\n      });\n    });\n    //si la catégorie n'existe pas, on la push dans la bdd\n    if(!categoryExist) {\n      let updates = {};\n      updates[`/${currentUserUid}/${currentTitre}/category/${index}/titreCat`] = category;   \n      firebase.database().ref().update(updates);\n    } else { // si elle existe message d'alerte\n      this.error('Cette catégorie existe déjà!');\n    }\n    setTimeout(() => {\n      this.setState({\n        categoryIsChanged: false,\n        categorySelected: elt.titreCat,\n        category: null\n       });\n    }, 50);\n  } else {\n    this.setState({\n      categoryIsChanged: false\n     });\n  }\n}\n\n// on valide le changement du produit\nvalideChangeItem = (event, item) => {\n  const { currentUserUid, currentTitre } = this.state;\n  const collapse = document.querySelector(`#elt-${item.key}`);\n  const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n  if(event.key === 'Enter') {\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n          \n  firebase.database().ref().update(updates);\n\n    this.setState({ \n      itemIsChanged: false,\n      itemSelected: '',\n      item: null  \n    });\n  }\n}\n\ndeconnexion = () => {\n  firebase.auth().signOut().then(function() {\n    this.setState({ isSignedIn: false });\n  }).catch(function(error) {\n    console.log(error);\n  });\n}\n\n//choix composant via headermenu\nhandleClick = event => {\n  const choixComponent = event.key;\n  if(choixComponent !== '') {\n    if(choixComponent === 'enCourse') {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ajout de dernière minute',\n        clicked: false,\n        currentTitre: '',\n        showForm: false\n      });\n    } else {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ma super catégorie',\n        clicked: false,\n        currentTitre: '',\n        showForm: false,\n        isCategory: true\n      });\n    }\n  }\n}\n\n  //renvoie dans le render le composent choisit\n  renderChoiseConponent = () => {\n    const { choixComponent } = this.state;\n    switch(choixComponent) {\n      case 'enCourse':\n      return <EnCourse\n                returnToApp={this.returnToApp}\n                choixListe={this.choixListe}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                createNewItemLastMinute={this.createNewItemLastMinute}\n                goHome={this.goHome}\n                currentTitre={this.state.currentTitre}\n                data={this.state.data}\n                checkCurrentCategory={this.checkCurrentCategory}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                largeur={this.state.largeur}\n                modalContentCourse={this.modalContentCourse}\n                showFormulaire={this.showFormulaire}\n                showForm={this.state.showForm}\n                handleScroll={this.handleScroll}\n                choixUserUid={this.state.choixUserUid}\n              />\n      case 'mesListes':\n      return <Home\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                addNewListTitre={this.addNewListTitre}\n                deleteList={this.deleteList}\n                loading={this.state.loading}\n                data={this.state.data}\n                returnToApp={this.returnToApp}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                changeItem={this.changeItem}\n                itemIsChanged={this.state.itemIsChanged}\n                handleChangeItem={this.handleChangeItem}\n                valideChangeItem={this.valideChangeItem}\n                itemSelected={this.state.itemSelected}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                createNewCategory={this.createNewCategory}\n                isCategory={this.state.isCategory}\n                currentCategory={this.state.currentCategory}\n                numChildCategory={this.state.numChildCategory}\n                deleteCategory={this.deleteCategory}\n                currentTitre={this.state.currentTitre}\n                isToggleSwitchType={this.state.isToggleSwitchType}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                modalContent={this.modalContent}\n                largeur={this.state.largeur}\n                itemIsVisible={this.state.itemIsVisible}\n                itemVisible={this.itemVisible}\n                handleScroll={this.handleScroll}\n                showForm={this.state.showForm}\n                showFormulaire={this.showFormulaire}\n                categoryVisible={this.categoryVisible}\n                categoryIsVisible={this.state.categoryIsVisible}\n                reloadList={this.reloadList}\n                confirmDelete={this.confirmDelete}\n                cancel={this.cancel}\n                changeLocked={this.changeLocked}\n                choixUserUid={this.state.choixUserUid}\n                inputOpen={this.state.inputOpen}\n                openInput={this.openInput}\n                checkCurrentCategory={this.checkCurrentCategory}\n                loadListExemple={this.loadListExemple}\n                showCategory={this.state.showCategory}\n                categoryIsChanged={this.state.categoryIsChanged}\n                category={this.state.category}\n                categorySelected={this.state.categorySelected}\n                changeCategory={this.changeCategory}\n                handleChangeCategory={this.handleChangeCategory}\n                valideChangeCategory={this.valideChangeCategory}\n              />\n      case 'monProfil':\n      return <ProfilUser\n              returnToApp={this.returnToApp}\n              user={this.state.userId}\n              toggleSwitchHelp={this.toggleSwitchHelp}\n              help={this.state.help}\n              toggleSwitchInverseProduit={this.toggleSwitchInverseProduit}\n              inverseProduit={this.state.inverseProduit}\n              userUid={this.state.userUid}\n              changeUserUid={this.changeUserUid}\n              valideChangeUserUid={this.valideChangeUserUid}\n              newUserUid={this.state.newUserUid}\n              choixUserUid={this.state.choixUserUid}\n              choisirUserUid={this.choisirUserUid}\n              linkName={this.state.linkName}\n              followWindow={this.state.followWindow}\n              toggleSwitchFollowWindow={this.toggleSwitchFollowWindow}\n              deconnexion={this.deconnexion}\n              />\n      default:\n      return null\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14}} lg={{ span: 10 }} id='connexion'>\n            <h1>Check-Course</h1>\n            <p>Veuillez vous connecter svp:</p>\n            <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n          </Col>\n        </Row>\n      );\n    }\n    if(this.state.loading) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14 }} lg={{ span: 10}} id='load'>\n            <Loading/>\n            <h3>Chargement du caddie</h3>\n          </Col>\n        </Row>\n      )\n    }\n    \n    return (\n        <Row type=\"flex\" justify=\"space-around\" id='main'>\n          <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} id='mainCol' >\n          <Layout>\n            <Header \n              style={{ \n                padding : this.state.largeur >= 480 ? '0 50px' : '0'\n              }}>\n              <Col xs={0} lg={4}>\n                {\n                  this.state.largeur >= 480 ? \n                  <h4><Icon type=\"shopping-cart\" />Check-Course</h4>\n                  :\n                  null\n                }\n              </Col>\n              <Col xs={24} lg={20} \n                style={{\n                  textAlign : this.state.largeur >= 480 ? 'right' : 'center',\n                  fontSize : this.state.largeur >= 480 ? '0.9em' : '0.7em'\n                }}\n              >\n                  <HeaderMenu\n                    handleClick={this.handleClick}\n                    choixComponent={this.choixComponent}\n                    choixComponentState={this.state.choixComponent}\n                  />\n              </Col>\n            </Header>\n          <Content>\n            \n            {\n              this.state.choixComponent === 'menu' ?\n              <>\n                <Col span={24} id={this.state.largeur >= 480 ? 'bckLogo' : 'bckLogo2'}>\n                  <Icon type=\"shopping-cart\" />\n                  <h2>CHECK-COURSE</h2>\n                </Col>\n                <Menu\n                  choixComponent={this.choixComponent}\n                  user={this.state.userId}\n                  hideText={this.hideText}\n                  clickedText={this.state.clickedText}\n                  help={this.state.help}\n                />\n                {\n                // Ligne a mettre en commentaire quand pas utilisé\n                // this.adminAddList() // envoie une liste d'exemple dans la bdd\n                // Ligne a mettre en commentaire quand pas utilisé\n                }\n              </>\n              :\n              this.renderChoiseConponent()\n            }\n            </Content>\n              <Footer>\n                <p>Created By Mikael</p>\n              </Footer>\n            </Layout>\n            </Col>\n          </Row>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { LocaleProvider } from 'antd';\nimport fr_FR from 'antd/lib/locale-provider/fr_FR';\n\nReactDOM.render(\n    <LocaleProvider locale={fr_FR}>\n        <App />\n    </LocaleProvider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}