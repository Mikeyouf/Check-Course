{"version":3,"sources":["firebase.js","Components/Item.js","Components/ItemList.js","Components/List.js","Components/MyLists.js","Components/Home.js","Components/Loading.js","Components/EnCourse.js","Components/Menu.js","Components/ProfilUser.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Panel","Collapse","Item","_this","this","indexItem","props","numChildCategory","currentTitre","data","arrayData","Object","keys","map","item","category","categoryItem","push","liste","elt","id","react_default","a","createElement","es_collapse","defaultActiveKey","titreCat","key","concat","header","row","type","justify","align","col","xs","md","lg","name","className","onClick","deleteCategory","icon","style","color","fontSize","accordion","categoryItems","sm","tooltip","placement","title","mouseEnterDelay","es_button","checked","shape","size","block","isChecked","background","delete","border","toggleComment","comment","badge","status","span","onSubmit","e","closeComment","value","placeholder","onChange","addComment","show","maxLength","Fragment","Component","ItemList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","reverse","list","getCurrentCategory","bordered","dataSource","renderItem","List","isCategory","items","Components_Item","titre","titreListe","currentCategory","createNewCategory","createNewItem","es_switch","checkedChildren","unCheckedChildren","toggleSwitch","toggleSwitchType","isToggleSwitchType","Components_ItemList","MyLists","padding","Components_List","listeDeBase","indexInput","placeholderElt","marginRight","goHome","Home","choixListe","deleteList","clicked","Components_MyLists","returnToApp","length","addNewListTitre","Loading","react_loading_default","height","width","EnCourse","Menu","clickedText","display","dispay","hideText","margin","choixComponent","ProfilUser","user","Header","Layout","Footer","Content","App","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","animFormButton","button","classList","add","setTimeout","remove","animFormElt","getDataBase","userId","ref","on","snapshot","listItem","val","console","log","setState","loading","collapse","document","querySelector","parentElement","newData","product","objectSpread","index","forEach","childSnapshot","itemKey","orderByChild","equalTo","updates","update","getElementById","event","preventDefault","commentName","target","formInput","todoFormButton","prevState","timestamp","Date","now","todoFormInput","toConsumableArray","deconnexion","signOut","currentUser","displayName","renderChoiseConponent","Components_EnCourse","Components_Home","Components_ProfilUser","config","isSignedIn","bind","assertThisInitialized","unregisterAuthObserver","onAuthStateChanged","_this3","contentElt","childElementCount","indexCat","_this4","Components_Loading","layout","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c695f813.chunk.js","sourcesContent":["export default {\r\n    apiKey: \"AIzaSyASNdLHf9itHbMfni5KLun3kcA57LFgkFg\",\r\n    authDomain: \"check-list-course.firebaseapp.com\",\r\n    databaseURL: \"https://check-list-course.firebaseio.com\",\r\n    projectId: \"check-list-course\",\r\n    storageBucket: \"check-list-course.appspot.com\",\r\n    messagingSenderId: \"873680903792\"\r\n}","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport { Tooltip, Collapse, Row, Col, Button, Icon, Badge  } from 'antd';\r\n\r\nconst Panel = Collapse.Panel;\r\n\r\nclass Item extends Component {\r\n    render() { \r\n        const indexItem = this.props.indexItem;\r\n        const numChildCategory = this.props.numChildCategory;\r\n        const currentTitre = this.props.currentTitre;\r\n        const data = this.props.data;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n\r\n        const liste = (arrayData || []).map((elt, id) =>\r\n            <Collapse \r\n                defaultActiveKey={elt.titreCat} \r\n                key={`titreCat-${id}`}\r\n                id={`titreCat-${id}`}\r\n            >\r\n                <Panel header={\r\n                    <Row type=\"flex\" justify=\"space-around\" align='middle'>\r\n                        <Col xs={18} md={20}  lg={22}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                        <Col xs={3} md={2} lg={1}>\r\n                            <input type='checkbox' id={elt.titreCat}/>\r\n                        </Col>\r\n                        <Col xs={3} md={2} lg={1}>\r\n                        <button \r\n                        name=\"trash\" \r\n                        className=\"trash\" \r\n                        onClick={() => this.props.deleteCategory(elt, id)}>\r\n                            <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                        </button>\r\n                        </Col>\r\n                    </Row>\r\n                    } \r\n                    key={elt.titreCat} \r\n                    id={elt.titreCat} \r\n                    accordion={true}\r\n                    >   \r\n                    {   \r\n                        (Object.keys(elt.categoryItems || [])).map((item, id) =>\r\n                        <Row type=\"flex\" justify=\"space-between\" align=\"middle\" className={indexItem === `elt-${elt.categoryItems[item].item}` && numChildCategory > 1 ? 'item-container message-leave': 'item-container'} id={`elt-${elt.categoryItems[item].key}`} key={elt.categoryItems[item].key}>\r\n                            <Col xs={3} sm={2} md={2} lg={1} id='check'>\r\n                                <Tooltip placement=\"topLeft\" title='Valider' mouseEnterDelay={0.5} >\r\n                                    <Button\r\n                                        className={elt.categoryItems[item].checked ? 'isChecked' : 'checked'}\r\n                                        shape=\"circle\"\r\n                                        type='primary'\r\n                                        size='large'\r\n                                        block\r\n                                        onClick={() => this.props.isChecked(elt.categoryItems[item], id)}\r\n                                    >\r\n                                        <Icon type='check'/>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            </Col>\r\n                            <Col xs={21} sm={22} md={22} lg={23}>\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    className={elt.categoryItems[item].checked ? 'ant-row-flex ant-row-flex-space-between ant-row-flex-middle flipCollapse' : 'ant-row-flex ant-row-flex-space-between ant-row-flex-middle'} \r\n                                    key={elt.categoryItems[item].key}\r\n                                >\r\n                                    <Col xs={12} sm={18} md={18} lg={20}>\r\n                                        {elt.categoryItems[item].item}\r\n                                    </Col>\r\n                                    <Col xs={6} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Supprimer' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                style={{ background: 'transparent' }}\r\n                                                name=\"trash\" \r\n                                                className=\"trash\"\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.delete(elt.categoryItems[item], id)}>\r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                    <Col xs={6} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Commentaire' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(elt.categoryItems[item])}>\r\n                                                {\r\n                                                    elt.categoryItems[item].comment === '' ?\r\n                                                    <Icon type='message' style={{color: '#009688', fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688', fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                                <Col span={23} push={1}>\r\n                                    <form className='form-comm' onSubmit={e => this.props.closeComment(e, elt.categoryItems[item])}>\r\n                                        <input \r\n                                            value={elt.categoryItems[item].comment} \r\n                                            name='comment' \r\n                                            type='text'\r\n                                            id='inputComment'\r\n                                            placeholder='ajouter un commentaire'\r\n                                            onChange={(e) => this.props.addComment(e, elt.categoryItems[item])}\r\n                                            className={elt.categoryItems[item].show ? 'item message-enter-active' : 'item message-leave-active'}\r\n                                            maxLength={50}\r\n                                        />\r\n                                    </form>\r\n                                </Col>\r\n                        </Row>\r\n                            )\r\n                    }\r\n                    </Panel>\r\n                </Collapse>\r\n        )\r\n\r\n        return ( \r\n            <>\r\n                {liste}\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Item;","import React, { Component } from 'react';\r\n\r\nimport { List, Row, Col, Icon, Tooltip, Button, Badge } from 'antd';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        const indexItem = this.props.indexItem;\r\n        const numChildCategory = this.props.numChildCategory;\r\n        const currentTitre = this.props.currentTitre;\r\n        const data = this.props.data;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        arrayData.reverse();\r\n        const liste = (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                        <Col xs={18} md={20}  lg={22} className='titreCat' onClick={() => this.props.getCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                        <Col xs={3} md={2} lg={1}>\r\n                            <input type='checkbox' id={elt.titreCat}/>\r\n                        </Col>\r\n                        <Col xs={3} md={2} lg={1}>\r\n                            <button \r\n                            name=\"trash\" \r\n                            className=\"trash\" \r\n                            onClick={() => this.props.deleteCategory(elt, id)}>\r\n                                <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                        {/* <Row type=\"flex\" justify=\"space-around\" align=\"middle\" className={indexItem === `elt-${item.item}` && numChildCategory > 1 ? 'message-leave': ''} id={`elt-${item.key}`} key={item.key}> */}\r\n                            <Col span={24} >\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    // className={item.checked ? '.ant-list-bordered .ant-list-item flip' : '.ant-list-bordered .ant-list-item'} \r\n                                    key={item.key}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={16} sm={18} md={18} lg={20} onClick={() => this.props.isChecked(item, id)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Supprimer' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                style={{ background: 'transparent' }}\r\n                                                name=\"trash\" \r\n                                                className=\"trash\"\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.delete(item, id)}>\r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Commentaire' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Col span={24} className={item.show ? 'form-comm-container-active' : 'form-comm-container'}>\r\n                                    <form className='form-comm' onSubmit={e => this.props.closeComment(e, item)}>\r\n                                        <input \r\n                                            value={item.comment} \r\n                                            name='comment' \r\n                                            type='text'\r\n                                            id='inputComment'\r\n                                            placeholder='ajouter un commentaire'\r\n                                            onChange={(e) => this.props.addComment(e, item)}\r\n                                            className={item.show ? 'item message-enter-active' : 'item message-leave-active'}\r\n                                            maxLength={50}\r\n                                        />\r\n                                    </form>\r\n                                </Col>\r\n                            </Col>\r\n                                \r\n                        {/* </Row> */}\r\n                    </List.Item>\r\n                    )}\r\n            />\r\n    \r\n    );\r\n        return ( \r\n            <>\r\n            {liste}\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React, { Component } from 'react';\r\nimport Item from './Item';\r\nimport ItemList from './ItemList';\r\n\r\nimport { Switch, Col, Icon, Row } from 'antd';\r\n\r\nclass List extends Component {\r\n    render() { \r\n        const isCategory = this.props.isCategory;\r\n        const items = <Item\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titre={this.props.titreListe}\r\n                        closeComment={this.props.closeComment}\r\n                        indexItem={this.props.indexItem}\r\n                        currentCategory={this.props.currentCategory}\r\n                        numChildCategory={this.props.numChildCategory}\r\n                        deleteCategory={this.props.deleteCategory}\r\n                        currentTitre={this.props.currentTitre}\r\n                    />\r\n\r\n        return ( \r\n            <>\r\n            <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                <form className='form form-titre' onSubmit={isCategory === true ? e => this.props.createNewCategory(e) : e => this.props.createNewItem(e)}>\r\n                    <Switch checkedChildren=\"C\" unCheckedChildren=\"P\" checked={isCategory === true ? true : false}  onChange={this.props.toggleSwitch} id='switchButton'/>\r\n                    <input type='text' placeholder={isCategory === true ? 'Entrez une catégorie' : 'Entrez un produit'} maxLength={40} />\r\n                    <button type='submit' id='buttonSubmit'>+</button>\r\n                </form>\r\n            </Col>\r\n            <Col className='mySwitchType' xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                <Icon type=\"database\" style={{ color: '#009688' }}/>\r\n                    <Switch id='switchButtonType' onChange={this.props.toggleSwitchType}/>\r\n                <Icon type=\"bars\" style={{ color: '#009688' }}/>\r\n            </Col>\r\n            <Col span={24}>  \r\n            {\r\n                !this.props.isToggleSwitchType ?\r\n                items\r\n                :\r\n                <ItemList\r\n                    data={this.props.data}\r\n                    isChecked={this.props.isChecked}\r\n                    delete={this.props.delete}\r\n                    toggleComment={this.props.toggleComment}\r\n                    addComment={this.props.addComment}\r\n                    titre={this.props.titreListe}\r\n                    closeComment={this.props.closeComment}\r\n                    indexItem={this.props.indexItem}\r\n                    currentCategory={this.props.currentCategory}\r\n                    numChildCategory={this.props.numChildCategory}\r\n                    deleteCategory={this.props.deleteCategory}\r\n                    currentTitre={this.props.currentTitre}\r\n                    getCurrentCategory={this.props.getCurrentCategory}\r\n                />\r\n            }\r\n            </Col>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default List;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col } from 'antd';\r\n\r\nimport List from './List';\r\n\r\nclass MyLists extends Component {\r\n    render() { \r\n        return ( \r\n            <>\r\n                <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{this.props.currentTitre}</h3>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <List\r\n                        createNewItem={this.props.createNewItem}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        listeDeBase={this.props.listeDeBase}\r\n                        indexInput={this.props.indexInput}\r\n                        placeholderElt={this.props.placeholderElt}\r\n                        closeComment={this.props.closeComment}\r\n                        indexItem={this.props.indexItem}\r\n                        createNewCategory={this.props.createNewCategory}\r\n                        isCategory={this.props.isCategory}\r\n                        currentCategory={this.props.currentCategory}\r\n                        toggleSwitch={this.props.toggleSwitch}\r\n                        numChildCategory={this.props.numChildCategory}\r\n                        deleteCategory={this.props.deleteCategory}\r\n                        currentTitre={this.props.currentTitre}\r\n                        getCurrentCategory={this.props.getCurrentCategory}\r\n                        isToggleSwitchType={this.props.isToggleSwitchType}\r\n                        toggleSwitchType={this.props.toggleSwitchType}\r\n                    />\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyLists;","import React, { Component } from 'react';\r\n\r\nimport MyLists from './MyLists';\r\nimport { Button, Icon, Col } from 'antd';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        const indexItem = this.props.indexItem;\r\n        const listeDeBase = this.props.listeDeBase;\r\n        const liste = listeDeBase.map((item, id) => \r\n        <div key={id}>  \r\n            <Col xs={{ span: 22 }} md={{ span: 23 }} lg={{ span: 23 }} key={`elt-${item}`}>\r\n                <Button \r\n                    size='large' \r\n                    block \r\n                    type=\"primary\"\r\n                    id={item}\r\n                    onClick={e => this.props.choixListe(e)}\r\n                    className={indexItem === `elt-${item}` ? 'item-titre message-leave': 'item-titre'}\r\n                    >\r\n                        {item}\r\n                </Button>\r\n            </Col>\r\n            <Col xs={{ span: 2 }} md={{ span: 1 }} lg={{ span: 1 }} key={`delete-${id}`}>\r\n                <Button \r\n                    size='large' \r\n                    name=\"trash\" \r\n                    type=\"primary\"\r\n                    block \r\n                    className=\"trash\" \r\n                    onClick={() => this.props.deleteList(item)}\r\n                >  \r\n                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                </Button>\r\n            </Col>\r\n        </div>\r\n        );\r\n        return (\r\n            <>\r\n            <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                <h2>Mes Listes</h2>\r\n            </Col>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    { \r\n                        listeDeBase.length >= 3 ?\r\n                        null\r\n                        :\r\n                        <form className='form form-titre' onSubmit={e => this.props.addNewListTitre(e)}>\r\n                            <input type='text' id='form-input' placeholder='Ajouter un titre' maxLength={30}/>\r\n                            <button type='submit' id='myButtonSubmit'>+</button>\r\n                        </form>\r\n                    }\r\n                </Col>\r\n                    <>\r\n                        {liste}\r\n                    </>\r\n                    <Col span={6} style={{ marginRight: '1em' }}>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n            <MyLists\r\n                currentTitre={this.props.currentTitre}\r\n                createNewItem={this.props.createNewItem}\r\n                data={this.props.data}\r\n                isChecked={this.props.isChecked}\r\n                delete={this.props.delete}\r\n                toggleComment={this.props.toggleComment}\r\n                addComment={this.props.addComment}\r\n                titreListe={this.props.titreListe}\r\n                indexInput={this.props.indexInput}\r\n                placeholderElt={this.props.placeholderElt}\r\n                returnToApp={this.props.returnToApp}\r\n                closeComment={this.props.closeComment}\r\n                goHome={this.props.goHome}\r\n                indexItem={this.props.indexItem}\r\n                createNewCategory={this.props.createNewCategory}\r\n                isCategory={this.props.isCategory}\r\n                toggleSwitch={this.props.toggleSwitch}\r\n                numChildCategory={this.props.numChildCategory}\r\n                deleteCategory={this.props.deleteCategory}\r\n                getCurrentCategory={this.props.getCurrentCategory}\r\n                isToggleSwitchType={this.props.isToggleSwitchType}\r\n                toggleSwitchType={this.props.toggleSwitchType}\r\n            />\r\n            </Col>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => (\r\n    <ReactLoading \r\n    type=\"cylon\" \r\n    color=\"#078073\" \r\n    className=\"load\"\r\n    id=\"load\"\r\n    height={200}\r\n    width={200}\r\n    />\r\n)\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport { Button, Icon, Col } from 'antd';\r\n\r\nimport MyLists from './MyLists';\r\n\r\nclass EnCourse extends Component {\r\n    render() { \r\n        const listeDeBase = this.props.listeDeBase;\r\n        const liste = listeDeBase.map((item, id) =>\r\n            <Button \r\n                    size='large' \r\n                    block \r\n                    type=\"primary\" \r\n                    key={id}\r\n                    id={item}\r\n                    onClick={e => this.props.choixListe(e)}\r\n                    className='item-button'\r\n                    >\r\n                {item}\r\n            </Button>\r\n        );\r\n        return ( \r\n            <>\r\n            <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                <h2>En Course</h2>\r\n            </Col>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n            <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                {liste}\r\n            </Col>\r\n            <Col span={6} style={{ marginRight: '1em' }}>\r\n                <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                    <Icon type=\"left\" />Retour\r\n                </Button>\r\n            </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n            <MyLists\r\n                currentTitre={this.props.currentTitre}\r\n                createNewItem={this.props.createNewItem}\r\n                data={this.props.data}\r\n                isChecked={this.props.isChecked}\r\n                delete={this.props.delete}\r\n                toggleComment={this.props.toggleComment}\r\n                addComment={this.props.addComment}\r\n                titreListe={this.props.titreListe}\r\n                indexInput={this.props.indexInput}\r\n                placeholderElt={this.props.placeholderElt}\r\n                returnToApp={this.props.returnToApp}\r\n                closeComment={this.props.closeComment}\r\n                goHome={this.props.goHome}\r\n                indexItem={this.props.indexItem}\r\n            />\r\n            </Col>\r\n            }\r\n            \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourse;","import React, { Component } from 'react';\r\n\r\nimport '../NewApp.css';\r\n\r\nimport { Button, Col } from 'antd';\r\n\r\nclass Menu extends Component {\r\n    render() { \r\n        return ( \r\n            <> \r\n                <div className='intro' style={this.props.clickedText ? {display : 'none'} : {dispay : 'block'}}>\r\n                    <p>\r\n                    Bienvenue dans la version 1 de mon application de liste de course interactive!\r\n                    Tout d'abord merci pour le temps que vous me consacrer afin que je puisse l'améliorer!\r\n                    Il s'agit d'une application de liste de course qui permet/permettra de faire ses courses\r\n                    plus rapidement seul ou à plusieurs.\r\n                    </p>\r\n                    <p>\r\n                    On peut y mettre des commentaires, trier par catégorie, et bientôt pleins d'autres options.\r\n                    </p>\r\n                    <p>\r\n                    Le desgin de l'application n'est pas fait...désolé si ce n'est pas encore très beau, je me\r\n                    concentre sur les fonctionnalités.\r\n                    </p>\r\n                    <p>\r\n                    Pour le moment, une personne par compte, \"mon profile\" n'est pas encore fonctionnel,\r\n                    \"mes listes\" et \"en course\" sont quasi identique mais ça va changer.\r\n                    </p>\r\n                    <p>\r\n                    Merci de noter si vous rencontrez des difficultés, ce qui fonctionne et ce qui ne fonctionne\r\n                    pas, ce que vous ne comprennez pas et au contraire ce qui est très clair. Ca m'aidera\r\n                    dans l'amélioration de cette application!\r\n                    </p>\r\n                        <Col span={6} push={18}>\r\n                            <Button block type=\"primary\" onClick={this.props.hideText} className='goBack'>\r\n                                Fermer\r\n                            </Button>\r\n                        </Col>\r\n                </div>\r\n                        <Button \r\n                            style={{ margin : '1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='enCourse'\r\n                            onClick={this.props.choixComponent}\r\n                            >En course!\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='mesListes'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mes listes\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\" \r\n                            className='item-button'\r\n                            name='monProfile'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mon profile\r\n                        </Button>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Row, Col } from 'antd';\r\n\r\n// import * as firebase from 'firebase';\r\n\r\nclass ProfilUser extends Component {\r\n    render() { \r\n        const user = this.props.user;\r\n        return ( \r\n            <div>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col span={8}>\r\n                    <h2>Bienvenue sur votre profile {user}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row type='flex' justify='left'>\r\n                    <Col span={6}>\r\n                    <div className='button-anth'>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilUser;","import React, { Component } from 'react';\n// import './App.css';\nimport './NewApp.css';\nimport 'antd/dist/antd.css';\nimport './animations.css';\n\nimport * as firebase from 'firebase';\nimport config from './firebase';\n\n//ANT design\nimport { Button, Row, Col, Layout, Icon  } from 'antd';\n\nimport Home from './Components/Home';\nimport Loading from './Components/Loading';\nimport EnCourse from './Components/EnCourse';\nimport Menu from './Components/Menu';\nimport ProfilUser from './Components/ProfilUser';\n\n// import data from './data';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nconst {\n  Header, Footer, Content,\n} = Layout;\n\n\n\n// const user = firebase.auth().currentUser.displayName;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    firebase.initializeApp(config);\n        this.state = {\n            listeDeBase: [],\n            data: [],\n            titreListe: [],\n            currentTitre: '',\n            indexInput: 0,\n            placeholderElt: 'Entrer un produit',\n            choixComponent: 'menu',\n            currentCategory: '' || 'Ma super catégorie',\n            numChildCategory: 0,\n            isSignedIn: false,\n            clicked: false, \n            loading: true,\n            goHome: false,\n            isCategory: true,\n            clickedText : false,\n            indexItem: null,\n            isToggleSwitchType: false,\n            userId: '' || 'test'\n        };\n      this.delete = this.delete.bind(this);\n      this.deleteCategory = this.deleteCategory.bind(this);\n      this.createNewItem = this.createNewItem.bind(this);\n      this.addNewListTitre = this.addNewListTitre.bind(this);\n      this.deconnexion = this.deconnexion.bind(this);\n}\n\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\n// componentWillMount() {\n//   //afin de charger correctement je décale d'une seconde\n//   setTimeout(() => {\n    \n//   }, 2000);\n  \n// }\n\ncomponentDidMount() {\n  this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        if(user) {\n          // console.log(user);\n          this.setState({isSignedIn: !!user, userId: user.displayName})\n        } else {\n          console.log(user);\n        }\n      }\n  );\n  // console.log(this.unregisterAuthObserver());\n}\n\ncomponentWillUnmount() {\n  this.unregisterAuthObserver();\n}\n\n  animFormButton = (button) => {\n    button.classList.add('formButton-active');\n    setTimeout(() => {\n        button.classList.remove('formButton-active');\n    }, 500);\n  }\n\n  animFormElt = (elt) => {\n    elt.classList.add('message-enter');\n  }\n\n  getDataBase = () => {\n    setTimeout(() => {\n    const user = this.state.userId;\n    const ref = firebase.database().ref(`${user}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            console.log('entrain de charger la db');\n            Object.keys(snapshot.val()).map(item =>\n              listItem.push(item)\n            );\n            this.setState({\n              listeDeBase: listItem,\n              data: snapshot.val(),\n              loading: false\n            });\n            } else {\n              this.setState({\n                loading: false\n            });\n          }\n        });\n      }, 2000);\n  }\n\n  // Regarde si un produit est checked en mode collapse\n  isChecked = (item, id) => {\n    const user = this.state.userId;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    console.log(collapse);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    console.log(currentCategory);\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{checked : true} } : product));\n    item.checked = !item.checked;\n\n    this.setState({ data: newData });\n    // A ESSAYER POUR METTRE A JOUR LE STATE\n    // this.setState(state => {\n    //   const data = state.data.map((item, j) => {\n    //     if (j === id) {\n    //       return item.checked = !item.checked;\n    //     } else {\n    //       return item;\n    //     }\n    //   });\n\n    //   return {\n    //     data,\n    //   };\n    // });\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n}\n  // Delete un produit\n  delete(item, id){\n    const user = this.state.userId;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const contentElt = collapse.parentElement;\n    const currentTitre = this.state.currentTitre;\n    \n    this.setState({ \n      indexItem: `elt-${item.item}`,\n      numChildCategory: contentElt.childElementCount\n  });\n  //A ESSAYER POUR METTRE A JOUR LE STATE\n  // this.setState(state => {\n  //   const data = Object.keys(state.data).filter(item => item.id !== id);\n\n  //   return {\n  //     data,\n  //   };\n  // });\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    if(contentElt.childElementCount === 1) {\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n        const indexCat = snapshot.key;\n          setTimeout(() => {\n            firebase.database().ref(`${user}/${currentTitre}/category/${indexCat}`).remove();\n          }, 400);\n      });\n      setTimeout(() => {\n        this.setState({ indexItem: null});\n      }, 410);\n    } else {\n        firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n          snapshot.forEach(function(childSnapshot){\n            setTimeout(() => {\n              const indexItem = childSnapshot.key;\n              firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems/${indexItem}`).remove();\n            }, 400);\n          });\n        });\n        setTimeout(() => {\n          this.setState({ indexItem: null});\n        }, 410);\n    }\n      \n      \n  }\n\n  // delete une catégorie\n  deleteCategory = (item, id) => {\n    const user = this.state.userId;\n    // console.log(item.titreCat);\n    const collapse = document.getElementById(item.titreCat);\n    // console.log(collapse);\n    const currentTitre = this.state.currentTitre;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === collapse.id ? childSnapshot.key : null;\n      });\n    });\n    // console.log(index);\n\n    firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').on('value', snapshot => {\n        setTimeout(() => {\n          firebase.database().ref(`${user}/${currentTitre}/category/${index}`).remove();\n        }, 400);\n    });\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n  }\n\n  //PROBLEME QUAND ON SUPPRIME TOUTES LES LISTES ===> la derniere ne disparait pas\n  deleteList = (item) => {\n    const user = this.state.userId;\n    this.setState({ indexItem: `elt-${item}`});\n\n    setTimeout(() => {\n      firebase.database().ref(`${user}/${item}`).remove();\n    }, 400);\n\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n    \n  }\n\n  toggleComment = (item) => {\n    const user = this.state.userId;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{show : true} } : product));\n    item.show = !item.show;\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // Ajouter un commentaire à un élément de la liste\n  addComment = (event, item) => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const currentTitre = this.state.currentTitre;\n    let commentName = event.target.value;\n    item.comment = event.target.value;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{comment : commentName} } : product));\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // événement qui ferme le commentaire\n  closeComment = (event, item) => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{show : true} } : product));\n    item.show = !item.show;\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // Créer une catégorie dans la liste de course\n  createNewCategory = (event) => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const currentTitre = this.state.currentTitre;\n    const formInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('.form>button');\n    const category = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n    //Arriver a insérer une catégorie sans exemple de produit!\n    const data = {\n      titreCat: category\n    }\n\n    this.setState(prevState => ({\n      // listeDeBase: [...prevState.listeDeBase, category],\n      currentCategory: category,\n      isCategory: false\n    }));\n    \n    firebase.database().ref(`${user}/${currentTitre}/category`).push({\n      ...data\n    });\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n\n  }\n\n  //prend la catégorie choisie au clic\n  getCurrentCategory = titreCat => {\n    const currentCategory = titreCat;\n    this.setState({ currentCategory, isCategory: false });\n  }\n\n  // Bouton switch pour choisir entre produit et catégorie\n  toggleSwitch = (checked) => {\n    this.setState({ isCategory : checked === false ? false : true });\n  }\n\n  //bouton switch pour choisir entre collapse et liste\n  toggleSwitchType = (checked) => {\n    this.setState({ isToggleSwitchType : checked === false ? false : true });\n}\n\n  // Créer un élément de liste de course\n  createNewItem = (event) => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const currentCategory = this.state.currentCategory;\n    const currentTitre = this.state.currentTitre;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      show: false,\n    };\n    if(currentCategory === 'Ma super catégorie') {\n      this.createNewCategory(event);\n      return null;\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n  }\n\n  // Ajout d'un titre de liste de course\n  addNewListTitre = event => {\n    event.preventDefault();\n    // const user = this.state.userId;\n    const formInput = document.querySelector('#form-input');\n    const todoFormButton = document.querySelector('#myButtonSubmit');\n    const titre = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n    this.setState(prevState => ({\n      listeDeBase: [...prevState.listeDeBase, titre],\n      currentTitre: titre,\n      isCategory: true\n    }));\n\n    // firebase.database().ref(`${user}`).push({\n    //   titre\n    // });\n\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n  }\n\n  // Détecte quelle liste à été choisie\n  choixListe = (e) => {\n    const user = this.state.userId;\n    const titreListe = e.target.id;\n    const ref = firebase.database().ref(`${user}`);\n    // console.log(titreListe);\n\n    ref.on('value', snapshot => {\n      this.setState({\n        data: snapshot.val(),\n        currentTitre: titreListe,\n        clicked: true\n      });\n    });\n  }\n\n  // utilisé sur bouton pour retour en arrière\n  goHome = () => {\n    this.setState({ clicked: false });\n  }\n\n  // retour au menu de l'accueil\n  returnToApp = () => {\n    this.setState({ choixComponent: 'menu' });\n  }\n\n  // détecte le composant choisi à l'accueil\n  choixComponent = (event) => {\n    const choixComponent = event.target.name;\n    if(choixComponent !== '') {\n      this.setState({ choixComponent });\n    }\n  }\n\n  hideText = () => {\n    const clickedText = this.state.clickedText;\n    this.setState({ clickedText : !clickedText });\n}\n\ndeconnexion = event => {\n  event.preventDefault();\n  firebase.auth().signOut();\n  console.log(firebase.auth().currentUser.displayName);\n}\n\n  //renvoie dans le render le composent choisit\n  renderChoiseConponent = () => {\n    const name = this.state.choixComponent;\n    switch(name) {\n      case 'enCourse':\n      return <EnCourse\n                returnToApp={this.returnToApp}\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                indexInput={this.state.indexInput}\n                placeholderElt={this.state.placeholderElt}\n                closeComment={this.closeComment}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                currentTitre={this.state.currentTitre}\n                data={this.state.data}\n              />\n      case 'mesListes':\n      return <Home\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                addNewListTitre={this.addNewListTitre}\n                deleteList={this.deleteList}\n                loading={this.state.loading}\n                data={this.state.data}\n                returnToApp={this.returnToApp}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                indexInput={this.state.indexInput}\n                placeholderElt={this.state.placeholderElt}\n                closeComment={this.closeComment}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                createNewCategory={this.createNewCategory}\n                isCategory={this.state.isCategory}\n                currentCategory={this.state.currentCategory}\n                toggleSwitch={this.toggleSwitch}\n                numChildCategory={this.state.numChildCategory}\n                deleteCategory={this.deleteCategory}\n                currentTitre={this.state.currentTitre}\n                getCurrentCategory={this.getCurrentCategory}\n                isToggleSwitchType={this.state.isToggleSwitchType}\n                toggleSwitchType={this.toggleSwitchType}\n              />\n      case 'monProfile':\n      return <ProfilUser\n              returnToApp={this.returnToApp}\n              user={this.state.userId}\n              />\n      default:\n      return null\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n        {console.log('this state isSignedIn n\\'existe pas')}\n          <Col xs={{ span: 16 }} md={{ span: 14}} lg={{ span: 10 }} id='connexion'>\n            <h1>Check-List-Course</h1>\n            <p>Veuillez vous connecter svp:</p>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n          </Col>\n        </Row>\n      );\n    }\n    if(this.state.loading) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n        {this.getDataBase()}\n          <Col xs={{ span: 16 }} md={{ span: 14 }} lg={{ span: 10}} id='load'>\n            <Loading/>\n          </Col>\n        </Row>\n      )\n    }\n    return (\n      <>\n      <Row type=\"flex\" justify=\"space-around\" id='main'>\n        <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} id='mainCol' >\n        <Layout>\n          <Header>\n              <span><Icon type=\"shopping-cart\" /></span>\n              <h4>Check-Course</h4>\n          </Header>\n        <Content>\n          {\n            this.state.choixComponent === 'menu' ?\n            <Menu\n              choixComponent={this.choixComponent}\n              user={this.state.userId}\n              hideText={this.hideText}\n              clickedText={this.state.clickedText}\n            />\n            :\n            this.renderChoiseConponent()\n          }\n              <Col span={6}>\n                  <Button \n                    type='primary'\n                    block \n                    onClick={e => this.deconnexion(e)} \n                    className='goBack'\n                    >\n                      Déconnexion\n                  </Button>\n              </Col>\n          </Content>\n            <Footer>\n              <p>Created By Mikael</p>\n            </Footer>\n          </Layout>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}