{"version":3,"sources":["img/prochainement2.png","firebase.js","Components/Item.js","Components/ItemList.js","Components/MyLists.js","Components/Home.js","Components/Loading.js","Components/EnCourseList.js","Components/EnCourseItem.js","Components/EnCourse.js","Components/Menu.js","Components/ProfilUser.js","Components/HeaderMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","base","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Rebase","createClass","database","Item","prevProps","prevState","this","nameInput","focus","_this","_this$props","props","item","itemKey","comment","count","itemIsVisible","itemVisible","deleteItem","toggleComment","changeItem","itemIsChanged","handleChangeItem","valideChangeItem","itemSelected","react_default","a","createElement","col","span","row","type","justify","align","key","id","concat","xs","sm","md","lg","onClick","className","input","value","placeholder","onChange","onKeyUp","ref","es_button","name","style","background","border","block","icon","color","fontSize","badge","status","Component","ItemList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderData","currentTitre","inverseProduit","data","newArrayData","keys","map","category","categoryItem","push","reverse","setState","state","infinitScroll","loadItems","nameInput2","nameInput3","_this2","_this$props2","inputOpen","currentCategory","categoryIsChanged","categorySelected","valideChangeCategory","arrayData","myData","elt","Fragment","list","titreCat","locale","emptyText","header","changeCategory","maxLength","e","handleChangeCategory","checkCurrentCategory","showCategory","categoryVisible","categoryIsVisible","deleteCategory","footer","onSubmit","createNewItem","autoFocus","openInput","bordered","dataSource","categoryItems","renderItem","checked","Components_Item","delete","_this3","_this$props3","largeur","visible","showForm","drawerWidth","createNewCategory","showFormulaire","length","loadListExemple","liste","drawer","placement","width","onClose","modalContent","MyLists","help","notification","open","message","description","duration","textAlign","window","addEventListener","handleScroll","removeEventListener","onScroll","padding","reloadList","Components_ItemList","addComment","titre","titreListe","indexItem","numChildCategory","userUid","hasMoreItems","reloadItems","isLoading","marginRight","goHome","Home","choixUserUid","newData","choixListe","size","changeLocked","locked","popconfirm","title","onConfirm","confirmDelete","onCancel","cancel","okText","cancelText","listeDeBase","clicked","Components_MyLists","returnToApp","isCategory","toggleSwitchType","followWindow","addNewListTitre","Loading","react_loading_default","height","countItem","EnCourseList","countProduit","countItemPos","countItemNeg","countTotal","isChecked","positionY","scrollY","createNewItemLastMinute","offset","backgroundColor","boxShadow","modalContentCourse","EnCourseItem","countPercent","progress","percent","showInfo","strokeColor","EnCourse","Components_EnCourseItem","Components_EnCourseList","closeComment","handleScrollButton","Menu","margin","choixComponent","ProfilUser","user","newUserUid","linkName","toggleSwitchHelp","toggleSwitchInverseProduit","toggleSwitchInfiniteScroll","toggleSwitchFollowWindow","marginBottom","es_switch","checkedChildren","unCheckedChildren","choisirUserUid","changeUserUid","required","valideChangeUserUid","pull","deconnexion","borderRadius","marginLeft","HeaderMenu","menu","handleClick","selectedKeys","choixComponentState","mode","Header","Layout","Footer","Content","Meta","Card","TextArea","Input","Option","Select","App","listeRef","createRef","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","animFormButton","button","classList","add","setTimeout","remove","animFormElt","getDataBase","myUser","_this$state","userId","currentUser","on","snapshot","listItem","val","currentUserUid","followers","loading","set","userName","getOtherDataBase","handleResize","hauteur","innerHeight","innerWidth","_this$state2","referenceToOldestKey","orderByKey","endAt","limitToLast","once","then","arrayOfKeys","sort","slice","results","toConsumableArray","referenceToFirstOldestKey","scrollTo","catch","error","errors","loadItemsInversed","_this$state3","isLoadingInversed","startAt","limitToFirst","loadMore","_this$state4","nextItem","indexArray","_this$state5","newDataItems","arrayOfItems","items","myArray","i","isBottom","el","getBoundingClientRect","bottom","event","_this$state6","myEltBottom","document","querySelector","pageYOffset","isScroll","formElt","getElementById","lastPositionY","updates","update","target","changeUserInput","text","_this$state7","success","_this$state8","parentElement","toggle","_this$state9","collapse","contentElt","childNodes","index","forEach","childSnapshot","orderByChild","equalTo","indexCat","_this$state10","deleteList","onChangeComment","newComment","onChangeCount","onChangeTypeCount","typeCount","_this$state11","gutter","slider","min","max","input_number","es_select","defaultValue","autosize","minRows","maxRows","rows","cols","autoComplete","marginTop","ontSize","onPressEnter","_this$state12","image","skeleton","paragraph","alt","src","prochainement","card","paddingTop","cover","avatar","preventDefault","_this$state13","_this$state14","_this$state15","_this$state16","_this$state17","formInput","todoFormButton","cat","charAt","toUpperCase","substring","toLowerCase","timestamp","Date","now","dataItem","categoryExist","objectSpread","config","top","_this$state18","assign","todoFormInput","dataElt","show","newDataItem","newArrayDataItem","_this$state19","lastChild","firstChild","_this$state20","lastMinuteItem","hasTitreCat","_this$state21","hideText","clickedText","currentItem","_this$state22","_this$state23","itemElt","newItem","signOut","isSignedIn","console","log","renderChoiseConponent","Components_EnCourse","Components_Home","isToggleSwitchType","Components_ProfilUser","totalItem","bind","assertThisInitialized","unregisterAuthObserver","onAuthStateChanged","syncState","uid","context","displayName","Components_Loading","layout","Components_HeaderMenu","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Boolean","location","hostname","match","ReactDOM","render","locale_provider","fr_FR","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.357f5d34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/prochainement2.cbd80974.png\";","import Rebase from 're-base';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyASNdLHf9itHbMfni5KLun3kcA57LFgkFg\",\r\n    authDomain: \"check-list-course.firebaseapp.com\",\r\n    databaseURL: \"https://check-list-course.firebaseio.com\",\r\n    projectId: \"check-list-course\",\r\n    storageBucket: \"check-list-course.appspot.com\",\r\n    messagingSenderId: \"873680903792\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebase.database());\r\n\r\nexport { firebaseApp }\r\n\r\nexport default base;\r\n","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport { Row, Col, Button, Icon, Badge, Input  } from 'antd';\r\n\r\nclass Item extends Component {\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.nameInput) {\r\n            this.nameInput.focus();\r\n        }\r\n    }\r\n    render() { \r\n        const { \r\n            item, itemKey, comment, count, \r\n            itemIsVisible, itemVisible, deleteItem, \r\n            toggleComment, changeItem, itemIsChanged, \r\n            handleChangeItem, valideChangeItem, itemSelected\r\n        } = this.props;\r\n        return ( \r\n            <Col span={24} >\r\n                <Row \r\n                    type=\"flex\" \r\n                    justify=\"space-between\" \r\n                    align=\"middle\"\r\n                    key={itemKey}\r\n                    id={`elt-${itemKey}`}\r\n                >\r\n                {\r\n                    itemIsChanged && itemSelected === itemKey ?\r\n                    <Col xs={12} sm={15} md={15} lg={18} onClick={changeItem} className={'ant-list-items-item'}>\r\n                        <Input \r\n                            type='text' \r\n                            value={item} \r\n                            placeholder='Modifier le produit' \r\n                            onChange={handleChangeItem} \r\n                            onKeyUp={valideChangeItem}\r\n                            ref={input => { this.nameInput = input }} \r\n                        />\r\n                    </Col>\r\n                    :\r\n                    <Col xs={12} sm={15} md={15} lg={18} onClick={changeItem} className={'ant-list-items-item'}>\r\n                        {item}\r\n                    </Col>\r\n                }\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                        <Button \r\n                            name=\"comment\" \r\n                            className='comment' \r\n                            style={{ background: 'transparent', border: 'none' }}\r\n                            type='primary'\r\n                            block\r\n                            onClick={toggleComment}>\r\n                            >\r\n                            {\r\n                                comment === '' && count === 0 ?\r\n                                <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                :\r\n                                <Badge status=\"success\">\r\n                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                </Badge>\r\n                            }\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                        <Button \r\n                            style={{ background: 'transparent' }}\r\n                            name=\"isVisible\" \r\n                            className=\"trash\"\r\n                            type='primary'\r\n                            block\r\n                            onClick={itemVisible}>\r\n                                {\r\n                                    itemIsVisible ?\r\n                                    <i className=\"far fa-eye\"></i>\r\n                                    :\r\n                                    <i className=\"far fa-eye-slash\"></i>\r\n                                }\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"trash\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={deleteItem}>\r\n                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                            </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Item;","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport Item from './Item';\r\n\r\nimport { List, Row, Col, Icon, Button, Drawer, Input } from 'antd';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newArrayData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // on charge la liste en fonction du de infinitScroll ou non\r\n        if(this.props.infinitScroll) {\r\n            this.props.loadItems();\r\n        } else {\r\n            this.renderData();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.data && !this.props.infinitScroll) {\r\n            if(prevProps.data !== this.props.data) {\r\n                this.renderData();\r\n              }\r\n        }\r\n        \r\n        if(this.nameInput) {\r\n            this.nameInput.focus();\r\n        }\r\n        if(this.nameInput2) {\r\n            this.nameInput2.focus();\r\n        }\r\n        if(this.nameInput3) {\r\n            this.nameInput3.focus();\r\n        }\r\n    }\r\n\r\n    renderData = () => {\r\n        const { currentTitre, inverseProduit, data } = this.props;\r\n        const newArrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? \r\n                Object.keys(data[item])\r\n                    .map(category => Object.keys(data[item][category])\r\n                        .map(categoryItem => newArrayData.push(data[item][category][categoryItem])))\r\n                : null);\r\n        if(inverseProduit) {\r\n            newArrayData.reverse();\r\n        }\r\n        this.setState({ newArrayData });\r\n    }\r\n\r\n    liste() {\r\n        const { inputOpen, currentCategory, categoryIsChanged,\r\n                categorySelected, valideChangeCategory, arrayData,\r\n                infinitScroll\r\n            } = this.props;\r\n        const { newArrayData } = this.state;\r\n        const myData = infinitScroll ? arrayData : newArrayData;\r\n        if(!myData) {\r\n            return null\r\n        }\r\n        return (myData || []).map((elt, id) => \r\n        <>\r\n            {\r\n                elt ?\r\n                <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                name={`name-${elt.titreCat}`}\r\n                locale={{ emptyText: 'Veuillez ajouter un produit' }}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                    {\r\n                        categoryIsChanged && categorySelected === elt.key ?\r\n                        <Col xs={infinitScroll ? 16 : 12} sm={infinitScroll ? 18 : 15} lg={infinitScroll ? 20 : 18} className='titreCat' onClick={() => this.props.changeCategory(elt)}>\r\n                            <Input\r\n                                type='text' \r\n                                id='myInput'\r\n                                maxLength={40}\r\n                                value={elt.titreCat} \r\n                                placeholder='Modifier la catégorie' \r\n                                onChange={e => this.props.handleChangeCategory(e, elt)} \r\n                                onKeyUp={e => valideChangeCategory(e, elt)}\r\n                                ref={input => { this.nameInput3 = input }} \r\n                            />\r\n                        </Col>\r\n                        :\r\n                        <Col id={elt.titreCat} xs={infinitScroll ? 16 : 12} sm={infinitScroll ? 18 : 15} lg={infinitScroll ? 20 : 18} className='titreCat' onClick={() => this.props.changeCategory(elt)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    }\r\n                    {\r\n                        infinitScroll ?\r\n                        null\r\n                        :\r\n                        <Col xs={4} sm={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"isVisible\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={() => this.props.checkCurrentCategory(elt.titreCat, elt.showCategory)}>\r\n                                {\r\n                                    elt.showCategory ?\r\n                                    <Icon type=\"caret-up\" />\r\n                                    :\r\n                                    <Icon type=\"caret-down\" />\r\n                                }\r\n                            </Button>\r\n                        </Col>\r\n                    }\r\n                        <Col xs={4} sm={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"isVisible\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={() => this.props.categoryVisible(elt)}>\r\n                                    {\r\n                                        elt.categoryIsVisible ?\r\n                                        <i className=\"far fa-eye\" style={{ color: 'aliceblue' }}/>\r\n                                        :\r\n                                        <i className=\"far fa-eye-slash\" style={{ color: 'aliceblue' }}/>\r\n                                    }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col xs={4} md={3} lg={2}>\r\n                            <Button \r\n                                name=\"trash\" \r\n                                className=\"trash\"\r\n                                block\r\n                                type='primary'\r\n                                onClick={() => this.props.deleteCategory(elt, id)}>\r\n                                <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                footer={\r\n                    <>\r\n                    {\r\n                        inputOpen && currentCategory === elt.titreCat ? \r\n                        <Row type=\"flex\" justify=\"center\" align='middle'>\r\n                            <form className='form form-titre' id='myForm' onSubmit={ e => this.props.createNewItem(e, id)}>\r\n                                <input \r\n                                    id='myInput' \r\n                                    type='text' \r\n                                    placeholder='Ajouter un produit'\r\n                                    maxLength={40} \r\n                                    autoFocus={true} \r\n                                    ref={input => { this.nameInput2 = input }} \r\n                                />\r\n                                <button type='submit' id='buttonSubmit'>\r\n                                    <Icon type=\"plus\" />\r\n                                </button>\r\n                            </form>\r\n                        </Row>\r\n                        :\r\n                        <Row \r\n                            type=\"flex\" \r\n                            justify=\"center\" \r\n                            align='middle' \r\n                            onClick={() => this.props.openInput(elt.titreCat)}\r\n                            >\r\n                            <p>Ajouter un produit</p>\r\n                        </Row>\r\n                    }\r\n                    </>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <>\r\n                    {\r\n                        infinitScroll ?\r\n                        \r\n                            item ?\r\n                            <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                                <Item\r\n                                    item={item.item}\r\n                                    itemKey={item.key}\r\n                                    comment={item.comment}\r\n                                    count={item.count}\r\n                                    itemIsVisible={item.itemIsVisible}\r\n                                    itemIsChanged={this.props.itemIsChanged}\r\n                                    itemSelected={this.props.itemSelected}\r\n    \r\n                                    handleChangeItem={e => this.props.handleChangeItem(e, item)}\r\n                                    valideChangeItem={e => this.props.valideChangeItem(e, item)}\r\n                                    changeItem={() => this.props.changeItem(item)}\r\n                                    toggleComment={() => this.props.toggleComment(item)}\r\n                                    itemVisible={() => this.props.itemVisible(item)}\r\n                                    deleteItem={() => this.props.delete(item)}\r\n                                />\r\n                            </List.Item>\r\n                            :\r\n                            null\r\n                        \r\n                        :\r\n                            elt.showCategory && item ?\r\n                            <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                                <Item\r\n                                    item={item.item}\r\n                                    itemKey={item.key}\r\n                                    comment={item.comment}\r\n                                    count={item.count}\r\n                                    itemIsVisible={item.itemIsVisible}\r\n                                    itemIsChanged={this.props.itemIsChanged}\r\n                                    itemSelected={this.props.itemSelected}\r\n    \r\n                                    handleChangeItem={e => this.props.handleChangeItem(e, item)}\r\n                                    valideChangeItem={e => this.props.valideChangeItem(e, item)}\r\n                                    changeItem={() => this.props.changeItem(item)}\r\n                                    toggleComment={() => this.props.toggleComment(item)}\r\n                                    itemVisible={() => this.props.itemVisible(item)}\r\n                                    deleteItem={() => this.props.delete(item)}\r\n                                />\r\n                            </List.Item>\r\n                            :\r\n                            null\r\n                        \r\n                    }\r\n                    </>\r\n                    \r\n                    )}\r\n            />\r\n            : \r\n            null\r\n            }\r\n            \r\n        </>\r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible, showForm, arrayData } = this.props;\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        return ( \r\n            <>\r\n            {\r\n                showForm ?\r\n                    <form className='form form-titre' id='myForm' onSubmit={ e => this.props.createNewCategory(e)}>\r\n                        <input \r\n                            id='myInput2'\r\n                            type='text' \r\n                            placeholder='Ajouter une catégorie'\r\n                            maxLength={40} \r\n                            autoFocus={true} \r\n                            ref={input => { this.nameInput = input }} \r\n                        />\r\n                        <button type='submit' id='buttonSubmit'>\r\n                            <Icon type=\"plus\" />\r\n                        </button>\r\n                    </form>\r\n                :\r\n                <>\r\n                <Row \r\n                    className='ant-list-footer addCategory' \r\n                    type=\"flex\" \r\n                    justify=\"center\" \r\n                    align='middle'\r\n                    onClick={this.props.showFormulaire}\r\n                    >\r\n                    <p>Ajouter une catégorie</p>\r\n                </Row>\r\n                {\r\n                    arrayData.length === 0 ?\r\n                    <Col xs={{ span: 6}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                        <Button block type=\"primary\" className='reload' onClick={this.props.loadListExemple}>\r\n                            <Icon type=\"download\" />\r\n                            Charger\r\n                        </Button>\r\n                    </Col>\r\n                    :\r\n                    null\r\n                }\r\n                </>\r\n            }\r\n            {this.liste()}\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContent(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, notification } from 'antd';\r\n\r\nimport ItemList from './ItemList';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Ajouter une catégorie',\r\n        description: \"Pour ajouter une catégorie, cliquez sur \\\"Ajouter une catégorie\\\" et écrivez le nom que vous désirez, par exemple \\\"Boissons\\\". Pour finaliser, cliquez sur le +.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Ajouter un produit',\r\n                description: \"Pour ajouter un produit, cliquez sur \\\"Ajouter un produit\\\" et écrivez le nom que vous désirez, par exemple \\\"Eau\\\". Pour finaliser, cliquez sur le +. Vous pouvez ajouter autant de produits que vous le désirez.\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                  onClose: () => {\r\n                    notification.open({\r\n                        message: 'Astuce!',\r\n                        description: \"Pour ajouter un produit dans une catégorie existente, cliquez sur le nom de la catégorie voulue, ensuite il vous suffit d'ajouter un produit.\",\r\n                        duration: 0,\r\n                        style: {\r\n                            textAlign: 'justify'\r\n                          }\r\n                      });\r\n                  }\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass MyLists extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n    \r\n    render() { \r\n        const { currentTitre } = this.props;\r\n        return ( \r\n            <Col onScroll={e => this.props.handleScroll(e)} className='containerList'>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                                <h3 className='titreListe'>\r\n                                    <i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>\r\n                                    {currentTitre}\r\n                                </h3>\r\n                            </Col>\r\n                            <Col xs={{ span: 6}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                                <Button block type=\"primary\" className='reload' onClick={this.props.reloadList}>\r\n                                    <Icon type=\"reload\" />\r\n                                </Button>\r\n                            </Col>\r\n                        </>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <ItemList\r\n                            data={this.props.data}\r\n                            changeItem={this.props.changeItem}\r\n                            itemIsChanged={this.props.itemIsChanged}\r\n                            handleChangeItem={this.props.handleChangeItem}\r\n                            valideChangeItem={this.props.valideChangeItem}\r\n                            itemSelected={this.props.itemSelected}\r\n                            delete={this.props.delete}\r\n                            toggleComment={this.props.toggleComment}\r\n                            addComment={this.props.addComment}\r\n                            titre={this.props.titreListe}\r\n                            indexItem={this.props.indexItem}\r\n                            numChildCategory={this.props.numChildCategory}\r\n                            deleteCategory={this.props.deleteCategory}\r\n                            currentTitre={this.props.currentTitre}\r\n                            inverseProduit={this.props.inverseProduit}\r\n                            visible={this.props.visible}\r\n                            onClose={this.props.onClose}\r\n                            item={this.props.item}\r\n                            modalContent={this.props.modalContent}\r\n                            largeur={this.props.largeur}\r\n                            itemIsVisible={this.props.itemIsVisible}\r\n                            itemVisible={this.props.itemVisible}\r\n                            categoryVisible={this.props.categoryVisible}\r\n                            categoryIsVisible={this.props.categoryIsVisible}\r\n                            createNewItem={this.props.createNewItem}\r\n                            inputOpen={this.props.inputOpen}\r\n                            openInput={this.props.openInput}\r\n                            currentCategory={this.props.currentCategory}\r\n                            showForm={this.props.showForm}\r\n                            createNewCategory={this.props.createNewCategory}\r\n                            showFormulaire={this.props.showFormulaire}\r\n                            checkCurrentCategory={this.props.checkCurrentCategory}\r\n                            loadListExemple={this.props.loadListExemple}\r\n                            showCategory={this.props.showCategory}\r\n                            categoryIsChanged={this.props.categoryIsChanged}\r\n                            category={this.props.category}\r\n                            categorySelected={this.props.categorySelected}\r\n                            changeCategory={this.props.changeCategory}\r\n                            handleChangeCategory={this.props.handleChangeCategory}\r\n                            valideChangeCategory={this.props.valideChangeCategory}\r\n                            userUid={this.props.userUid}\r\n                            hasMoreItems={this.props.hasMoreItems}\r\n                            loadItems={this.props.loadItems}\r\n                            arrayData={this.props.arrayData}\r\n                            reloadItems={this.props.reloadItems}\r\n                            isLoading={this.props.isLoading}\r\n                            infinitScroll={this.props.infinitScroll}\r\n                        />\r\n                    </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyLists;","import React, { Component } from 'react';\r\n\r\nimport MyLists from './MyLists';\r\n\r\nimport { Button, Icon, Col, notification, List, Popconfirm, Progress } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Créer une liste de course',\r\n        description: \"Pour créer une liste, il vous suffit simplement d'écrire son nom dans la case \\\"ajouter une liste\\\" et de cliquer sur le +. Ensuite cliquez sur le nom de votre liste qui vient d'apparaitre en dessous. Vous pouvez en créer maximum 3.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        // onClose: () => {\r\n        //   alert('clicked');\r\n        // },\r\n      });\r\n  };\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const { data, choixUserUid } = this.props;\r\n        const newData = [];\r\n        Object.keys(data).map(item => item !== 'user' ? newData.push(item) : null); //on enlève user des items\r\n            return (\r\n                <List\r\n                    bordered\r\n                    locale={{ emptyText: 'Veuillez créer une liste' }}\r\n                    dataSource={newData}\r\n                    renderItem={ (item, id) => (\r\n                        <>\r\n                        {\r\n                        item ?\r\n                            <>\r\n                            {\r\n                                choixUserUid ?\r\n                                <List.Item >\r\n                                    <Col span={24} key={id} className='listeDeBase'>  \r\n                                        <Col xs={{ span: 16 }} md={{ span: 18 }} lg={{ span: 20 }} key={`elt-${item}`} id={`id-${item}`} onClick={() => this.props.choixListe(item)}>\r\n                                            {item}\r\n                                        </Col>\r\n                                        <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                            <Button\r\n                                                size='large'\r\n                                                name=\"trash\" \r\n                                                type=\"primary\"\r\n                                                block \r\n                                                className=\"trash\"\r\n                                                onClick={() => this.props.changeLocked(data[item])}\r\n                                            >  \r\n                                            {\r\n                                                !data[item].locked ?\r\n                                                <Icon type=\"unlock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                :\r\n                                                <Icon type=\"lock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            }\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                            <Popconfirm title=\"Confirmer pour effacer\" onConfirm={() => this.props.confirmDelete(item)} onCancel={this.props.cancel} okText=\"Oui\" cancelText=\"Non\">\r\n                                                <Button\r\n                                                    size='large' \r\n                                                    name=\"trash\" \r\n                                                    type=\"primary\"\r\n                                                    block \r\n                                                    className=\"trash\"\r\n                                                >  \r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                </Button>\r\n                                            </Popconfirm>\r\n                                        </Col>\r\n                                    </Col>\r\n                                </List.Item>\r\n                                :\r\n                                <>\r\n                                    {\r\n                                        data[item].locked === false ?\r\n                                        <List.Item >\r\n                                            <Col span={24} key={id} className='listeDeBase'>  \r\n                                                <Col xs={{ span: 16 }} md={{ span: 18 }} lg={{ span: 20 }} key={`elt-${item}`} id={item} onClick={() => this.props.choixListe(item)}>\r\n                                                    {item}\r\n                                                </Col>\r\n                                                <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                                    <Button\r\n                                                        size='large' \r\n                                                        name=\"trash\" \r\n                                                        type=\"primary\"\r\n                                                        block \r\n                                                        className=\"trash\"\r\n                                                        // onClick={() => this.props.changeLocked(data[item], item)}\r\n                                                    >  \r\n                                                    {\r\n                                                        !data[item].locked ?\r\n                                                        <Icon type=\"unlock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                        :\r\n                                                        <Icon type=\"lock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                    }\r\n                                                    </Button>\r\n                                                </Col>\r\n                                                <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                                    <Popconfirm title=\"Confirmer pour effacer\" onConfirm={() => this.props.confirmDelete(item)} onCancel={this.props.cancel} okText=\"Oui\" cancelText=\"Non\">\r\n                                                        <Button\r\n                                                            size='large' \r\n                                                            name=\"trash\" \r\n                                                            type=\"primary\"\r\n                                                            block \r\n                                                            className=\"trash\"\r\n                                                        >  \r\n                                                            <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                        </Button>\r\n                                                    </Popconfirm>\r\n                                                </Col>\r\n                                            </Col>\r\n                                        </List.Item>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </>\r\n                            }\r\n                            </>\r\n                        \r\n                        :\r\n                        null\r\n                        }\r\n                        </>\r\n                    )}\r\n                />\r\n            )};\r\n        \r\n    render() {\r\n        const { listeDeBase, clicked } = this.props;\r\n        return (\r\n            <>\r\n            {\r\n            !clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    { \r\n                        listeDeBase.length >= 4 ?\r\n                        null\r\n                        :\r\n                        <form className='formulaire form-titre' onSubmit={e => this.props.addNewListTitre(e)}>\r\n                            <input type='text' id='form-input' placeholder='Ajouter une liste' maxLength={30}/>\r\n                            <button type='submit' id='myButtonSubmit'>+</button>\r\n                        </form>\r\n                    }\r\n                \r\n                    <Col>\r\n                        {this.liste()}\r\n                    </Col>\r\n                    <Col span={6} style={{ marginRight: '1em' }}>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </Col>\r\n                </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n                <MyLists\r\n                    currentTitre={this.props.currentTitre}\r\n                    createNewItem={this.props.createNewItem}\r\n                    data={this.props.data}\r\n                    changeItem={this.props.changeItem}\r\n                    itemIsChanged={this.props.itemIsChanged}\r\n                    handleChangeItem={this.props.handleChangeItem}\r\n                    valideChangeItem={this.props.valideChangeItem}\r\n                    itemSelected={this.props.itemSelected}\r\n                    delete={this.props.delete}\r\n                    toggleComment={this.props.toggleComment}\r\n                    addComment={this.props.addComment}\r\n                    titreListe={this.props.titreListe}\r\n                    returnToApp={this.props.returnToApp}\r\n                    goHome={this.props.goHome}\r\n                    indexItem={this.props.indexItem}\r\n                    createNewCategory={this.props.createNewCategory}\r\n                    isCategory={this.props.isCategory}\r\n                    numChildCategory={this.props.numChildCategory}\r\n                    deleteCategory={this.props.deleteCategory}\r\n                    toggleSwitchType={this.props.toggleSwitchType}\r\n                    help={this.props.help}\r\n                    inverseProduit={this.props.inverseProduit}\r\n                    visible={this.props.visible}\r\n                    onClose={this.props.onClose}\r\n                    item={this.props.item}\r\n                    modalContent={this.props.modalContent}\r\n                    largeur={this.props.largeur}\r\n                    itemIsVisible={this.props.itemIsVisible}\r\n                    itemVisible={this.props.itemVisible}\r\n                    handleScroll={this.props.handleScroll}\r\n                    followWindow={this.props.followWindow}\r\n                    showForm={this.props.showForm}\r\n                    showFormulaire={this.props.showFormulaire}\r\n                    currentCategory={this.props.currentCategory}\r\n                    categoryVisible={this.props.categoryVisible}\r\n                    categoryIsVisible={this.props.categoryIsVisible}\r\n                    reloadList={this.props.reloadList}\r\n                    inputOpen={this.props.inputOpen}\r\n                    openInput={this.props.openInput}\r\n                    checkCurrentCategory={this.props.checkCurrentCategory}\r\n                    loadListExemple={this.props.loadListExemple}\r\n                    showCategory={this.props.showCategory}\r\n                    categoryIsChanged={this.props.categoryIsChanged}\r\n                    category={this.props.category}\r\n                    categorySelected={this.props.categorySelected}\r\n                    changeCategory={this.props.changeCategory}\r\n                    handleChangeCategory={this.props.handleChangeCategory}\r\n                    valideChangeCategory={this.props.valideChangeCategory}\r\n                    userUid={this.props.userUid}\r\n                    hasMoreItems={this.props.hasMoreItems}\r\n                    loadItems={this.props.loadItems}\r\n                    arrayData={this.props.arrayData}\r\n                    reloadItems={this.props.reloadItems}\r\n                    isLoading={this.props.isLoading}\r\n                    infinitScroll={this.props.infinitScroll}\r\n                />\r\n            </Col>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => (\r\n    <ReactLoading \r\n    type=\"cylon\" \r\n    color=\"#078073\" \r\n    className=\"load\"\r\n    id=\"load\"\r\n    height={200}\r\n    width={200}\r\n    />\r\n)\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, List, Row, Badge, notification, Drawer  } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Astuce',\r\n        description: \"Lorsque vous faites vos courses, il suffit de cliquer sur un produit pour qu'il soit \\\"barré\\\" et \\\"grisé\\\".\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Astuce',\r\n                description: \"Vous ouvez rajouter un produit de dernière minute en l'ajoutant dans la case \\\"Entrez un produit\\\".\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n              });\r\n            }\r\n      });\r\n  };\r\nlet countItem = 0;\r\n\r\nclass EnCourseList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            count: 0,\r\n            arrayData: []\r\n         }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        this.renderData();\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.data !== this.props.data) {\r\n            this.renderData();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    //compteur de produits\r\n    countProduit = ( data, currentTitre ) => {\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? Object.keys(data[item])\r\n                .map(category => Object.keys(data[item][category])\r\n                    .map(categoryItem => data[item][category][categoryItem].categoryItems && data[item][category][categoryItem].categoryIsVisible ? arrayData.push(data[item][category][categoryItem]): null))\r\n            : null);\r\n        let countItemPos = [];\r\n        let countItemNeg = [];\r\n        let countTotal = [];\r\n        arrayData.map(elt => Object.keys(elt.categoryItems).map(item => countTotal.push(elt.categoryItems[item].checked)));\r\n        arrayData.map(elt => Object.keys(elt.categoryItems).map(item => elt.categoryItems[item].checked === false && elt.categoryItems[item].itemIsVisible ? countItemNeg.push(elt.categoryItems[item].checked): countItemPos.push(elt.categoryItems[item].checked)));\r\n        countItem = countTotal.length - countItemPos.length;\r\n    }\r\n\r\n    renderData = () => {\r\n        const { data, currentTitre, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? \r\n                Object.keys(data[item])\r\n                    .map(category => Object.keys(data[item][category])\r\n                        .map(categoryItem => arrayData.push(data[item][category][categoryItem])))\r\n                : null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        this.setState({ arrayData });\r\n    }\r\n\r\n    // création de la liste de produit et des catégories\r\n    liste = () => {\r\n        const { arrayData } = this.state;\r\n        if(!arrayData) {\r\n            return null\r\n        }\r\n        \r\n        return (arrayData || []).map((elt, id) =>\r\n        <div key={`key-${id}`}>\r\n        {\r\n            elt.categoryIsVisible ? // cache ou affiche une catégorie\r\n            <List\r\n                key={`titreCat-${elt.titreCat}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row id={`titreCat-${id}`} type=\"flex\" justify=\"space-between\" align='middle' style={{height: '2.5em'}}>\r\n                        <Col span={24} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat, elt.showCategory)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <>\r\n                    {\r\n                    item.itemIsVisible ? //cache ou affiche un produit\r\n                    <List.Item key={`listItemId-${item.key}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} key={`col24-${item.key}`}>\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={`elt-${item.key}`}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={20} sm={21} md={21} lg={22} key={`col20-${item.key}`} onClick={() => this.props.isChecked(item, arrayData)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2} key={`col4-${item.key}`}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' && item.count === 0 ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                    </List.Item>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                    )}\r\n            />\r\n            :\r\n            null\r\n        }\r\n        </div>\r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible, showForm, currentTitre, data } = this.props;\r\n        // width du drawer en fonction de la taille de l'écran\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        const positionY = window.scrollY;\r\n        this.countProduit(data, currentTitre);\r\n        return ( \r\n            <Col onScroll={ e => this.props.handleScroll(e) } className='containerList'>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                    {\r\n                        showForm ?\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                            </Col>\r\n                            \r\n                            <form id='myForm' className={showForm && positionY <= 80 ? 'formu formu-titre enCourse-formu-titre' : 'formu formu-titre enCourse-formu-titre fixedPosition'} onSubmit={this.props.createNewItemLastMinute}>\r\n                                <input type='text' placeholder='Produit de dernière minute' maxLength={40} />\r\n                                <button type='submit' id='buttonSubmit' onClick={this.props.showFormulaire}>\r\n                                    <Badge count={countItem} offset={[11, -30]} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}>\r\n                                        <Icon type=\"plus\" />\r\n                                    </Badge>\r\n                                </button>\r\n                            </form>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                            </Col>\r\n                            <Col xs={{ span: 12}} sm={{ span: 14}} md={{ span: 16}} lg={{ span: 18}}>\r\n                                <button type='button' className={!showForm && positionY <= 80 ? '' : 'fixedPosition'} id='buttonSubmit2' onClick={this.props.showFormulaire} >\r\n                                    <Badge count={countItem} offset={[5, -5]} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}>\r\n                                        <Icon type=\"edit\" style={{ fontSize: '2.5em' }}/>\r\n                                    </Badge>\r\n                                </button>\r\n                            </Col>\r\n                        </>\r\n                    }\r\n                    </Col>\r\n               <Col span={24}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={this.props.visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContentCourse(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseList;","import React, { Component } from 'react';\r\n\r\nimport { Col, Progress } from 'antd';\r\n\r\nclass EnCourseItem extends Component {\r\n    render() { \r\n        const { item, choixListe, countPercent, countTotal, countItemPos } = this.props;\r\n        return ( \r\n            <Col span={24} key={`key-${item}`} className='listeDeBaseEnCourse'>  \r\n                <Col xs={{ span: 20 }} md={{ span: 21 }} lg={{ span: 22 }} key={`elt-${item}`} id={`id-${item}`} onClick={choixListe}>\r\n                    {item} - <span>{countItemPos}/{countTotal}</span>\r\n                    <Progress percent={countPercent} showInfo={false} strokeColor='#009688' />\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseItem;","import React, { Component } from 'react';\r\nimport { Button, Icon, Col, List } from 'antd';\r\n\r\nimport EnCourseList from './EnCourseList';\r\nimport EnCourseItem from './EnCourseItem';\r\n\r\n// let countItem = [];\r\n// let countPercent = [];\r\n// let countTotal = [];\r\n// let countItemPos = [];\r\n// let countItemNeg = [];\r\n\r\nclass EnCourse extends Component {\r\n    //compteur de produits\r\n    // countProduit = data => {\r\n    //     const arrayData = [];\r\n    //     const arrayTitles = [];\r\n    //     if(!data) {\r\n    //         return null\r\n    //     }\r\n    //     //on récupère les titres\r\n    //     Object.keys(data)\r\n    //         .map(item => item !== 'user' ? arrayTitles.push(item) : null);\r\n\r\n    //     //on calcul le nombre d'item\r\n    //     Object.keys(data)\r\n    //         .map((item, index) => item === arrayTitles[index] ? arrayData.push(data[item])\r\n    //     : null);\r\n        \r\n    //     let arrayCategoryItems = [];\r\n    //     for(let i = 0; i < arrayData.length; i++) {\r\n    //         arrayCategoryItems[i] = [];\r\n    //         countItemPos[i] = [];\r\n    //         countItemNeg[i] = [];\r\n    //         countTotal[i] = [];\r\n    //         countItem[i] = [];\r\n    //         countPercent[i] = [];\r\n    //         Object.keys(arrayData[i])\r\n    //             .map(category => Object.keys(arrayData[i][category])\r\n    //                 .map(categoryItem => arrayData[i][category][categoryItem].categoryItems && arrayData[i][category][categoryItem].categoryIsVisible ? arrayCategoryItems[i].push(arrayData[i][category][categoryItem]): null))\r\n            \r\n    //         arrayCategoryItems[i].map(elt => Object.keys(elt.categoryItems).map(item => countTotal[i].push(elt.categoryItems[item].checked)));\r\n    //         arrayCategoryItems[i].map(elt => Object.keys(elt.categoryItems).map(item => elt.categoryItems[item].checked === false && elt.categoryItems[item].itemIsVisible ? countItemNeg[i].push(elt.categoryItems[item].checked): countItemPos[i].push(elt.categoryItems[item].checked)));\r\n    //         countItem[i] = countTotal[i].length - countItemPos[i].length;\r\n    //         countPercent[i] = Math.floor((countItemPos[i].length / countTotal[i].length) * 100);\r\n    //     }\r\n    // }\r\n\r\n    liste = () => {\r\n        const { data, choixUserUid } = this.props;\r\n        const newData = [];\r\n        Object.keys(data).map(item => item !== 'user' ? newData.push(item) : null); //on enlève user des items\r\n        return ( \r\n            <List\r\n                bordered\r\n                locale={{ emptyText: 'Vous devez d\\'abord créer une liste avant de faire vos courses' }}\r\n                dataSource={newData}\r\n                renderItem={ (item, id) => (\r\n                    <>\r\n                    {\r\n                    item ?\r\n                    <>\r\n                    {\r\n                        choixUserUid ?\r\n                        <List.Item>\r\n                            <EnCourseItem\r\n                                item={item}\r\n                                choixListe={() => this.props.choixListe(item)}\r\n                                // countPercent={countPercent[id]}\r\n                                // countTotal={countTotal[id].length}\r\n                                // countItemPos={countItemPos[id].length}\r\n                            />\r\n                        </List.Item>\r\n                        :\r\n                        <>\r\n                        {\r\n                            data[item].locked === false ?\r\n                            <List.Item >\r\n                                <EnCourseItem\r\n                                    item={item}\r\n                                    choixListe={() => this.props.choixListe(item)}\r\n                                    // countPercent={countPercent[id]}\r\n                                    // countTotal={countTotal[id].length}\r\n                                    // countItemPos={countItemPos[id].length}\r\n                                />\r\n                            </List.Item>\r\n                            :\r\n                            null\r\n                        }\r\n                        </>\r\n\r\n                    }\r\n                    </>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n    render() { \r\n        const { data } = this.props;\r\n        return ( \r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    {this.liste()}\r\n                    {/* {this.countProduit(data)} */}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                </>\r\n                :\r\n                <Col span={24}>\r\n                    <EnCourseList\r\n                        currentTitre={this.props.currentTitre}\r\n                        createNewItemLastMinute={this.props.createNewItemLastMinute}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titreListe={this.props.titreListe}\r\n                        returnToApp={this.props.returnToApp}\r\n                        closeComment={this.props.closeComment}\r\n                        goHome={this.props.goHome}\r\n                        indexItem={this.props.indexItem}\r\n                        checkCurrentCategory={this.props.checkCurrentCategory}\r\n                        help={this.props.help}\r\n                        inverseProduit={this.props.inverseProduit}\r\n                        visible={this.props.visible}\r\n                        onClose={this.props.onClose}\r\n                        item={this.props.item}\r\n                        largeur={this.props.largeur}\r\n                        modalContentCourse={this.props.modalContentCourse}\r\n                        showFormulaire={this.props.showFormulaire}\r\n                        showForm={this.props.showForm}\r\n                        handleScroll={this.props.handleScroll}\r\n                        handleScrollButton={this.props.handleScrollButton}\r\n                    />\r\n                </Col>\r\n            }\r\n            \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourse;","import React, { Component } from 'react';\r\n\r\nimport '../NewApp.css';\r\n\r\nimport { Button, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Liste de course interactive',\r\n        description: \"Bienvenue sur votre application de liste de course. Pour commencer, veuillez cliquer sur \\\"créer une liste\\\". Si vous avez déjà créé une liste, cliquez sur \\\"En course\\\" lorsque vous faites vos course.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          }\r\n      });\r\n  };\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                        <Button \r\n                            style={{ margin : '1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='enCourse'\r\n                            onClick={this.props.choixComponent}\r\n                            >Faire ses courses\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='mesListes'\r\n                            onClick={this.props.choixComponent}\r\n                        >Créer une liste\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\" \r\n                            className='item-button'\r\n                            name='monProfil'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mon profil\r\n                        </Button>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Row, Col, notification, Switch } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Votre profil',\r\n        description: \"Bientôt vous aurez la possibilité de modifier votre profil et bien plus encore!\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Se connecter à un autre profil',\r\n                description: \"Il vous suffit de recopier l'identifiant de la liste que vous souhaitez rejoindre et de valider. Ensuite cliquez sur cette liste pour la rejoindre!\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                // onClose: () => {\r\n                //   alert('clicked');\r\n                // },\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass ProfilUser extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const { \r\n            user, help, inverseProduit, userUid, newUserUid, choixUserUid, linkName, followWindow,\r\n                toggleSwitchHelp, toggleSwitchInverseProduit, infinitScroll, toggleSwitchInfiniteScroll,\r\n                toggleSwitchFollowWindow\r\n            } = this.props;\r\n        return ( \r\n            <Col span={24}>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col  xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                    <h2>Bienvenue sur votre profil {user}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Aide : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={help === true ? true : false} onChange={toggleSwitchHelp} id='switchButtonHelp'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Inverser l'ordre des produits : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={inverseProduit === true ? true : false} onChange={toggleSwitchInverseProduit} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Formulaire suit l'écran : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={followWindow === true ? true : false} onChange={toggleSwitchFollowWindow} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Mode scroll infinit : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={infinitScroll === true ? true : false} onChange={toggleSwitchInfiniteScroll} id='switchButtonInfinitScroll'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Votre identifiant : </b>{userUid}</span>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                        <Button block type={choixUserUid ? \"primary\" : \"default\"} name={userUid}  onClick={!choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                        {choixUserUid ? <span>Votre liste</span>: <span>Rejoindre votre liste</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <Button block type={choixUserUid ? \"default\" : \"primary\"} name={newUserUid} onClick={choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                            {choixUserUid ? <span>Rejoindre la liste de {linkName}</span>: <span>Liste de {linkName}</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Ajouter un identifiant : </b></span>\r\n                        <input type='text' placeholder='Entrez le nouvel identifiant' onChange={this.props.changeUserUid} required={true}/>\r\n                        <Button type=\"primary\" onClick={this.props.valideChangeUserUid} className='changeUid'>\r\n                            <Icon type=\"check\" />Valider\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 3, pull: 10 }} md={{ span: 3, pull: 10 }} lg={{ span: 3, pull: 10 }}>\r\n                        <Button type='primary' onClick={() => this.props.deconnexion()} style={{ borderRadius: '50px', width: '35px', height: '35px', marginLeft: '10px' }}>\r\n                            <Icon type=\"logout\" />\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row type='flex' justify='left'>\r\n                    <Col span={6}>\r\n                    <div className='button-anth'>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilUser;","import React, { Component } from 'react';\r\n\r\nimport { Menu, Icon } from 'antd';\r\n\r\nclass HeaderMenu extends Component {\r\n    render() { \r\n        return ( \r\n            <Menu\r\n            onClick={this.props.handleClick}\r\n            selectedKeys={[this.props.choixComponentState]}\r\n            mode=\"horizontal\"\r\n          >\r\n            <Menu.Item key=\"menu\">\r\n                <Icon type=\"home\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"mesListes\">\r\n                <Icon type=\"ordered-list\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"enCourse\">\r\n                <Icon type=\"shopping\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"monProfil\">\r\n                <Icon type=\"user\" />\r\n            </Menu.Item>\r\n          </Menu>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HeaderMenu;","import React, { Component, createRef } from 'react';\n// import './App.css';\nimport './NewApp.css';\nimport 'antd/dist/antd.css';\nimport './animations.css';\n\n// firebase\nimport base from './firebase';\nimport * as firebase from 'firebase';\n\n//ANT design\nimport { \n  Row, Col, Layout, Icon, message, Input, Slider, InputNumber, Select, Card, Avatar, Skeleton \n} from 'antd';\n\nimport Home from './Components/Home';\nimport Loading from './Components/Loading';\nimport EnCourse from './Components/EnCourse';\nimport Menu from './Components/Menu';\nimport ProfilUser from './Components/ProfilUser';\nimport HeaderMenu from './Components/HeaderMenu';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport prochainement from './img/prochainement2.png';\n\nconst {\n  Header, Footer, Content,\n} = Layout;\nconst { Meta } = Card;\n\nconst {TextArea} = Input;\nconst Option = Select.Option;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // firebase.initializeApp(config);\n        this.state = {\n            listeDeBase: [],\n            data: '',\n            arrayData: [],\n            item: null,\n            category: null,\n            categoryIsChanged: false,\n            categorySelected: '',\n            itemSelected: '',\n            titreListe: [],\n            hasMoreItems: true, // on ou off infinit scroll\n            currentTitre: '',\n            countPercent: 0, // pourcentage pour la progress bar\n            choixComponent: 'menu',\n            currentCategory: '' || 'Ma super catégorie',\n            numChildCategory: 0,\n            isSignedIn: false,\n            clicked: false,\n            itemIsChanged: false,\n            loading: true,\n            goHome: false,\n            isCategory: true,\n            clickedText : false,\n            indexItem: null,\n            currentItem: '',\n            isToggleSwitchType: false,\n            help: true,\n            inverseProduit: true,\n            userId: '' || 'Mikael',\n            userUid: '',\n            newUserUid: '',\n            choixUserUid: true,\n            changeUserInput: false,\n            currentUserUid: '',\n            linkName: '',\n            followers: [],\n            infinitScroll: false, // on ou off du scroll\n            count: 0,\n            countItem: 0,\n            typeCount: 'unité',\n            newComment: '',\n            showCategory: true, // cache ou pas la catégorie avec hidden\n            showForm: false, //affiche ou non le form dans faire ses courses\n            inputOpen: false, // rend visible l'input du form\n            visible: false, //affiche le drawer\n            itemIsVisible: true, //affiche ou non l'item dans la liste de course\n            categoryIsVisible: true, //affiche ou non la catégorie dans la liste de course\n            totalItem: 0,\n            isScroll: 0,\n            isLoading: false,\n            isLoadingInversed: false,\n            errors: '',\n            referenceToOldestKey: '',\n            referenceToFirstOldestKey: '',\n            followWindow: true,\n            largeur: 0,\n            hauteur: 0,\n            indexArray: 0,\n            nextItem: 0,\n            lastMinuteItem: false //verifie si un item a ete ajoute a la derniere minute\n        };\n      this.delete = this.delete.bind(this);\n      this.deleteCategory = this.deleteCategory.bind(this);\n      this.createNewItem = this.createNewItem.bind(this);\n      this.addNewListTitre = this.addNewListTitre.bind(this);\n      this.deconnexion = this.deconnexion.bind(this);\n}\n\nlisteRef = createRef();\n\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\ncomponentDidMount() {\n  const { loading } = this.state;\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        if(user) {\n          if(loading) {\n            base.syncState(`/${user.uid}`, {\n              context: this,\n              state: 'data'\n            });\n            this.getDataBase(user.uid);\n          }\n          this.setState({\n            isSignedIn: !!user, \n            userId: user.displayName,\n            userUid: user.uid\n          });\n        } else {\n          return null\n        }\n      }\n    );\n  \n  //détection du changement de taille d'écran\n  this.handleResize();\n  window.addEventListener('resize', this.handleResize);\n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('resize', this.handleResize); //on enlève l'évènement qui regarde la taille de la fenêtre\n  this.unregisterAuthObserver();\n}\n\n  animFormButton = button => {\n    button.classList.add('formButton-active');\n    setTimeout(() => {\n        button.classList.remove('formButton-active');\n    }, 500);\n  }\n\n  animFormElt = elt => {\n    elt.classList.add('message-enter');\n  }\n\n  getDataBase = myUser => {\n    const { userId, choixUserUid, newUserUid } = this.state;\n    const userUid = myUser || this.state.userUid;\n    const currentUser = choixUserUid ? userUid : newUserUid;\n    const ref = firebase.database().ref(`${currentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${userUid}/user/`).on('value', snapshot => {\n              this.setState({ \n                help: snapshot.val().help,\n                inverseProduit: snapshot.val().inverseProduit,\n                infinitScroll: snapshot.val().infinitScroll,\n                userUid: snapshot.val().userUid,\n                newUserUid: snapshot.val().newUserUid,\n                choixUserUid: snapshot.val().choixUserUid,\n                currentUserUid: snapshot.val().choixUserUid === true ? snapshot.val().userUid : snapshot.val().newUserUid,\n                linkName: snapshot.val().linkName,\n                followers: snapshot.val().followers,\n                followWindow: snapshot.val().followWindow\n               });\n               if(snapshot.val().choixUserUid) {\n                firebase.database().ref(`${currentUser}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    // data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               } else {\n                const newUserUid = snapshot.val().newUserUid;\n                firebase.database().ref(`${newUserUid}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    // data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               }\n            });\n            \n            } else {\n              firebase.database().ref(`${userUid}`).set({\n                user: {\n                  userName: userId,\n                  userUid: userUid,\n                  newUserUid: '',\n                  infinitScroll: false,\n                  help: true,\n                  inverseProduit: true,\n                  choixUserUid: true,\n                  linkName: '',\n                  followers: [],\n                  followWindow: true\n                }\n              });\n              this.setState({\n                loading: false\n            });\n          }\n        });\n  }\n\n  //charger la database du compte sélectionné\n  getOtherDataBase = linkName => {\n    const { currentUserUid } = this.state;\n    const user = this.state.userId;\n    const ref = firebase.database().ref(`${currentUserUid}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${currentUserUid}/user`).on('value', snapshot => {\n              this.setState({ \n                linkName: snapshot.val().userName === user ? linkName : snapshot.val().userName  //probleme quand retour sur user d'origine\n               });\n            });\n            firebase.database().ref(`${currentUserUid}`).on('value', snapshot => {\n              Object.keys(snapshot.val()).map(item =>\n                listItem.push(item)\n              );\n                this.setState({\n                  listeDeBase: listItem,\n                  data: snapshot.val(),\n                  loading: false\n                  });\n              });\n            }\n        });\n        \n  }\n\n  // ----> a décommenter pour charger une liste d'exemple dans la bdd <------\n  // adminAddList = () => {\n  //   const { data } = this.state;\n  //   const listeExemple = [];\n  //   Object.keys(data).map(item => item === 'Liste d\\'exemple' ? listeExemple.push(data[item]) : null);\n  //   firebase.database().ref('Liste-Exemple/').push(listeExemple);\n  // }\n  // ----> a décommenter pour charger une liste d'exemple dans la bdd <------\n  \n  showFormulaire = () => {\n    const showForm = !this.state.showForm;\n    \n    setTimeout(() => {\n      this.setState({ showForm });\n    }, 300);\n  }\n\n  //détecter la taille de la fenêtre\n  handleResize = () => this.setState({\n    hauteur: window.innerHeight,\n    largeur: window.innerWidth\n  });\n\n  loadItems = () => {\n    const { userUid, currentTitre } = this.state;\n    let { referenceToOldestKey } = this.state;\n    this.setState({ isLoading: true }, () => {\n      if (!referenceToOldestKey) { // if initial fetch\n      firebase.database().ref(`${userUid}/${currentTitre}/category`)\n        .orderByKey()\n        .limitToLast(3)\n        .once('value')\n        .then((snapshot) => { \n            // changing to reverse chronological order (latest first)\n            let arrayOfKeys = Object.keys(snapshot.val())\n                .sort()\n                .reverse();\n\n            // transforming to array\n            let results = arrayOfKeys\n                .map((key) => snapshot.val()[key]);\n            // Do what you want to do with the data, i.e.\n            // append to page or dispatch({ … }) if using redux\n            this.setState({\n                arrayData: [ ...results ],\n                isLoading: false,\n                hasMoreItems: (this.state.arrayData.length < 4),\n                referenceToOldestKey: arrayOfKeys[arrayOfKeys.length-1]\n            });\n            window.scrollTo(0, 50);\n        })\n      .catch((error) => this.setState({ \n          errors: error.message,\n          isLoading: false\n        }) \n       );\n      } else {\n        setTimeout(() => {\n          if(referenceToOldestKey) {\n            firebase.database().ref(`${userUid}/${currentTitre}/category`)\n              .orderByKey()\n              .endAt(referenceToOldestKey)\n              .limitToLast(4)\n              .once('value')\n              .then((snapshot) => {\n                // console.log(snapshot.val());\n                  // changing to reverse chronological order (latest first)\n                  // & removing duplicate\n                  let arrayOfKeys = Object.keys(snapshot.val())\n                      .sort()\n                      .reverse()\n                      .slice(1);\n          \n                  // transforming to array\n                  let results = arrayOfKeys\n                      .map((key) => snapshot.val()[key]);\n          \n                  // Do what you want to do with the data, i.e.\n                  // append to page or dispatch({ … }) if using redux\n                  this.setState({\n                    arrayData: [...results],\n                    isLoading: false,\n                    hasMoreItems: (this.state.arrayData.length < 5),\n                    referenceToOldestKey: arrayOfKeys[arrayOfKeys.length-1],\n                    referenceToFirstOldestKey: arrayOfKeys[0]\n                  });\n                  window.scrollTo(0, 50);\n                })\n              } else {\n                return;\n              }\n          }, 200);\n        }\n    });\n}\n\nloadItemsInversed = () => {\n  const { userUid, currentTitre } = this.state;\n  let { referenceToFirstOldestKey } = this.state;\n  this.setState({ isLoadingInversed: true }, () => {\n        if(!referenceToFirstOldestKey) {\n          firebase.database().ref(`${userUid}/${currentTitre}/category`)\n          .orderByKey()\n          .limitToFirst(3)\n          .once('value')\n          .then( snapshot => {\n            let arrayOfKeys = Object.keys(snapshot.val())\n              .sort()\n              .reverse()\n          \n            // transforming to array\n            let results = arrayOfKeys\n              .map((key) => snapshot.val()[key])\n              \n            this.setState({\n              arrayData: [...results],\n              isLoadingInversed: false,\n              hasMoreItems: (this.state.arrayData.length < 5),\n              referenceToOldestKey: arrayOfKeys[0],\n              referenceToFirstOldestKey: arrayOfKeys[arrayOfKeys.length -1]\n            });\n            window.scrollTo(0, 50);\n          })\n        } else {\n          if(referenceToFirstOldestKey) {\n          firebase.database().ref(`${userUid}/${currentTitre}/category`)\n            .orderByKey()\n            .startAt(referenceToFirstOldestKey)\n            .limitToFirst(4)\n            .once('value')\n            .then( snapshot => {\n              let arrayOfKeys = Object.keys(snapshot.val())\n                .sort()\n                .slice(1);\n            \n              // transforming to array\n              let results = arrayOfKeys\n                .map((key) => snapshot.val()[key])\n\n              this.setState({\n                arrayData: [...results],\n                isLoadingInversed: false,\n                hasMoreItems: (this.state.arrayData.length < 5),\n                referenceToOldestKey: arrayOfKeys[0],\n                referenceToFirstOldestKey: arrayOfKeys[arrayOfKeys.length -1]\n              });\n              window.scrollTo(0, 50);\n            })\n          } else {\n            return;\n          }\n        }\n   });\n}\n\n// scroll infini qui revient au début. Fonctionne uniquement sur les items\n// A TESTER uniquement sur les catégories\nloadMore = () => {\n  let { nextItem, indexArray } = this.state;\n  const { data, currentTitre } = this.state;\n  const newDataItems = data[`${currentTitre}`].category;\n  let arrayOfItems = [];\n  Object.keys(newDataItems).map(category => Object.keys(newDataItems[category].categoryItems)\n      .map(items => arrayOfItems.push(newDataItems[category].categoryItems[items]))\n    );\n  const myArray = [];\n  let i = indexArray;\n  this.setState({ isLoading: true }, () => {\n    setTimeout(() => {\n      for(i ; i >= nextItem && i < nextItem + 10 ; i++) {\n        if(!arrayOfItems[i]) {\n            this.setState({ \n              isLoading: false,\n              indexArray: 0,\n              nextItem: 0\n            });\n        return;\n        } else {\n          myArray.push(arrayOfItems[i] ? arrayOfItems[i] : null);\n        }\n      }\n      this.setState({ \n        isLoading: false,\n        indexArray: i,\n        nextItem: nextItem += myArray.length\n       });\n    }, 200);\n    window.scrollTo(0, 50);\n    // console.log(nextItem);\n    // console.log(myArray);\n  });\n}\n\n// savoir si on est en bas de page\nisBottom = el => {\n  return (el.getBoundingClientRect().bottom) <= window.innerHeight;\n}\n\n  // detection du scroll\n  handleScroll = event => {\n    const { followWindow, showForm, hasMoreItems,\n            isLoading, errors, choixComponent,\n            infinitScroll\n          } = this.state;\n    if (errors || isLoading || !hasMoreItems) return;\n    if(choixComponent !== 'enCourse' && infinitScroll) {\n      const myEltBottom = document.querySelector('.ant-layout-footer');\n      // evenement quand on est en bas\n      if (this.isBottom(myEltBottom)) {\n        this.loadItems();\n        // this.loadMore(); // pour tester sur une liste simple!\n      }\n      //évenement quand on est en haut\n      if(window.pageYOffset === 0) {\n        this.loadItemsInversed();\n      }\n    }\n    \n    let isScroll = 0;\n    const formElt = showForm ? document.getElementById('myForm2') : document.getElementById('buttonSubmit2');\n    let lastPositionY = window.scrollY;\n    \n    if(formElt && followWindow) {\n      if(isScroll !== lastPositionY && lastPositionY > 80) {\n        formElt.classList.add('opacity');\n        if(lastPositionY > 80) {\n          formElt.classList.add('fixedPosition');\n        }\n        setTimeout(() => {\n          isScroll = lastPositionY;\n          formElt.classList.remove('opacity');\n        }, 600);\n      }\n      if(lastPositionY <= 80) {\n        formElt.classList.remove('fixedPosition');\n      }\n    }\n}\n\n  // on ou off de l'aide\n  toggleSwitchHelp = checked => {\n    const { userUid } = this.state;\n    const help = checked;\n    this.setState({ help });\n    let updates = {};\n    updates[`${userUid}/user/help`] = help;\n    return firebase.database().ref().update(updates);\n  }\n\n  // on ou off infiniteScroll\n  toggleSwitchInfiniteScroll = checked => {\n    const { userUid } = this.state;\n    const infinitScroll = checked;\n    this.setState({ infinitScroll });\n    let updates = {};\n    updates[`${userUid}/user/infinitScroll`] = infinitScroll;\n    return firebase.database().ref().update(updates);\n  }\n\n  // on ou off pour inverser l'ordre des produits\n  toggleSwitchInverseProduit = checked => {\n    const { userUid } = this.state;\n    const inverseProduit = checked;\n    this.setState({ inverseProduit });\n    let updates = {};\n    updates[`${userUid}/user/inverseProduit`] = inverseProduit;\n    return firebase.database().ref().update(updates);\n  }\n\n  // on ou off du formulaire qui suit le scroll\n  toggleSwitchFollowWindow = checked => {\n    const { userUid } = this.state;\n    const followWindow = checked;\n    this.setState({ followWindow });\n    let updates = {};\n    updates[`${userUid}/user/followWindow`] = followWindow;\n    return firebase.database().ref().update(updates);\n  }\n\n  // changer l'uid pour rejoindre une liste\n  changeUserUid = event => {\n    const newUserUid = event.target.value;\n    if(newUserUid.length > 20) {\n      this.setState({ \n        newUserUid, \n        changeUserInput: true \n      });\n    }\n  }\n\n  error = text => {\n    message.error(`${text}`);\n  };\n\n  //valider le changement de l'uid\n  valideChangeUserUid = () => {\n    const { newUserUid, changeUserInput, userUid, userId } = this.state;\n    const followers = [];\n    const message = 'Utilisateur trouvé!'\n    //on rajoute le nom du followers\n    followers.push(userId);\n    let updates = {};\n    if(newUserUid !== '' && changeUserInput) {\n      firebase.database().ref(`${newUserUid}/user/userName`).on('value', snapshot => {\n        if(snapshot.val()) {\n          this.setState({ \n            linkName: snapshot.val(),\n            followers,\n            changeUserInput: false\n          });\n          updates[`${userUid}/user/linkName`] = snapshot.val();\n          firebase.database().ref().update(updates);\n\n          updates[`${userUid}/user/newUserUid`] = newUserUid;\n          firebase.database().ref().update(updates);\n      \n          updates[`${newUserUid}/user/followers`] = followers;\n          firebase.database().ref().update(updates);\n\n          this.success(message);\n        } else {\n          this.error('Cet utilisateur n\\'existe pas');\n          return;\n        }\n      });\n    } else {\n      this.error('Erreur de saisie');\n    }\n  }\n\n  choisirUserUid = event => {\n    const { choixUserUid, userUid, linkName} = this.state;\n    this.setState({ \n      choixUserUid: !choixUserUid,\n      currentUserUid: event.target.name\n    });\n\n    const choixDB = !choixUserUid;\n    if(choixDB) {\n        this.getDataBase();\n    } else {\n        this.getOtherDataBase(linkName);\n    }\n\n    this.success('Liste chargée!');\n        this.setState({ \n          currentTitre: '',\n          clicked: false,\n          choixComponent: 'menu'\n        });\n\n    let updates = {};\n    updates[`${userUid}/user/choixUserUid`] = !choixUserUid;\n    firebase.database().ref().update(updates);\n  }\n\n  // compteur de produits dans une liste\n  countProduit = arrayData => {\n    let countItemPos = [];\n    let countItemNeg = [];\n    arrayData.map(elt => Object.keys(elt.categoryItems)\n      .map(item => elt.categoryItems[item].checked === false ? \n          countItemNeg.push(elt.categoryItems[item].checked)\n          : \n          countItemPos.push(elt.categoryItems[item].checked)));\n    this.setState({\n        countItem : countItemNeg.length - countItemPos.length\n    });\n}\n\n  // Regarde si un produit est checked\n  isChecked = item => {\n    const { data } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const divElt = collapse.parentElement.parentElement.parentElement;\n    divElt.classList.toggle('flip');\n    item.checked = !item.checked;\n\n    this.setState({ data });\n}\n  // Delete un produit\n  delete = item => {\n    const { currentUserUid, currentTitre, data, arrayData } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const contentElt = collapse.parentElement.parentElement.parentElement.parentElement.childNodes;\n    let indexArray = '';\n    //on supprime du state\n    Object.keys(arrayData || [])\n      .map(elt => arrayData[elt].titreCat === currentCategory ? Object.keys(arrayData[elt].categoryItems)\n        .map(items => arrayData[elt].categoryItems[items] !== null && arrayData[elt].categoryItems[items].key === item.key ? arrayData[elt].categoryItems[items] = null : null)\n        :null);\n\n    this.setState({ \n      // indexItem: `elt-${item.item}`,\n      numChildCategory: contentElt.length,\n      arrayData,\n      data\n  });\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    \n\n    if(contentElt.length === 1) {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n        const indexCat = snapshot.key;\n          firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${indexCat}`).remove();\n      });\n      setTimeout(() => {\n        this.setState({ indexItem: null, arrayData});\n      }, 50);\n    } else {\n        firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n          snapshot.forEach(function(childSnapshot){\n            const indexItem = childSnapshot.key;\n              firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${indexItem}`).remove();\n          });\n        });\n        setTimeout(() => {\n          this.setState({ indexItem: null, arrayData});\n        }, 50);\n    }\n  }\n\n  // delete une catégorie\n  deleteCategory = (item, id) => {\n    const { currentUserUid, data, arrayData, currentTitre } = this.state;\n    const collapse = document.getElementById(item.titreCat);\n    const currentCategory = collapse.id;\n    //on supprime du state\n    Object.keys(arrayData || [])\n      .map(elt => arrayData[elt].titreCat === currentCategory ? arrayData[elt] = null\n        :null);\n\n    this.setState({ arrayData, data });\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === collapse.id ? childSnapshot.key : null;\n      });\n    });\n\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}`).remove();\n    \n    setTimeout(() => {\n      this.setState({ indexItem: null });\n    }, 50);\n  }\n\n  deleteList = item => {\n    const { currentUserUid } = this.state;\n    this.setState({ indexItem: `elt-${item}` });\n\n    firebase.database().ref(`${currentUserUid}/${item}`).remove();\n\n    setTimeout(() => {\n      this.setState({ indexItem: null });\n    }, 50);\n    \n  }\n\n  confirmDelete = item => {\n    this.setState({ clicked: false });\n    this.deleteList(item);\n    message.success('Liste effacée');\n  }\n\n  cancel = e => {\n      message.error('Action annulée');\n    }\n\n  onChangeComment = (event, item) => {\n    const newComment = event.target.value;\n    item.comment = newComment;\n    this.setState({\n      item,\n      newComment\n    });\n  }\n\n  onChangeCount = (value, item) => {\n    const count = value;\n    item.count = value;\n    this.setState({\n      count,\n      item\n    });\n  }\n\n  onChangeTypeCount = (value, item) => {\n    const typeCount = value;\n    item.typeCount = value;\n    this.setState({\n      typeCount,\n      item\n    });\n  }\n\n  modalContent = item => {\n    const { count, largeur, typeCount } = this.state;\n    return (\n      <>\n        <Row gutter={largeur > 720 ? 12 : 8}>\n          <Col span={ largeur > 720 ? 14 : 24 }>\n            <Slider\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              onChange={e => this.onChangeCount(e, item)}\n              value={typeof count === 'number' ? count : 0}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <InputNumber\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              style={{ marginLeft: 16, width: '90%', fontSize: '16px' }}\n              value={count}\n              onChange={e => this.onChangeCount(e, item)}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <Select defaultValue={typeCount} onChange={e => this.onChangeTypeCount(e, item)} style={{ width: '90%' }}>\n              <Option value='unité'>{count <= 1 ? 'unité' : 'unités'}</Option>\n              <Option value='boite'>{count <= 1 ? 'boite' : 'boites'}</Option>\n              <Option value='litre'>{count <= 1 ? 'litre' : 'litres'}</Option>\n              <Option value='ml'>ml</Option>\n              <Option value='cl'>cl</Option>\n              <Option value='Kilo'>{count <= 1 ? 'kilo' : 'kilos'}</Option>\n              <Option value='Gramme'>{count <= 1 ? 'gramme' : 'grammes'}</Option>\n            </Select>\n          </Col>\n        </Row>\n        <TextArea \n          placeholder='ajouter un commentaire' \n          autosize={{ minRows: 5, maxRows: 10 }} \n          onChange={e => this.onChangeComment(e, item)}\n          value={item.comment} \n          rows={10}\n          cols={largeur > 720 ? 50 : 30}\n          autoFocus\n          autoComplete='on'\n          style={{ marginTop: '1em', ontSize: '16px' }}\n          onPressEnter={event => this.onClose(event, item)}\n        />\n      </>\n    )\n  }\n\n  modalContentCourse = item => {\n    const { count, largeur } = this.state;\n    const image = (\n        <Skeleton paragraph={{ rows: 4, width: ['90%', '90%','90%','90%'] }} title={false}>\n          <img alt=\"prochainement\" src={prochainement} />\n        </Skeleton>\n    )\n    return(\n        <Card\n          style={{ width: largeur > 720 ? '70%' : '90%', paddingTop: '1em'}}\n          cover={image}\n        >\n          <Meta\n            avatar={<Avatar style={{ backgroundColor: '#009688' }} icon=\"user\" />}\n            title={item.item}\n          />\n            <br/>\n            {\n              count ?\n              <>\n              <h4>Quantité</h4>\n              <p>{item.count} {item.typeCount}{count <= 1 ? '': 's'}</p>\n              </>\n              :\n              null\n            }\n            {\n              item.comment ?\n              <>\n                <h4>Commentaire</h4>\n                <p>{item.comment}</p>\n              </>\n              :\n              <>\n                <h4>Commentaire</h4>\n                <p>Rien ici!</p>\n              </>\n            }\n        </Card>\n    )\n  }\n\n  //faire apparaitre/disparaitre la commentaire\n  toggleComment = item => {\n    this.setState({ \n      visible: true,\n      item,\n      count: item.count,\n      typeCount: item.typeCount,\n    });\n  }\n\n  onClose = (event, item) => {\n    this.addComment(event, item);\n    this.setState({\n      visible: false,\n      count: 0,\n      typeCount: 'unité',\n    });\n  };\n\n  // Ajouter un commentaire à un élément de la liste\n  addComment = (event, items) => {\n    event.preventDefault();\n    const { currentUserUid, item, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${items.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(items.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  //remettre la liste a zéro (check)\n  reloadList = () => {\n    const { currentTitre, data } = this.state;\n    const arrayData = [];\n    Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\n    arrayData.map(elt => Object.keys(elt.categoryItems)\n      .map(item => elt.categoryItems[item].checked === true ? \n        elt.categoryItems[item].checked = false : null));\n\n    this.setState({ data });\n  }\n\n  //rendre une liste privée\n  changeLocked = item => {\n    const { data } = this.state;\n    item.locked = !item.locked;\n    this.setState({ data });\n  }\n\n  //cache ou non une catégorie\n  categoryVisible = elt => {\n  const { currentUserUid, currentTitre, infinitScroll, data } = this.state;\n  const currentCategory = elt.titreCat;\n  \n  elt.categoryIsVisible = !elt.categoryIsVisible;\n\n  if(infinitScroll) {\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n    let updates = {};\n    updates[`/${currentUserUid}/${currentTitre}/category/${index}/`] = elt;\n            \n    return firebase.database().ref().update(updates);\n  } else {\n    this.setState({ data });\n  }\n\n  \n  }\n\n  itemVisible = item => {\n    const { currentUserUid, currentTitre, data, infinitScroll } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    item.itemIsVisible = !item.itemIsVisible;\n\n  if(infinitScroll) {\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    let itemKey = {};\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n        return itemKey = childSnapshot.key;\n      });\n    });\n            \n    let updates = {};\n    updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n            \n    return firebase.database().ref().update(updates);\n  } else {\n    this.setState({ data });\n  }\n    \n  }\n\n  // Créer une catégorie dans la liste de course\n  createNewCategory = event => {\n    event.preventDefault();\n    const { currentUserUid, currentTitre, currentCategory, choixComponent, arrayData, data } = this.state;\n    // let data = Object.assign({}, this.state.data);\n    const formInput = document.querySelector('#myForm>input');\n    const todoFormButton = document.querySelector('#myForm>button');\n    let category = '';\n    if(currentCategory === 'Ajout de dernière minute' && choixComponent === 'enCourse') {\n      category = 'Ajout de dernière minute';\n    } else {\n      const cat = formInput.value;\n      category = cat.charAt(0).toUpperCase() + cat.substring(1).toLowerCase();\n    }\n    \n    if(formInput.value === '') {\n      this.setState({ \n        showForm: false\n      });\n      return null\n    }\n    const timestamp = Date.now();\n    //insérer une catégorie sans exemple de produit!\n    const dataItem = {\n      titreCat: category,\n      categoryIsVisible: true,\n      key: timestamp,\n      showCategory: true\n    }\n\n    //on regarde si la catégorie existe déjà\n    let categoryExist = false;\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot) {\n        return categoryExist = childSnapshot.val().titreCat === category ? true : false;\n      });\n    });\n    //si la catégorie n'existe pas, on la push dans la bdd\n    if(!categoryExist) {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).push({\n        ...dataItem\n      });\n      this.setState({\n        currentCategory: category,\n        isCategory: false,\n        showForm: false,\n        arrayData: [dataItem, ...arrayData]\n      });\n      this.animFormButton(todoFormButton);\n    } else { // si elle existe message d'alerte\n      this.error('Cette catégorie existe déjà!');\n    }\n    formInput.value = '';\n  }\n\n  //message qui annonce la catégorie sélectionnée\n  success = text => {\n    message.config({\n      top: 90,\n      duration: 2\n    });\n    message.success(`${text}`);\n  };\n\n  // on ouvre le formulaire\n  openInput = titre => {\n    const currentCategory = titre;\n    this.setState({ \n      inputOpen: true,\n      currentCategory\n    });\n  }\n\n  // Créer un élément de liste de course\n  createNewItem = (event, id) => {\n    event.preventDefault();\n    const { currentUserUid, currentCategory, currentTitre, data } = this.state;\n    let arrayData = Object.assign({}, this.state.arrayData);\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const dataElt = todoFormInput.value;\n    const newData = dataElt.charAt(0).toUpperCase() + dataElt.substring(1).toLowerCase();\n\n    if(todoFormInput.value === '') {\n      this.setState({ \n        inputOpen: false\n      });\n      return null\n    }\n\n    if(currentCategory === 'Ma super catégorie') {\n      this.createNewCategory(event);\n      return null;\n    }\n\n    let dataItem = {};\n    dataItem = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...dataItem\n      });\n    }\n\n    let newDataItem = [];\n    newDataItem[timestamp] = dataItem;\n    let newArrayDataItem = {};\n    newArrayDataItem = { ...arrayData[id].categoryItems, ...newDataItem};\n    arrayData[id].categoryItems = { ...newArrayDataItem };\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n    this.setState({ \n      inputOpen: false\n    });\n  }\n\n  // Ajout d'un titre de liste de course\n  addNewListTitre = event => {\n    event.preventDefault();\n    const { currentUserUid } = this.state;\n    const formInput = document.querySelector('#form-input');\n    const todoFormButton = document.querySelector('#myButtonSubmit');\n    const titre = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n\n    this.setState(prevState => ({\n      listeDeBase: [...prevState.listeDeBase, titre],\n      isCategory: true\n    }));\n\n    firebase.database().ref(`${currentUserUid}/${titre}`).set({\n      locked: false\n    });\n\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n  }\n\n  // Détecte quelle liste à été choisie\n  choixListe = title => {\n    this.setState({\n      currentTitre: title,\n      clicked: true\n    });\n  }\n\n  // En Course --------> Check toute la catégorie\n  checkCurrentCategory = (titreCat, showCategory) => {\n    const { choixComponent, currentTitre, currentUserUid } = this.state;\n    const titre = document.getElementById(titreCat);\n    if(!titreCat) {\n      return null\n    } else {\n      if(choixComponent === 'enCourse') {\n        titre.lastChild.firstChild.classList.toggle('hidden');\n      } else {\n        // titre.lastChild.firstChild.classList.toggle('hidden');\n        // titre.children[1].classList.toggle('hidden');\n      }\n      //on cherche l'index de la catégorie selectionnée\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === titreCat ? childSnapshot.key : null;\n        });\n      });\n      let updates = {};\n      updates[`/${currentUserUid}/${currentTitre}/category/${index}/showCategory`] = !showCategory;   \n      firebase.database().ref().update(updates);\n    }\n  }\n\n  // EN COURSE --------> Crée un item dans la catégorie derniere minute\n  createNewItemLastMinute = event => {\n    event.preventDefault();\n    const todoFormInput = document.querySelector('.formu>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    if(!newData) {\n      return\n    }\n    const { currentUserUid, currentCategory, currentTitre, lastMinuteItem } = this.state;\n    const timestamp = Date.now();\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    //on regarde si la catégorie existe déjà pour ne pas en recréer une identique\n    let hasTitreCat = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n         return hasTitreCat = childSnapshot.val().titreCat === 'Ajout de dernière minute';\n      });\n    });\n\n    if(currentCategory === 'Ajout de dernière minute' && !lastMinuteItem && !hasTitreCat) {\n      this.createNewCategory(event);\n      this.setState({ lastMinuteItem: true });\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n    this.setState({ showForm: false });\n  }\n\n  // charger une liste d'exemple\n  loadListExemple = () => {\n    const { currentTitre, currentUserUid } = this.state;\n    firebase.database().ref('Liste-Exemple/-LYBJBXn3P9yQgN75_Gp/0/').on('value', snapshot => {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/`).set(snapshot.val().category);\n    });\n  }\n\n  // utilisé sur bouton pour retour en arrière\n  goHome = () => {\n    this.setState({ clicked: false, isCategory: true });\n  }\n\n  // retour au menu de l'accueil\n  returnToApp = () => {\n    this.setState({ choixComponent: 'menu' });\n  }\n\n  // détecte le composant choisi à l'accueil\n  choixComponent = event => {\n    const choixComponent = event.target.name;\n    if(choixComponent !== '') {\n      if(choixComponent === 'enCourse') {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ajout de dernière minute',\n          showForm: false\n        });\n      } else {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ma super catégorie',\n          showForm: false\n        });\n      }\n    }\n  }\n\n  hideText = () => {\n    const clickedText = this.state.clickedText;\n    this.setState({ clickedText : !clickedText });\n}\n\n//changer le texte d'un produit\nchangeItem = item => {\n  if(!item.key) {\n    return;\n  }\n  this.setState({ \n    itemIsChanged: true,\n    itemSelected: item.key,\n    categoryIsChanged: false,\n    currentItem: item.item\n  });\n}\n\n//changer le texte d'une catégorie\nchangeCategory = elt => {\n  if(!elt.key) {\n    return;\n  }\n  this.setState({\n    categoryIsChanged: true,\n    categorySelected: elt.key,\n    currentCategory: elt.titreCat\n   });\n}\n\n//on capture le changement categorie\nhandleChangeCategory = (event, elt) => {\n  elt.titreCat = event.target.value;\n  this.setState({ category: elt.titreCat });\n}\n\n//on capture le changement produit\nhandleChangeItem = (event, item) => {\n  item.item = event.target.value;\n  this.setState({ item });\n}\n\n//on valide le changement de catégorie\nvalideChangeCategory = (event, elt) => {\n  const { currentUserUid, currentTitre, currentCategory } = this.state;\n  let cat = this.state.category;\n  let category = cat.charAt(0).toUpperCase() + cat.substring(1).toLowerCase();\n  //on cherche l'index de la catégorie selectionnée\n  let index = '';\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n        return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n    });\n  });\n  if(event.key === 'Enter') {\n    //on regarde si la catégorie existe déjà\n    let categoryExist = false;\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot) {\n        return categoryExist = childSnapshot.val().titreCat === category ? true : false;\n      });\n    });\n    //si la catégorie n'existe pas, on la push dans la bdd\n    if(categoryExist || category === null) {\n      this.error(categoryExist ? 'Cette catégorie existe déjà!' : 'Pas de changement');\n      category = currentCategory;\n      elt.titreCat = currentCategory;\n      this.setState({ \n        categoryIsChanged: false,\n       });\n       return null;\n    } else { // si elle existe message d'alerte\n      let updates = {};\n      updates[`/${currentUserUid}/${currentTitre}/category/${index}/titreCat`] = category;   \n      firebase.database().ref().update(updates);\n    }\n    setTimeout(() => {\n      this.setState({\n        categoryIsChanged: false,\n        categorySelected: elt.titreCat,\n        category: null\n       });\n    }, 50);\n  }\n}\n\n// on valide le changement du produit\nvalideChangeItem = (event, item) => {\n  const { currentUserUid, currentTitre, currentItem } = this.state;\n  const collapse = document.querySelector(`#elt-${item.key}`);\n  const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n  const itemElt = item.item;\n  let newItem = itemElt.charAt(0).toUpperCase() + itemElt.substring(1).toLowerCase();\n\n  let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n  let itemKey = {};\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n        return itemKey = childSnapshot.key;\n      });\n    });\n  if(event.key === 'Enter') {\n    if(typeof(itemKey) !== 'string' ) {\n      this.setState({ \n        itemIsChanged: false\n      });\n      item.item = currentItem;\n      return null;\n    }\n    let updates = {};\n    updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}/item`] = newItem;\n            \n    firebase.database().ref().update(updates);\n\n      this.setState({ \n        itemIsChanged: false,\n        itemSelected: '',\n        item: null  \n      });\n  }\n}\n\ndeconnexion = () => {\n  firebase.auth().signOut().then(function() {\n    this.setState({ isSignedIn: false });\n  }).catch(function(error) {\n    console.log(error);\n  });\n}\n\n//choix composant via headermenu\nhandleClick = event => {\n  const choixComponent = event.key;\n  if(choixComponent !== '') {\n    if(choixComponent === 'enCourse') {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ajout de dernière minute',\n        clicked: false,\n        currentTitre: '',\n        showForm: false\n      });\n    } else {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ma super catégorie',\n        clicked: false,\n        currentTitre: '',\n        showForm: false,\n        isCategory: true\n      });\n    }\n  }\n}\n\n  //renvoie dans le render le composent choisit\n  renderChoiseConponent = () => {\n    const { choixComponent } = this.state;\n    switch(choixComponent) {\n      case 'enCourse':\n      return <EnCourse\n                returnToApp={this.returnToApp}\n                choixListe={this.choixListe}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                createNewItemLastMinute={this.createNewItemLastMinute}\n                goHome={this.goHome}\n                currentTitre={this.state.currentTitre}\n                data={this.state.data}\n                checkCurrentCategory={this.checkCurrentCategory}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                largeur={this.state.largeur}\n                modalContentCourse={this.modalContentCourse}\n                showFormulaire={this.showFormulaire}\n                showForm={this.state.showForm}\n                handleScroll={this.handleScroll}\n                choixUserUid={this.state.choixUserUid}\n                countPercent={this.state.countPercent}\n              />\n      case 'mesListes':\n      return <Home\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                addNewListTitre={this.addNewListTitre}\n                deleteList={this.deleteList}\n                loading={this.state.loading}\n                data={this.state.data}\n                returnToApp={this.returnToApp}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                changeItem={this.changeItem}\n                itemIsChanged={this.state.itemIsChanged}\n                handleChangeItem={this.handleChangeItem}\n                valideChangeItem={this.valideChangeItem}\n                itemSelected={this.state.itemSelected}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                createNewCategory={this.createNewCategory}\n                isCategory={this.state.isCategory}\n                currentCategory={this.state.currentCategory}\n                numChildCategory={this.state.numChildCategory}\n                deleteCategory={this.deleteCategory}\n                currentTitre={this.state.currentTitre}\n                isToggleSwitchType={this.state.isToggleSwitchType}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                modalContent={this.modalContent}\n                largeur={this.state.largeur}\n                itemIsVisible={this.state.itemIsVisible}\n                itemVisible={this.itemVisible}\n                handleScroll={this.handleScroll}\n                showForm={this.state.showForm}\n                showFormulaire={this.showFormulaire}\n                categoryVisible={this.categoryVisible}\n                categoryIsVisible={this.state.categoryIsVisible}\n                reloadList={this.reloadList}\n                confirmDelete={this.confirmDelete}\n                cancel={this.cancel}\n                changeLocked={this.changeLocked}\n                choixUserUid={this.state.choixUserUid}\n                inputOpen={this.state.inputOpen}\n                openInput={this.openInput}\n                checkCurrentCategory={this.checkCurrentCategory}\n                loadListExemple={this.loadListExemple}\n                showCategory={this.state.showCategory}\n                categoryIsChanged={this.state.categoryIsChanged}\n                category={this.state.category}\n                categorySelected={this.state.categorySelected}\n                changeCategory={this.changeCategory}\n                handleChangeCategory={this.handleChangeCategory}\n                valideChangeCategory={this.valideChangeCategory}\n                userUid={this.state.userUid}\n                hasMoreItems={this.state.hasMoreItems}\n                loadItems={this.loadItems}\n                arrayData={this.state.arrayData}\n                reloadItems={this.reloadItems}\n                isLoading={this.state.isLoading}\n                infinitScroll={this.state.infinitScroll}\n              />\n      case 'monProfil':\n      return <ProfilUser\n              returnToApp={this.returnToApp}\n              user={this.state.userId}\n              toggleSwitchHelp={this.toggleSwitchHelp}\n              help={this.state.help}\n              toggleSwitchInverseProduit={this.toggleSwitchInverseProduit}\n              inverseProduit={this.state.inverseProduit}\n              userUid={this.state.userUid}\n              changeUserUid={this.changeUserUid}\n              valideChangeUserUid={this.valideChangeUserUid}\n              newUserUid={this.state.newUserUid}\n              choixUserUid={this.state.choixUserUid}\n              choisirUserUid={this.choisirUserUid}\n              linkName={this.state.linkName}\n              followWindow={this.state.followWindow}\n              toggleSwitchFollowWindow={this.toggleSwitchFollowWindow}\n              deconnexion={this.deconnexion}\n              toggleSwitchInfiniteScroll={this.toggleSwitchInfiniteScroll}\n              infinitScroll={this.state.infinitScroll}\n              />\n      default:\n      return null\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14}} lg={{ span: 10 }} id='connexion'>\n            <h1>Check-Course</h1>\n            <p>Veuillez vous connecter svp:</p>\n            <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n          </Col>\n        </Row>\n      );\n    }\n    if(this.state.loading) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14 }} lg={{ span: 10}} id='load'>\n            <Loading/>\n            <h3>Chargement du caddie</h3>\n          </Col>\n        </Row>\n      )\n    }\n    \n    return (\n        <Row type=\"flex\" justify=\"space-around\" id='main'>\n          <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} id='mainCol' >\n          <Layout>\n            <Header ref={this.listeRef}\n              style={{ \n                padding : this.state.largeur >= 480 ? '0 50px' : '0'\n              }}>\n              <Col xs={0} lg={4}>\n                {\n                  this.state.largeur >= 480 ? \n                  <h4><Icon type=\"shopping-cart\" />Check-Course</h4>\n                  :\n                  null\n                }\n              </Col>\n              <Col xs={24} lg={20} \n                style={{\n                  textAlign : this.state.largeur >= 480 ? 'right' : 'center',\n                  fontSize : this.state.largeur >= 480 ? '0.9em' : '0.7em'\n                }}\n              >\n                  <HeaderMenu\n                    handleClick={this.handleClick}\n                    choixComponent={this.choixComponent}\n                    choixComponentState={this.state.choixComponent}\n                  />\n              </Col>\n            </Header>\n          <Content id='myContent'>\n            \n            {\n              this.state.choixComponent === 'menu' ?\n              <>\n                <Col span={24} id={this.state.largeur >= 480 ? 'bckLogo' : 'bckLogo2'}>\n                  <Icon type=\"shopping-cart\" />\n                  <h2>CHECK-COURSE</h2>\n                </Col>\n                <Menu\n                  choixComponent={this.choixComponent}\n                  user={this.state.userId}\n                  hideText={this.hideText}\n                  clickedText={this.state.clickedText}\n                  help={this.state.help}\n                />\n                {\n                // Ligne a mettre en commentaire quand pas utilisé\n                // this.adminAddList() // envoie une liste d'exemple dans la bdd\n                // Ligne a mettre en commentaire quand pas utilisé\n                }\n              </>\n              :\n              this.renderChoiseConponent()\n            }\n            </Content>\n              <Footer>\n                <p>Created By Mikael</p>\n              </Footer>\n            </Layout>\n            </Col>\n          </Row>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { LocaleProvider } from 'antd';\nimport fr_FR from 'antd/lib/locale-provider/fr_FR';\n\nReactDOM.render(\n    <LocaleProvider locale={fr_FR}>\n        <App />\n    </LocaleProvider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}