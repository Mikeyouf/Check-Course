{"version":3,"sources":["img/prochainement2.png","firebase.js","Components/Item.js","Components/ItemList.js","Components/MyLists.js","Components/Home.js","Components/Loading.js","Components/EnCourseList.js","Components/EnCourseItem.js","Components/EnCourse.js","Components/Menu.js","Components/ProfilUser.js","Components/HeaderMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Item","prevProps","prevState","this","nameInput","focus","_this","_this$props","props","item","itemKey","comment","count","itemIsVisible","itemVisible","deleteItem","toggleComment","changeItem","itemIsChanged","handleChangeItem","valideChangeItem","itemSelected","react_default","a","createElement","col","span","row","type","justify","align","key","id","concat","xs","sm","md","lg","onClick","className","input","value","placeholder","onChange","onKeyUp","ref","es_button","name","style","background","border","block","icon","color","fontSize","badge","status","Component","ItemList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderData","data","currentTitre","inverseProduit","arrayData","keys","map","category","categoryItem","push","reverse","setState","liste","state","_this$props2","inputOpen","currentCategory","categoryIsChanged","categorySelected","valideChangeCategory","elt","list","titreCat","locale","emptyText","header","changeCategory","maxLength","e","handleChangeCategory","nameInput3","checkCurrentCategory","showCategory","categoryVisible","categoryIsVisible","deleteCategory","footer","Fragment","onSubmit","createNewItem","autoFocus","nameInput2","openInput","bordered","dataSource","categoryItems","renderItem","checked","Components_Item","delete","_this2","_this$props3","largeur","visible","showForm","drawerWidth","createNewCategory","showFormulaire","length","loadListExemple","drawer","placement","width","onClose","modalContent","MyLists","help","notification","open","message","description","duration","textAlign","window","addEventListener","handleScroll","removeEventListener","onScroll","padding","reloadList","Components_ItemList","addComment","titre","titreListe","indexItem","numChildCategory","marginRight","goHome","Home","choixUserUid","newData","choixListe","size","changeLocked","locked","popconfirm","title","onConfirm","confirmDelete","onCancel","cancel","okText","cancelText","listeDeBase","clicked","Components_MyLists","returnToApp","isCategory","toggleSwitchType","followWindow","addNewListTitre","Loading","react_loading_default","height","countItem","EnCourseList","countProduit","countItemPos","countItemNeg","countTotal","isChecked","positionY","scrollY","createNewItemLastMinute","offset","backgroundColor","boxShadow","modalContentCourse","EnCourseItem","EnCourse","Components_EnCourseItem","Components_EnCourseList","closeComment","handleScrollButton","Menu","margin","choixComponent","ProfilUser","user","userUid","newUserUid","linkName","toggleSwitchHelp","toggleSwitchInverseProduit","marginBottom","es_switch","checkedChildren","unCheckedChildren","toggleSwitchFollowWindow","choisirUserUid","changeUserUid","required","valideChangeUserUid","pull","deconnexion","borderRadius","marginLeft","HeaderMenu","menu","handleClick","selectedKeys","choixComponentState","mode","Header","Layout","Footer","Content","Meta","Card","TextArea","Input","Option","Select","App","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","animFormButton","button","classList","add","setTimeout","remove","animFormElt","getDataBase","myUser","_this$state","userId","currentUser","on","snapshot","listItem","val","currentUserUid","followers","loading","set","userName","getOtherDataBase","curentUser","adminAddList","listeExemple","handleResize","hauteur","innerHeight","innerWidth","_this$state2","isScroll","formElt","document","getElementById","lastPositionY","updates","update","event","target","changeUserInput","error","text","_this$state3","success","_this$state4","_this$state5","collapse","querySelector","parentElement","toggle","index","forEach","childSnapshot","orderByChild","equalTo","_this$state6","contentElt","childNodes","indexCat","deleteList","onChangeComment","newComment","onChangeCount","onChangeTypeCount","typeCount","_this$state7","gutter","slider","min","max","input_number","es_select","defaultValue","autosize","minRows","maxRows","rows","cols","autoComplete","marginTop","ontSize","onPressEnter","_this$state8","image","skeleton","paragraph","alt","src","prochainement","card","paddingTop","cover","avatar","items","preventDefault","_this$state9","_this$state10","_this$state11","_this$state12","_this$state13","formInput","todoFormButton","cat","charAt","toUpperCase","substring","toLowerCase","timestamp","Date","now","categoryExist","objectSpread","config","top","_this$state14","todoFormInput","dataElt","show","toConsumableArray","_this$state15","lastChild","firstChild","_this$state16","lastMinuteItem","hasTitreCat","_this$state17","hideText","clickedText","currentItem","_this$state18","_this$state19","signOut","then","isSignedIn","catch","console","log","renderChoiseConponent","Components_EnCourse","Components_Home","isToggleSwitchType","Components_ProfilUser","totalItem","bind","assertThisInitialized","unregisterAuthObserver","onAuthStateChanged","uid","displayName","Components_Loading","layout","Components_HeaderMenu","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Boolean","location","hostname","match","ReactDOM","render","locale_provider","fr_FR","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2RCAzBC,EAAA,CACXC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,sJC4FRC,6LA1FQC,EAAWC,GACvBC,KAAKC,WACJD,KAAKC,UAAUC,yCAGd,IAAAC,EAAAH,KAAAI,EAMDJ,KAAKK,MAJLC,EAFCF,EAEDE,KAAMC,EAFLH,EAEKG,QAASC,EAFdJ,EAEcI,QAASC,EAFvBL,EAEuBK,MACxBC,EAHCN,EAGDM,cAAeC,EAHdP,EAGcO,YAAaC,EAH3BR,EAG2BQ,WAC5BC,EAJCT,EAIDS,cAAeC,EAJdV,EAIcU,WAAYC,EAJ1BX,EAI0BW,cAC3BC,EALCZ,EAKDY,iBAAkBC,EALjBb,EAKiBa,iBAAkBC,EALnCd,EAKmCc,aAExC,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,IACPJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,KAAK,OACLC,QAAQ,gBACRC,MAAM,SACNC,IAAKrB,EACLsB,GAAE,OAAAC,OAASvB,IAGXQ,GAAiBG,IAAiBX,EAClCY,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,QAASrB,EAAYsB,UAAW,uBACjEjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACIZ,KAAK,OACLa,MAAOhC,EACPiC,YAAY,sBACZC,SAAUxB,EACVyB,QAASxB,EACTyB,IAAK,SAAAL,GAAWlC,EAAKF,UAAYoC,MAIzClB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,QAASrB,EAAYsB,UAAW,uBAChE9B,GAGLa,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC1Bf,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACIC,KAAK,UACLR,UAAU,UACVS,MAAO,CAAEC,WAAY,cAAeC,OAAQ,QAC5CtB,KAAK,UACLuB,OAAK,EACLb,QAAStB,GANb,IASoB,KAAZL,GAA4B,IAAVC,EAClBU,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,UAAUoB,MAAO,CAACK,MAAO,UAAYC,SAAU,WAE1DhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,OAAO,WACVlC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,UAAUoB,MAAO,CAACK,MAAO,UAAYC,SAAU,cAK1EhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC1Bf,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACIE,MAAO,CAAEC,WAAY,eACrBF,KAAK,YACLR,UAAU,QACVX,KAAK,UACLuB,OAAK,EACLb,QAASxB,GAEDD,EACAS,EAAAC,EAAAC,cAAA,KAAGe,UAAU,eAEbjB,EAAAC,EAAAC,cAAA,KAAGe,UAAU,uBAI7BjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACtBf,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACIE,MAAO,CAAEC,WAAY,eACrBF,KAAK,QACLR,UAAU,QACVX,KAAK,UACLuB,OAAK,EACLb,QAASvB,GACLO,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,SAASoB,MAAO,CAAEK,MAAQ,UAAWC,SAAU,sBAlF3EG,+BC+PJC,cA5PX,SAAAA,EAAYlD,GAAO,IAAAF,EAAA,OAAAqD,OAAAC,EAAA,EAAAD,CAAAxD,KAAAuD,IACfpD,EAAAqD,OAAAE,EAAA,EAAAF,CAAAxD,KAAAwD,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA5D,KAAMK,KAyBVwD,WAAa,WAAM,IAAAzD,EACgCD,EAAKE,MAA5CyD,EADO1D,EACP0D,KAAMC,EADC3D,EACD2D,aAAcC,EADb5D,EACa4D,eACtBC,EAAY,GAClB,IAAIH,EACA,OAAO,KAEXN,OAAOU,KAAKJ,GACPK,IAAI,SAAA7D,GAAI,OAAIA,IAASyD,EAClBP,OAAOU,KAAKJ,EAAKxD,IACZ6D,IAAI,SAAAC,GAAQ,OAAIZ,OAAOU,KAAKJ,EAAKxD,GAAM8D,IACnCD,IAAI,SAAAE,GAAY,OAAIJ,EAAUK,KAAKR,EAAKxD,GAAM8D,GAAUC,QAC/D,OACPL,GACCC,EAAUM,UAEdpE,EAAKqE,SAAS,CAAEP,eAzCD9D,EA4CnBsE,MAAQ,WAAM,IACFR,EAAc9D,EAAKuE,MAAnBT,UADEU,EAIFxE,EAAKE,MAFLuE,EAFED,EAEFC,UAAWC,EAFTF,EAESE,gBAAiBC,EAF1BH,EAE0BG,kBAC5BC,EAHEJ,EAGFI,iBAAkBC,EAHhBL,EAGgBK,qBAE1B,OAAIf,GAGIA,GAAa,IAAIE,IAAI,SAACc,EAAKpD,GAAN,OACzBV,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CACItD,IAAG,UAAAE,OAAYD,GACfA,GAAIoD,EAAIE,SACRvC,KAAI,QAAAd,OAAUmD,EAAIE,UAClBC,OAAQ,CAAEC,UAAW,+BACrBC,OACInE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,KAAK,OAAOC,QAAQ,gBAAgBC,MAAM,UAE3CmD,GAAqBC,IAAqBE,EAAIrD,IAC9CT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,GAAIC,GAAI,GAAIE,GAAI,GAAIE,UAAU,WAAWD,QAAS,kBAAMhC,EAAKE,MAAMkF,eAAeN,KACvF9D,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACIZ,KAAK,OACLI,GAAG,UACH2D,UAAW,GACXlD,MAAO2C,EAAIE,SACX5C,YAAY,2BACZC,SAAU,SAAAiD,GAAC,OAAItF,EAAKE,MAAMqF,qBAAqBD,EAAGR,IAClDxC,QAAS,SAAAgD,GAAC,OAAIT,EAAqBS,EAAGR,IACtCvC,IAAK,SAAAL,GAAWlC,EAAKwF,WAAatD,MAI1ClB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,GAAIC,GAAI,GAAIE,GAAI,GAAIE,UAAU,WAAWD,QAAS,kBAAMhC,EAAKE,MAAMkF,eAAeN,KACtFA,EAAIE,UAGThE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,EAAGC,GAAI,EAAGE,GAAI,GACnBf,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACIE,MAAO,CAAEC,WAAY,eACrBF,KAAK,YACLR,UAAU,QACVX,KAAK,UACLuB,OAAK,EACLb,QAAS,kBAAMhC,EAAKE,MAAMuF,qBAAqBX,EAAIE,SAAUF,EAAIY,gBAE7DZ,EAAIY,aACJ1E,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,aAEXN,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,iBAIvBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,EAAGC,GAAI,EAAGE,GAAI,GACnBf,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACIE,MAAO,CAAEC,WAAY,eACrBF,KAAK,YACLR,UAAU,QACVX,KAAK,UACLuB,OAAK,EACLb,QAAS,kBAAMhC,EAAKE,MAAMyF,gBAAgBb,KAElCA,EAAIc,kBACJ5E,EAAAC,EAAAC,cAAA,KAAGe,UAAU,aAAaS,MAAO,CAAEK,MAAO,eAE1C/B,EAAAC,EAAAC,cAAA,KAAGe,UAAU,mBAAmBS,MAAO,CAAEK,MAAO,iBAIhE/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,EAAGE,GAAI,EAAGC,GAAI,GACnBf,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACIC,KAAK,QACLR,UAAU,QACVY,OAAK,EACLvB,KAAK,UACLU,QAAS,kBAAMhC,EAAKE,MAAM2F,eAAef,EAAKpD,KAC9CV,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,SAASoB,MAAO,CAAEK,MAAQ,OAAQC,SAAU,cAKvE8C,OACI9E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KAEItB,GAAaC,IAAoBI,EAAIE,SACrChE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,KAAK,OAAOC,QAAQ,SAASC,MAAM,UACpCR,EAAAC,EAAAC,cAAA,QAAMe,UAAU,kBAAkBP,GAAG,SAASsE,SAAW,SAAAV,GAAC,OAAItF,EAAKE,MAAM+F,cAAcX,KACnFtE,EAAAC,EAAAC,cAAA,SACIQ,GAAG,UACHJ,KAAK,OACLc,YAAY,qBACZiD,UAAW,GACXa,WAAW,EACX3D,IAAK,SAAAL,GAAWlC,EAAKmG,WAAajE,KAEtClB,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASI,GAAG,gBACrBV,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,YAKvBN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,KAAK,OACLC,QAAQ,SACRC,MAAM,SACNQ,QAAS,kBAAMhC,EAAKE,MAAMkG,UAAUtB,EAAIE,YAExChE,EAAAC,EAAAC,cAAA,iCAKZmF,UAAQ,EACRC,WAAYjD,OAAOU,KAAKe,EAAIyB,eAAiB,IAAIvC,IAAI,SAAA7D,GAAI,OAAI2E,EAAIyB,cAAcpG,KAAOiE,UACtFoC,WAAY,SAACrG,EAAMuB,GAAP,OACRV,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KAEIjB,EAAIY,aACJ1E,EAAAC,EAAAC,cAAC6D,EAAA,EAAKrF,KAAN,CAAW+B,IAAG,cAAAE,OAAgBD,GAAMA,GAAIoD,EAAIE,SAAU/C,UAAW9B,EAAKsG,QAAU,sBAAwB,kBACpGzF,EAAAC,EAAAC,cAACwF,EAAD,CACIvG,KAAMA,EAAKA,KACXC,QAASD,EAAKsB,IACdpB,QAASF,EAAKE,QACdC,MAAOH,EAAKG,MACZC,cAAeJ,EAAKI,cACpBK,cAAeZ,EAAKE,MAAMU,cAC1BG,aAAcf,EAAKE,MAAMa,aAEzBF,iBAAkB,SAAAyE,GAAC,OAAItF,EAAKE,MAAMW,iBAAiByE,EAAGnF,IACtDW,iBAAkB,SAAAwE,GAAC,OAAItF,EAAKE,MAAMY,iBAAiBwE,EAAGnF,IACtDQ,WAAY,kBAAMX,EAAKE,MAAMS,WAAWR,IACxCO,cAAe,kBAAMV,EAAKE,MAAMQ,cAAcP,IAC9CK,YAAa,kBAAMR,EAAKE,MAAMM,YAAYL,IAC1CM,WAAY,kBAAMT,EAAKE,MAAMyG,OAAOxG,OAI5C,WAjIL,MAhDXH,EAAKuE,MAAQ,CACTT,UAAW,IAHA9D,mFAQfH,KAAK6D,wDAGU/D,EAAWC,GACvBD,EAAUgE,OAAS9D,KAAKK,MAAMyD,MAC7B9D,KAAK6D,aAEN7D,KAAKC,WACJD,KAAKC,UAAUC,QAEhBF,KAAKsG,YACJtG,KAAKsG,WAAWpG,QAEjBF,KAAK2F,YACJ3F,KAAK2F,WAAWzF,yCAsKf,IAAA6G,EAAA/G,KAAAgH,EACwChH,KAAKK,MAA1CC,EADH0G,EACG1G,KAAM2G,EADTD,EACSC,QAASC,EADlBF,EACkBE,QAASC,EAD3BH,EAC2BG,SACxBlD,EAAcjE,KAAK0E,MAAnBT,UACFmD,EAAcH,EAAU,IAAM,MAAQ,MAC5C,OACI9F,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KAEIiB,EACIhG,EAAAC,EAAAC,cAAA,QAAMe,UAAU,kBAAkBP,GAAG,SAASsE,SAAW,SAAAV,GAAC,OAAIsB,EAAK1G,MAAMgH,kBAAkB5B,KACvFtE,EAAAC,EAAAC,cAAA,SACIQ,GAAG,WACHJ,KAAK,OACLc,YAAY,2BACZiD,UAAW,GACXa,WAAW,EACX3D,IAAK,SAAAL,GAAW0E,EAAK9G,UAAYoC,KAErClB,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASI,GAAG,gBACrBV,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,WAIvBN,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACA/E,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIY,UAAU,8BACVX,KAAK,OACLC,QAAQ,SACRC,MAAM,SACNQ,QAASnC,KAAKK,MAAMiH,gBAEpBnG,EAAAC,EAAAC,cAAA,sCAGqB,IAArB4C,EAAUsD,OACVpG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,GAAIS,GAAI,CAAET,KAAM,GAAIU,GAAI,CAAEV,KAAM,GAAIW,GAAI,CAAEX,KAAM,IAC7DJ,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQK,OAAK,EAACvB,KAAK,UAAUW,UAAU,SAASD,QAASnC,KAAKK,MAAMmH,iBAChErG,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,aADf,uBAMJ,MAIPzB,KAAKyE,QACFtD,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACIC,UAAU,QACVC,MAAOP,EACPQ,QAAS,SAACnC,GAAD,OAAOsB,EAAK1G,MAAMuH,QAAQnC,EAAGnF,IACtC4G,QAASA,GAGLA,EACAlH,KAAKK,MAAMwH,aAAavH,GAExB,cArPDgD,aCiHRwE,8LAnFJ9H,KAAKK,MAAM0H,MAhClBC,IAAaC,KAAK,CACdC,QAAS,2BACTC,YAAa,4KACbC,SAAU,EACVvF,MAAO,CACHwF,UAAW,WAEfT,QAAS,WACLI,IAAaC,KAAK,CACdC,QAAS,qBACTC,YAAa,0NACbC,SAAU,EACVvF,MAAO,CACHwF,UAAW,WAEbT,QAAS,WACPI,IAAaC,KAAK,CACdC,QAAS,UACTC,YAAa,sJACbC,SAAU,EACVvF,MAAO,CACHwF,UAAW,mBAc/BC,OAAOC,iBAAiB,SAAUvI,KAAKK,MAAMmI,6DAI7CF,OAAOG,oBAAoB,SAAUzI,KAAKK,MAAMmI,+CAG3C,IAAArI,EAAAH,KACG+D,EAAiB/D,KAAKK,MAAtB0D,aACR,OACI5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKoH,SAAU,SAAAjD,GAAC,OAAItF,EAAKE,MAAMmI,aAAa/C,IAAIrD,UAAU,iBAClDjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,GAAI+C,KAAM,GAAKpC,GAAI,CAAEX,KAAM,GAAI+C,KAAM,GAAKzC,GAAG,iBAC5EV,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACI/E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAKS,GAAI,CAAET,KAAM,GAAIU,GAAI,CAAEV,KAAM,GAAIW,GAAI,CAAEX,KAAM,IAC9DJ,EAAAC,EAAAC,cAAA,MAAIe,UAAU,cACVjB,EAAAC,EAAAC,cAAA,KAAGe,UAAU,kBAAkBS,MAAO,CAAEK,MAAO,UAAWyF,QAAS,WAClE5E,IAGT5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,GAAIS,GAAI,CAAET,KAAM,GAAIU,GAAI,CAAEV,KAAM,GAAIW,GAAI,CAAEX,KAAM,IAC7DJ,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQK,OAAK,EAACvB,KAAK,UAAUW,UAAU,SAASD,QAASnC,KAAKK,MAAMuI,YAChEzH,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,eAK3BN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,IACPJ,EAAAC,EAAAC,cAACwH,EAAD,CACI/E,KAAM9D,KAAKK,MAAMyD,KACjBhD,WAAYd,KAAKK,MAAMS,WACvBC,cAAef,KAAKK,MAAMU,cAC1BC,iBAAkBhB,KAAKK,MAAMW,iBAC7BC,iBAAkBjB,KAAKK,MAAMY,iBAC7BC,aAAclB,KAAKK,MAAMa,aACzB4F,OAAQ9G,KAAKK,MAAMyG,OACnBjG,cAAeb,KAAKK,MAAMQ,cAC1BiI,WAAY9I,KAAKK,MAAMyI,WACvBC,MAAO/I,KAAKK,MAAM2I,WAClBC,UAAWjJ,KAAKK,MAAM4I,UACtBC,iBAAkBlJ,KAAKK,MAAM6I,iBAC7BlD,eAAgBhG,KAAKK,MAAM2F,eAC3BjC,aAAc/D,KAAKK,MAAM0D,aACzBC,eAAgBhE,KAAKK,MAAM2D,eAC3BkD,QAASlH,KAAKK,MAAM6G,QACpBU,QAAS5H,KAAKK,MAAMuH,QACpBtH,KAAMN,KAAKK,MAAMC,KACjBuH,aAAc7H,KAAKK,MAAMwH,aACzBZ,QAASjH,KAAKK,MAAM4G,QACpBvG,cAAeV,KAAKK,MAAMK,cAC1BC,YAAaX,KAAKK,MAAMM,YACxBmF,gBAAiB9F,KAAKK,MAAMyF,gBAC5BC,kBAAmB/F,KAAKK,MAAM0F,kBAC9BK,cAAepG,KAAKK,MAAM+F,cAC1BxB,UAAW5E,KAAKK,MAAMuE,UACtB2B,UAAWvG,KAAKK,MAAMkG,UACtB1B,gBAAiB7E,KAAKK,MAAMwE,gBAC5BsC,SAAUnH,KAAKK,MAAM8G,SACrBE,kBAAmBrH,KAAKK,MAAMgH,kBAC9BC,eAAgBtH,KAAKK,MAAMiH,eAC3B1B,qBAAsB5F,KAAKK,MAAMuF,qBACjC4B,gBAAiBxH,KAAKK,MAAMmH,gBAC5B3B,aAAc7F,KAAKK,MAAMwF,aACzBf,kBAAmB9E,KAAKK,MAAMyE,kBAC9BV,SAAUpE,KAAKK,MAAM+D,SACrBW,iBAAkB/E,KAAKK,MAAM0E,iBAC7BQ,eAAgBvF,KAAKK,MAAMkF,eAC3BG,qBAAsB1F,KAAKK,MAAMqF,qBACjCV,qBAAsBhF,KAAKK,MAAM2E,wBAG7C7D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,EAAGsB,MAAO,CAAEsG,YAAa,QAChChI,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQK,OAAK,EAACvB,KAAK,UAAUU,QAASnC,KAAKK,MAAM+I,OAAQhH,UAAU,UAC/DjB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,SADf,mBA5EE6B,sBC0LP+F,6MApMX5E,MAAQ,WAAM,IAAArE,EACqBD,EAAKE,MAA5ByD,EADE1D,EACF0D,KAAMwF,EADJlJ,EACIkJ,aACRC,EAAU,GAEZ,OADJ/F,OAAOU,KAAKJ,GAAMK,IAAI,SAAA7D,GAAI,MAAa,SAATA,EAAkBiJ,EAAQjF,KAAKhE,GAAQ,OAE7Da,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CACIsB,UAAQ,EACRpB,OAAQ,CAAEC,UAAW,+BACrBoB,WAAY8C,EACZ5C,WAAa,SAACrG,EAAMuB,GAAP,OACTV,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KAEA5F,EACIa,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KAEIoD,EACAnI,EAAAC,EAAAC,cAAC6D,EAAA,EAAKrF,KAAN,KACIsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,GAAIK,IAAKC,EAAIO,UAAU,eAC9BjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAMW,GAAI,CAAEX,KAAM,IAAMK,IAAG,OAAAE,OAASxB,GAAQuB,GAAE,MAAAC,OAAQxB,GAAQ6B,QAAS,kBAAMhC,EAAKE,MAAMmJ,WAAWlJ,KACjIA,GAELa,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,GAAKU,GAAI,CAAEV,KAAM,GAAKW,GAAI,CAAEX,KAAM,IAC/CJ,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACI8G,KAAK,QACL7G,KAAK,QACLnB,KAAK,UACLuB,OAAK,EACLZ,UAAU,QACVD,QAAS,kBAAMhC,EAAKE,MAAMqJ,aAAa5F,EAAKxD,GAAOA,KAGlDwD,EAAKxD,GAAMqJ,OAGZxI,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,OAAOoB,MAAO,CAAEK,MAAQ,UAAWC,SAAU,WAFxDhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,SAASoB,MAAO,CAAEK,MAAQ,UAAWC,SAAU,aAMlEhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,GAAKU,GAAI,CAAEV,KAAM,GAAKW,GAAI,CAAEX,KAAM,IAC/CJ,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAYC,MAAM,yBAAyBC,UAAW,kBAAM3J,EAAKE,MAAM0J,cAAczJ,IAAO0J,SAAU7J,EAAKE,MAAM4J,OAAQC,OAAO,MAAMC,WAAW,OAC7IhJ,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACI8G,KAAK,QACL7G,KAAK,QACLnB,KAAK,UACLuB,OAAK,EACLZ,UAAU,SAEVjB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,SAASoB,MAAO,CAAEK,MAAQ,UAAWC,SAAU,gBAO9EhC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,MAE8B,IAAtBpC,EAAKxD,GAAMqJ,OACXxI,EAAAC,EAAAC,cAAC6D,EAAA,EAAKrF,KAAN,KACIsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,GAAIK,IAAKC,EAAIO,UAAU,eAC9BjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAMW,GAAI,CAAEX,KAAM,IAAMK,IAAG,OAAAE,OAASxB,GAAQuB,GAAIvB,EAAM6B,QAAS,kBAAMhC,EAAKE,MAAMmJ,WAAWlJ,KACzHA,GAELa,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,GAAKU,GAAI,CAAEV,KAAM,GAAKW,GAAI,CAAEX,KAAM,IAC/CJ,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACI8G,KAAK,QACL7G,KAAK,QACLnB,KAAK,UACLuB,OAAK,EACLZ,UAAU,SAIT0B,EAAKxD,GAAMqJ,OAGZxI,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,OAAOoB,MAAO,CAAEK,MAAQ,UAAWC,SAAU,WAFxDhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,SAASoB,MAAO,CAAEK,MAAQ,UAAWC,SAAU,aAMlEhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,GAAKU,GAAI,CAAEV,KAAM,GAAKW,GAAI,CAAEX,KAAM,IAC/CJ,EAAAC,EAAAC,cAACuI,EAAA,EAAD,CAAYC,MAAM,yBAAyBC,UAAW,kBAAM3J,EAAKE,MAAM0J,cAAczJ,IAAO0J,SAAU7J,EAAKE,MAAM4J,OAAQC,OAAO,MAAMC,WAAW,OAC7IhJ,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACI8G,KAAK,QACL7G,KAAK,QACLnB,KAAK,UACLuB,OAAK,EACLZ,UAAU,SAEVjB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,SAASoB,MAAO,CAAEK,MAAQ,UAAWC,SAAU,gBAO9E,OAOhB,6FA3GbnD,KAAKK,MAAM0H,MAflBC,IAAaC,KAAK,CACdC,QAAS,+BACTC,YAAa,oPACbC,SAAU,EACVvF,MAAO,CACHwF,UAAW,8CA4HV,IAAAtB,EAAA/G,KAAA2E,EAC4B3E,KAAKK,MAA9B+J,EADHzF,EACGyF,YAAaC,EADhB1F,EACgB0F,QACrB,OACIlJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KAECmE,EAwBDlJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,IACPJ,EAAAC,EAAAC,cAACiJ,EAAD,CACIvG,aAAc/D,KAAKK,MAAM0D,aACzBqC,cAAepG,KAAKK,MAAM+F,cAC1BtC,KAAM9D,KAAKK,MAAMyD,KACjBhD,WAAYd,KAAKK,MAAMS,WACvBC,cAAef,KAAKK,MAAMU,cAC1BC,iBAAkBhB,KAAKK,MAAMW,iBAC7BC,iBAAkBjB,KAAKK,MAAMY,iBAC7BC,aAAclB,KAAKK,MAAMa,aACzB4F,OAAQ9G,KAAKK,MAAMyG,OACnBjG,cAAeb,KAAKK,MAAMQ,cAC1BiI,WAAY9I,KAAKK,MAAMyI,WACvBE,WAAYhJ,KAAKK,MAAM2I,WACvBuB,YAAavK,KAAKK,MAAMkK,YACxBnB,OAAQpJ,KAAKK,MAAM+I,OACnBH,UAAWjJ,KAAKK,MAAM4I,UACtB5B,kBAAmBrH,KAAKK,MAAMgH,kBAC9BmD,WAAYxK,KAAKK,MAAMmK,WACvBtB,iBAAkBlJ,KAAKK,MAAM6I,iBAC7BlD,eAAgBhG,KAAKK,MAAM2F,eAC3ByE,iBAAkBzK,KAAKK,MAAMoK,iBAC7B1C,KAAM/H,KAAKK,MAAM0H,KACjB/D,eAAgBhE,KAAKK,MAAM2D,eAC3BkD,QAASlH,KAAKK,MAAM6G,QACpBU,QAAS5H,KAAKK,MAAMuH,QACpBtH,KAAMN,KAAKK,MAAMC,KACjBuH,aAAc7H,KAAKK,MAAMwH,aACzBZ,QAASjH,KAAKK,MAAM4G,QACpBvG,cAAeV,KAAKK,MAAMK,cAC1BC,YAAaX,KAAKK,MAAMM,YACxB6H,aAAcxI,KAAKK,MAAMmI,aACzBkC,aAAc1K,KAAKK,MAAMqK,aACzBvD,SAAUnH,KAAKK,MAAM8G,SACrBG,eAAgBtH,KAAKK,MAAMiH,eAC3BzC,gBAAiB7E,KAAKK,MAAMwE,gBAC5BiB,gBAAiB9F,KAAKK,MAAMyF,gBAC5BC,kBAAmB/F,KAAKK,MAAM0F,kBAC9B6C,WAAY5I,KAAKK,MAAMuI,WACvBhE,UAAW5E,KAAKK,MAAMuE,UACtB2B,UAAWvG,KAAKK,MAAMkG,UACtBX,qBAAsB5F,KAAKK,MAAMuF,qBACjC4B,gBAAiBxH,KAAKK,MAAMmH,gBAC5B3B,aAAc7F,KAAKK,MAAMwF,aACzBf,kBAAmB9E,KAAKK,MAAMyE,kBAC9BV,SAAUpE,KAAKK,MAAM+D,SACrBW,iBAAkB/E,KAAKK,MAAM0E,iBAC7BQ,eAAgBvF,KAAKK,MAAMkF,eAC3BG,qBAAsB1F,KAAKK,MAAMqF,qBACjCV,qBAAsBhF,KAAKK,MAAM2E,wBAxEzC7D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACI/E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,GAAI+C,KAAM,GAAKpC,GAAI,CAAEX,KAAM,GAAI+C,KAAM,IAEhE8F,EAAY7C,QAAU,EACtB,KAEApG,EAAAC,EAAAC,cAAA,QAAMe,UAAU,wBAAwB+D,SAAU,SAAAV,GAAC,OAAIsB,EAAK1G,MAAMsK,gBAAgBlF,KAC9EtE,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOI,GAAG,aAAaU,YAAY,oBAAoBiD,UAAW,KAC9ErE,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASI,GAAG,kBAAzB,MAIRV,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACKtB,KAAKyE,SAEVtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,EAAGsB,MAAO,CAAEsG,YAAa,QAChChI,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQK,OAAK,EAACvB,KAAK,UAAUU,QAASnC,KAAKK,MAAMkK,YAAanI,UAAU,UACpEjB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,SADf,qBA1IL6B,+BCNJsH,EAXC,kBACZzJ,EAAAC,EAAAC,cAACwJ,EAAAzJ,EAAD,CACAK,KAAK,QACLyB,MAAM,UACNd,UAAU,OACVP,GAAG,OACHiJ,OAAQ,IACRnD,MAAO,OCcPoD,EAAY,EA4MDC,cAzMX,SAAAA,EAAY3K,GAAO,IAAAF,EAAA,OAAAqD,OAAAC,EAAA,EAAAD,CAAAxD,KAAAgL,IACf7K,EAAAqD,OAAAE,EAAA,EAAAF,CAAAxD,KAAAwD,OAAAG,EAAA,EAAAH,CAAAwH,GAAApH,KAAA5D,KAAMK,KA0BV4K,aAAe,SAAEnH,EAAMC,GACnB,IAAME,EAAY,GAClB,IAAIH,EACA,OAAO,KAEXN,OAAOU,KAAKJ,GACPK,IAAI,SAAA7D,GAAI,OAAIA,IAASyD,EAAeP,OAAOU,KAAKJ,EAAKxD,IACjD6D,IAAI,SAAAC,GAAQ,OAAIZ,OAAOU,KAAKJ,EAAKxD,GAAM8D,IACnCD,IAAI,SAAAE,GAAY,OAAIP,EAAKxD,GAAM8D,GAAUC,GAAcqC,eAAiB5C,EAAKxD,GAAM8D,GAAUC,GAAc0B,kBAAoB9B,EAAUK,KAAKR,EAAKxD,GAAM8D,GAAUC,IAAgB,SAC1L,OACN,IAAI6G,EAAe,GACfC,EAAe,GACfC,EAAa,GACjBnH,EAAUE,IAAI,SAAAc,GAAG,OAAIzB,OAAOU,KAAKe,EAAIyB,eAAevC,IAAI,SAAA7D,GAAI,OAAI8K,EAAW9G,KAAKW,EAAIyB,cAAcpG,GAAMsG,aACxG3C,EAAUE,IAAI,SAAAc,GAAG,OAAIzB,OAAOU,KAAKe,EAAIyB,eAAevC,IAAI,SAAA7D,GAAI,OAAwC,IAApC2E,EAAIyB,cAAcpG,GAAMsG,SAAqB3B,EAAIyB,cAAcpG,GAAMI,cAAgByK,EAAa7G,KAAKW,EAAIyB,cAAcpG,GAAMsG,SAAUsE,EAAa5G,KAAKW,EAAIyB,cAAcpG,GAAMsG,aACnPmE,EAAYK,EAAW7D,OAAS2D,EAAa3D,QA1C9BpH,EA6CnB0D,WAAa,WAAM,IAAAzD,EACgCD,EAAKE,MAA5CyD,EADO1D,EACP0D,KAAMC,EADC3D,EACD2D,aAAcC,EADb5D,EACa4D,eACtBC,EAAY,GAClB,IAAIH,EACA,OAAO,KAEXN,OAAOU,KAAKJ,GACPK,IAAI,SAAA7D,GAAI,OAAIA,IAASyD,EAClBP,OAAOU,KAAKJ,EAAKxD,IACZ6D,IAAI,SAAAC,GAAQ,OAAIZ,OAAOU,KAAKJ,EAAKxD,GAAM8D,IACnCD,IAAI,SAAAE,GAAY,OAAIJ,EAAUK,KAAKR,EAAKxD,GAAM8D,GAAUC,QAC/D,OACPL,GACCC,EAAUM,UAEdpE,EAAKqE,SAAS,CAAEP,eA5DD9D,EAgEnBsE,MAAQ,WAAM,IACFR,EAAc9D,EAAKuE,MAAnBT,UACR,OAAIA,GAIIA,GAAa,IAAIE,IAAI,SAACc,EAAKpD,GAAN,OAC7BV,EAAAC,EAAAC,cAAA,OAAKO,IAAG,OAAAE,OAASD,IAEboD,EAAIc,kBACJ5E,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CACItD,IAAG,YAAAE,OAAcmD,EAAIE,UACrBtD,GAAIoD,EAAIE,SACRG,OACInE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKK,GAAE,YAAAC,OAAcD,GAAMJ,KAAK,OAAOC,QAAQ,gBAAgBC,MAAM,SAASkB,MAAO,CAACiI,OAAQ,UAC1F3J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,GAAIa,UAAU,WAAWD,QAAS,kBAAMhC,EAAKE,MAAMuF,qBAAqBX,EAAIE,SAAUF,EAAIY,gBAChGZ,EAAIE,WAIjBqB,UAAQ,EACRC,WAAYjD,OAAOU,KAAKe,EAAIyB,eAAiB,IAAIvC,IAAI,SAAA7D,GAAI,OAAI2E,EAAIyB,cAAcpG,KAAOiE,UACtFoC,WAAY,SAACrG,EAAMuB,GAAP,OACRV,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KAEA5F,EAAKI,cACLS,EAAAC,EAAAC,cAAC6D,EAAA,EAAKrF,KAAN,CAAW+B,IAAG,cAAAE,OAAgBxB,EAAKsB,KAAOC,GAAIoD,EAAIE,SAAU/C,UAAW9B,EAAKsG,QAAU,sBAAwB,kBACtGzF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,GAAIK,IAAG,SAAAE,OAAWxB,EAAKsB,MAC9BT,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,KAAK,OACLC,QAAQ,gBACRC,MAAM,SACNC,IAAG,OAAAE,OAASxB,EAAKsB,KACjBC,GAAE,OAAAC,OAASxB,EAAKsB,MAEhBT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIN,IAAG,SAAAE,OAAWxB,EAAKsB,KAAOO,QAAS,kBAAMhC,EAAKE,MAAMgL,UAAU/K,EAAM2D,IAAY7B,UAAW,uBAC3H9B,EAAKA,MAEVa,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGN,IAAG,QAAAE,OAAUxB,EAAKsB,MAC3CT,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACIC,KAAK,UACLR,UAAU,UACVS,MAAO,CAAEC,WAAY,cAAeC,OAAQ,QAC5CtB,KAAK,UACLuB,OAAK,EACLb,QAAS,kBAAMhC,EAAKE,MAAMQ,cAAcP,KAEnB,KAAjBA,EAAKE,SAAiC,IAAfF,EAAKG,MAC5BU,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,UAAUoB,MAAO,CAACK,MAAO,UAAYC,SAAU,WAE1DhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,OAAO,WACVlC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,UAAUoB,MAAO,CAACK,MAAO,UAAYC,SAAU,iBAS9F,SAMR,QA/DO,MAjEXhD,EAAKuE,MAAQ,CACTjE,MAAO,EACPwD,UAAW,IAJA9D,mFASZH,KAAKK,MAAM0H,MA/BlBC,IAAaC,KAAK,CACdC,QAAS,SACTC,YAAa,kHACbC,SAAU,EACVvF,MAAO,CACHwF,UAAW,WAEfT,QAAS,WACLI,IAAaC,KAAK,CACdC,QAAS,SACTC,YAAa,wGACbC,SAAU,EACVvF,MAAO,CACHwF,UAAW,gBAqBvBrI,KAAK6D,aACLyE,OAAOC,iBAAiB,SAAUvI,KAAKK,MAAMmI,yDAG9B1I,EAAWC,GACvBD,EAAUgE,OAAS9D,KAAKK,MAAMyD,MAC7B9D,KAAK6D,4DAKTyE,OAAOG,oBAAoB,SAAUzI,KAAKK,MAAMmI,+CAgH3C,IAAAzB,EAAA/G,KAAA2E,EAC4D3E,KAAKK,MAA9DC,EADHqE,EACGrE,KAAM2G,EADTtC,EACSsC,QAASC,EADlBvC,EACkBuC,QAASC,EAD3BxC,EAC2BwC,SAAUpD,EADrCY,EACqCZ,aAAcD,EADnDa,EACmDb,KAElDsD,EAAcH,EAAU,IAAM,MAAQ,MACtCqE,EAAYhD,OAAOiD,QAEzB,OADAvL,KAAKiL,aAAanH,EAAMC,GAEpB5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKoH,SAAW,SAAAjD,GAAC,OAAIsB,EAAK1G,MAAMmI,aAAa/C,IAAKrD,UAAU,iBACpDjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,GAAI+C,KAAM,GAAKpC,GAAI,CAAEX,KAAM,GAAI+C,KAAM,GAAKzC,GAAG,iBAE5EsF,EACAhG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACI/E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAKS,GAAI,CAAET,KAAM,IAAKU,GAAI,CAAEV,KAAM,GAAIW,GAAI,CAAEX,KAAM,IAC/DJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGe,UAAU,kBAAkBS,MAAO,CAAEK,MAAO,UAAWyF,QAAS,WAAe5E,IAG1F5C,EAAAC,EAAAC,cAAA,QAAMQ,GAAG,SAASO,UAAW+E,GAAYmE,GAAa,GAAK,yCAA2C,uDAAwDnF,SAAUnG,KAAKK,MAAMmL,yBAC/KrK,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOc,YAAY,gCAA6BiD,UAAW,KACvErE,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASI,GAAG,eAAeM,QAASnC,KAAKK,MAAMiH,gBACxDnG,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAO3C,MAAOsK,EAAWU,OAAQ,CAAC,IAAK,IAAK5I,MAAO,CAAE6I,gBAAiB,OAAQxI,MAAO,OAAQyI,UAAW,4BACpGxK,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,aAM3BN,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACI/E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAKS,GAAI,CAAET,KAAM,IAAKU,GAAI,CAAEV,KAAM,GAAIW,GAAI,CAAEX,KAAM,IAC/DJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGe,UAAU,kBAAkBS,MAAO,CAAEK,MAAO,UAAWyF,QAAS,WAAe5E,IAE1F5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAKS,GAAI,CAAET,KAAM,IAAKU,GAAI,CAAEV,KAAM,IAAKW,GAAI,CAAEX,KAAM,KAChEJ,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASW,WAAY+E,GAAYmE,GAAa,GAAK,GAAK,gBAAiBzJ,GAAG,gBAAgBM,QAASnC,KAAKK,MAAMiH,gBACzHnG,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAO3C,MAAOsK,EAAWU,OAAQ,CAAC,GAAI,GAAI5I,MAAO,CAAE6I,gBAAiB,OAAQxI,MAAO,OAAQyI,UAAW,4BAClGxK,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,OAAOoB,MAAO,CAAEM,SAAU,gBAO9DhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,IACLvB,KAAKyE,SAEVtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,EAAGsB,MAAO,CAAEsG,YAAa,QAChChI,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQK,OAAK,EAACvB,KAAK,UAAUU,QAASnC,KAAKK,MAAM+I,OAAQhH,UAAU,UAC/DjB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,SADf,WAIJN,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACIC,UAAU,QACVC,MAAOP,EACPQ,QAAS,SAACnC,GAAD,OAAOsB,EAAK1G,MAAMuH,QAAQnC,EAAGnF,IACtC4G,QAASlH,KAAKK,MAAM6G,SAGhBA,EACAlH,KAAKK,MAAMuL,mBAAmBtL,GAE9B,cAlMGgD,aCTZuI,mLAZF,IAAAzL,EACwBJ,KAAKK,MAA1BC,EADHF,EACGE,KAAMkJ,EADTpJ,EACSoJ,WACd,OACIrI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,GAAIK,IAAG,OAAAE,OAASxB,GAAQ8B,UAAU,uBACzCjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAMW,GAAI,CAAEX,KAAM,IAAMK,IAAG,OAAAE,OAASxB,GAAQuB,GAAE,MAAAC,OAAQxB,GAAQ6B,QAASqH,GACrGlJ,WANMgD,aCqGZwI,6MAlGXrH,MAAQ,WAAM,IAAArE,EACqBD,EAAKE,MAA5ByD,EADE1D,EACF0D,KAAMwF,EADJlJ,EACIkJ,aACRC,EAAU,GAEhB,OADA/F,OAAOU,KAAKJ,GAAMK,IAAI,SAAA7D,GAAI,MAAa,SAATA,EAAkBiJ,EAAQjF,KAAKhE,GAAQ,OAEjEa,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CACIsB,UAAQ,EACRpB,OAAQ,CAAEC,UAAW,oEACrBoB,WAAY8C,EACZ5C,WAAa,SAACrG,EAAMuB,GAAP,OACTV,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KAEA5F,EACAa,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KAEIoD,EACAnI,EAAAC,EAAAC,cAAC6D,EAAA,EAAKrF,KAAN,KACIsB,EAAAC,EAAAC,cAAC0K,EAAD,CACIzL,KAAMA,EACNkJ,WAAY,kBAAMrJ,EAAKE,MAAMmJ,WAAWlJ,OAIhDa,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,MAE0B,IAAtBpC,EAAKxD,GAAMqJ,OACXxI,EAAAC,EAAAC,cAAC6D,EAAA,EAAKrF,KAAN,KACIsB,EAAAC,EAAAC,cAAC0K,EAAD,CACIzL,KAAMA,EACNkJ,WAAY,kBAAMrJ,EAAKE,MAAMmJ,WAAWlJ,OAIhD,OAOR,kFAQZ,OACIa,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KAEClG,KAAKK,MAAMgK,QAYRlJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,IACPJ,EAAAC,EAAAC,cAAC2K,EAAD,CACIjI,aAAc/D,KAAKK,MAAM0D,aACzByH,wBAAyBxL,KAAKK,MAAMmL,wBACpC1H,KAAM9D,KAAKK,MAAMyD,KACjBuH,UAAWrL,KAAKK,MAAMgL,UACtBvE,OAAQ9G,KAAKK,MAAMyG,OACnBjG,cAAeb,KAAKK,MAAMQ,cAC1BiI,WAAY9I,KAAKK,MAAMyI,WACvBE,WAAYhJ,KAAKK,MAAM2I,WACvBuB,YAAavK,KAAKK,MAAMkK,YACxB0B,aAAcjM,KAAKK,MAAM4L,aACzB7C,OAAQpJ,KAAKK,MAAM+I,OACnBH,UAAWjJ,KAAKK,MAAM4I,UACtBrD,qBAAsB5F,KAAKK,MAAMuF,qBACjCmC,KAAM/H,KAAKK,MAAM0H,KACjB/D,eAAgBhE,KAAKK,MAAM2D,eAC3BkD,QAASlH,KAAKK,MAAM6G,QACpBU,QAAS5H,KAAKK,MAAMuH,QACpBtH,KAAMN,KAAKK,MAAMC,KACjB2G,QAASjH,KAAKK,MAAM4G,QACpB2E,mBAAoB5L,KAAKK,MAAMuL,mBAC/BtE,eAAgBtH,KAAKK,MAAMiH,eAC3BH,SAAUnH,KAAKK,MAAM8G,SACrBqB,aAAcxI,KAAKK,MAAMmI,aACzB0D,mBAAoBlM,KAAKK,MAAM6L,sBApC3C/K,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACI/E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,GAAI+C,KAAM,GAAKpC,GAAI,CAAEX,KAAM,GAAI+C,KAAM,IACnEtE,KAAKyE,SAEVtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,EAAGsB,MAAO,CAAEsG,YAAa,QAChChI,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQK,OAAK,EAACvB,KAAK,UAAUU,QAASnC,KAAKK,MAAMkK,YAAanI,UAAU,UACpEjB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,SADf,oBA1DG6B,aCwDR6I,8LA3CJnM,KAAKK,MAAM0H,MAZlBC,IAAaC,KAAK,CACdC,QAAS,8BACTC,YAAa,uNACbC,SAAU,EACVvF,MAAO,CACHwF,UAAW,8CAaf,OACIlH,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACY/E,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACIE,MAAO,CAAEuJ,OAAS,SAClB3C,KAAK,QACLzG,OAAK,EACLvB,KAAK,UACLW,UAAU,cACVQ,KAAK,WACLT,QAASnC,KAAKK,MAAMgM,gBAPxB,qBAUAlL,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACIE,MAAO,CAAEuJ,OAAS,aAClB3C,KAAK,QACLzG,OAAK,EACLvB,KAAK,UACLW,UAAU,cACVQ,KAAK,YACLT,QAASnC,KAAKK,MAAMgM,gBAPxB,sBAUAlL,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACIE,MAAO,CAAEuJ,OAAS,aAClB3C,KAAK,QACLzG,OAAK,EACLvB,KAAK,UACLW,UAAU,cACVQ,KAAK,YACLT,QAASnC,KAAKK,MAAMgM,gBAPxB,sBA9BL/I,sBCkFJgJ,8LArEJtM,KAAKK,MAAM0H,MAzBlBC,IAAaC,KAAK,CACdC,QAAS,eACTC,YAAa,wFACbC,SAAU,EACVvF,MAAO,CACHwF,UAAW,WAEfT,QAAS,WACLI,IAAaC,KAAK,CACdC,QAAS,oCACTC,YAAa,sJACbC,SAAU,EACVvF,MAAO,CACHwF,UAAW,iDAgBlB,IAAAlI,EAAAH,KAAAI,EAIGJ,KAAKK,MAFTkM,EAFCnM,EAEDmM,KAAMxE,EAFL3H,EAEK2H,KAAM/D,EAFX5D,EAEW4D,eAAgBwI,EAF3BpM,EAE2BoM,QAASC,EAFpCrM,EAEoCqM,WAAYnD,EAFhDlJ,EAEgDkJ,aAAcoD,EAF9DtM,EAE8DsM,SAAUhC,EAFxEtK,EAEwEsK,aACrEiC,EAHHvM,EAGGuM,iBAAkBC,EAHrBxM,EAGqBwM,2BAE1B,OACIzL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,IACPJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,KAAK,OAAOC,QAAQ,UACrBP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAMW,GAAI,CAAEX,KAAM,KACtDJ,EAAAC,EAAAC,cAAA,wCAAgCkL,KAGpCpL,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,KAAK,OAAOC,QAAQ,UACrBP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAMW,GAAI,CAAEX,KAAM,IAAMsB,MAAO,CAAEgK,aAAe,QAC/E1L,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,qBACNF,EAAAC,EAAAC,cAACyL,EAAA,EAAD,CAAQC,gBAAgB,MAAMC,kBAAkB,MAAMpG,SAAkB,IAATmB,EAA8BvF,SAAUmK,EAAkB9K,GAAG,sBAEhIV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAMW,GAAI,CAAEX,KAAM,IAAMsB,MAAO,CAAEgK,aAAe,QAC/E1L,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,8CACNF,EAAAC,EAAAC,cAACyL,EAAA,EAAD,CAAQC,gBAAgB,MAAMC,kBAAkB,MAAMpG,SAA4B,IAAnB5C,EAAwCxB,SAAUoK,EAA4B/K,GAAG,gCAEpJV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAMW,GAAI,CAAEX,KAAM,IAAMsB,MAAO,CAAEgK,aAAe,QAC/E1L,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,4DACNF,EAAAC,EAAAC,cAACyL,EAAA,EAAD,CAAQC,gBAAgB,MAAMC,kBAAkB,MAAMpG,SAA0B,IAAjB8D,EAAsClI,SAAUxC,KAAKK,MAAM4M,yBAA0BpL,GAAG,gCAE3JV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAMW,GAAI,CAAEX,KAAM,IAAMsB,MAAO,CAAEgK,aAAe,QAC/E1L,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,iCAA4BmL,IAEtCrL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAMW,GAAI,CAAEX,KAAM,KACjDJ,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQK,OAAK,EAACvB,KAAM6H,EAAe,UAAY,UAAW1G,KAAM4J,EAAUrK,QAAUmH,EAA2C,KAA5BtJ,KAAKK,MAAM6M,eAAuB9K,UAAU,cAC9IkH,EAAenI,EAAAC,EAAAC,cAAA,2BAA0BF,EAAAC,EAAAC,cAAA,uCAG9CF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAMW,GAAI,CAAEX,KAAM,IAAMsB,MAAO,CAAEgK,aAAe,QAC/E1L,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQK,OAAK,EAACvB,KAAM6H,EAAe,UAAY,UAAW1G,KAAM6J,EAAYtK,QAASmH,EAAetJ,KAAKK,MAAM6M,eAAiB,KAAM9K,UAAU,cAC3IkH,EAAenI,EAAAC,EAAAC,cAAA,qCAA6BqL,GAAkBvL,EAAAC,EAAAC,cAAA,wBAAgBqL,KAGvFvL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAMW,GAAI,CAAEX,KAAM,IAAMsB,MAAO,CAAEgK,aAAe,QAC/E1L,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,uCACNF,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOc,YAAY,+BAA+BC,SAAUxC,KAAKK,MAAM8M,cAAeC,UAAU,IAC5GjM,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQlB,KAAK,UAAUU,QAASnC,KAAKK,MAAMgN,oBAAqBjL,UAAU,aACtEjB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,UADf,YAIJN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,EAAG+L,KAAM,IAAMrL,GAAI,CAAEV,KAAM,EAAG+L,KAAM,IAAMpL,GAAI,CAAEX,KAAM,EAAG+L,KAAM,KAC5EnM,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQlB,KAAK,UAAUU,QAAS,kBAAMhC,EAAKE,MAAMkN,eAAe1K,MAAO,CAAE2K,aAAc,OAAQ7F,MAAO,OAAQmD,OAAQ,OAAQ2C,WAAY,SACtItM,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,cAIvBN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,KAAK,OAAOC,QAAQ,QACrBP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,GACXJ,EAAAC,EAAAC,cAAA,OAAKe,UAAU,eACXjB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQK,OAAK,EAACvB,KAAK,UAAUU,QAASnC,KAAKK,MAAMkK,YAAanI,UAAU,UACpEjB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,SADf,qBA5DC6B,sBCCVoK,mLAvBP,OACIvM,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACAxL,QAASnC,KAAKK,MAAMuN,YACpBC,aAAc,CAAC7N,KAAKK,MAAMyN,qBAC1BC,KAAK,cAEL5M,EAAAC,EAAAC,cAACsM,EAAA,EAAK9N,KAAN,CAAW+B,IAAI,QACXT,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,UAEfN,EAAAC,EAAAC,cAACsM,EAAA,EAAK9N,KAAN,CAAW+B,IAAI,aACXT,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,kBAEfN,EAAAC,EAAAC,cAACsM,EAAA,EAAK9N,KAAN,CAAW+B,IAAI,YACXT,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,cAEfN,EAAAC,EAAAC,cAACsM,EAAA,EAAK9N,KAAN,CAAW+B,IAAI,aACXT,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,kBAlBF6B,kDCsBvB0K,GACEC,IADFD,OAAQE,GACND,IADMC,OAAQC,GACdF,IADcE,QAEVC,GAASC,IAATD,KAEDE,GAAYC,IAAZD,SACDE,GAASC,IAAOD,OAs0CPE,eAn0Cb,SAAAA,EAAYrO,GAAO,IAAAF,EAAA,OAAAqD,OAAAC,EAAA,EAAAD,CAAAxD,KAAA0O,IACjBvO,EAAAqD,OAAAE,EAAA,EAAAF,CAAAxD,KAAAwD,OAAAG,EAAA,EAAAH,CAAAkL,GAAA9K,KAAA5D,KAAMK,KA2DVsO,SAAW,CAETC,WAAY,QAEZC,cAAe,CACXvP,OAAcwP,kBAAkBC,YAChCzP,OAAc0P,mBAAmBD,YACjCzP,OAAc2P,qBAAqBF,aAEvCG,UAAW,CAETC,4BAA6B,kBAAM,KAvElBhP,EAwGnBiP,eAAiB,SAAAC,GACfA,EAAOC,UAAUC,IAAI,qBACrBC,WAAW,WACPH,EAAOC,UAAUG,OAAO,sBACzB,MA5GctP,EA+GnBuP,YAAc,SAAAzK,GACZA,EAAIqK,UAAUC,IAAI,kBAhHDpP,EAmHnBwP,YAAc,SAAAC,GAAU,IAAAC,EACuB1P,EAAKuE,MAA1CoL,EADcD,EACdC,OAAQxG,EADMuG,EACNvG,aAAcmD,EADRoD,EACQpD,WACxBD,EAAUoD,GAAUzP,EAAKuE,MAAM8H,QAC/BuD,EAAczG,EAAekD,EAAUC,EACjCnN,aAAoBoD,IAApB,GAAAZ,OAA2BiO,IAC/BC,GAAG,QAAS,SAAAC,GACd,IAAMC,EAAW,GACK,OAAnBD,EAASE,MACV7Q,aAAoBoD,IAApB,GAAAZ,OAA2B0K,EAA3B,WAA4CwD,GAAG,QAAS,SAAAC,GAYrD,GAXD9P,EAAKqE,SAAS,CACZuD,KAAMkI,EAASE,MAAMpI,KACrB/D,eAAgBiM,EAASE,MAAMnM,eAC/BwI,QAASyD,EAASE,MAAM3D,QACxBC,WAAYwD,EAASE,MAAM1D,WAC3BnD,aAAc2G,EAASE,MAAM7G,aAC7B8G,gBAAgD,IAAhCH,EAASE,MAAM7G,aAAwB2G,EAASE,MAAM3D,QAAUyD,EAASE,MAAM1D,WAC/FC,SAAUuD,EAASE,MAAMzD,SACzB2D,UAAWJ,EAASE,MAAME,UAC1B3F,aAAcuF,EAASE,MAAMzF,eAE3BuF,EAASE,MAAM7G,aACjBhK,aAAoBoD,IAApB,GAAAZ,OAA2BiO,IAAeC,GAAG,QAAS,SAAAC,GACpDzM,OAAOU,KAAK+L,EAASE,OAAOhM,IAAI,SAAA7D,GAAI,OAClC4P,EAAS5L,KAAKhE,KAEhBH,EAAKqE,SAAS,CACZ4F,YAAa8F,EACbpM,KAAMmM,EAASE,MACfG,SAAS,UAGP,CACN,IAAM7D,EAAawD,EAASE,MAAM1D,WAClCnN,aAAoBoD,IAApB,GAAAZ,OAA2B2K,IAAcuD,GAAG,QAAS,SAAAC,GACnDzM,OAAOU,KAAK+L,EAASE,OAAOhM,IAAI,SAAA7D,GAAI,OAClC4P,EAAS5L,KAAKhE,KAEhBH,EAAKqE,SAAS,CACZ4F,YAAa8F,EACbpM,KAAMmM,EAASE,MACfG,SAAS,UAOfhR,aAAoBoD,IAApB,GAAAZ,OAA2B0K,IAAW+D,IAAI,CACxChE,KAAM,CACJiE,SAAUV,EACVtD,QAASA,EACTC,WAAY,GACZ1E,MAAM,EACN/D,gBAAgB,EAChBsF,cAAc,EACdoD,SAAU,GACV2D,UAAW,GACX3F,cAAc,KAGlBvK,EAAKqE,SAAS,CACZ8L,SAAS,QAhLJnQ,EAuLnBsQ,iBAAmB,SAAC/D,GAClB,IAAMgE,EAAavQ,EAAKuE,MAAM0L,eACxB7D,EAAOpM,EAAKuE,MAAMoL,OACZxQ,aAAoBoD,IAApB,GAAAZ,OAA2B4O,IAC/BV,GAAG,QAAS,SAAAC,GACd,IAAMC,EAAW,GACK,OAAnBD,EAASE,QACV7Q,aAAoBoD,IAApB,GAAAZ,OAA2B4O,EAA3B,UAA8CV,GAAG,QAAS,SAAAC,GACxD9P,EAAKqE,SAAS,CACZkI,SAAUuD,EAASE,MAAMK,WAAajE,EAAOG,EAAWuD,EAASE,MAAMK,aAG3ElR,aAAoBoD,IAApB,GAAAZ,OAA2B4O,IAAcV,GAAG,QAAS,SAAAC,GACnDzM,OAAOU,KAAK+L,EAASE,OAAOhM,IAAI,SAAA7D,GAAI,OAClC4P,EAAS5L,KAAKhE,KAEdH,EAAKqE,SAAS,CACZ4F,YAAa8F,EACbpM,KAAMmM,EAASE,MACfG,SAAS,UA1MNnQ,EAkNnBwQ,aAAe,WAAM,IACX7M,EAAS3D,EAAKuE,MAAdZ,KACF8M,EAAe,GACrBpN,OAAOU,KAAKJ,GAAMK,IAAI,SAAA7D,GAAI,MAAa,oBAATA,EAA8BsQ,EAAatM,KAAKR,EAAKxD,IAAS,OAC5FhB,aAAoBoD,IAAI,kBAAkB4B,KAAKsM,IAtN9BzQ,EAyNnBmH,eAAiB,WACf,IAAMH,GAAYhH,EAAKuE,MAAMyC,SAE7BqI,WAAW,WACTrP,EAAKqE,SAAS,CAAE2C,cACf,MA9NchH,EAkOnB0Q,aAAe,kBAAM1Q,EAAKqE,SAAS,CACjCsM,QAASxI,OAAOyI,YAChB9J,QAASqB,OAAO0I,cApOC7Q,EAwOnBqI,aAAe,WAAM,IAAAyI,EACgB9Q,EAAKuE,MAAhCgG,EADWuG,EACXvG,aAAcvD,EADH8J,EACG9J,SAClB+J,EAAW,EACTC,EAAUhK,EAAWiK,SAASC,eAAe,WAAaD,SAASC,eAAe,iBACpFC,EAAgBhJ,OAAOiD,QACxB4F,GAAWzG,IACTwG,IAAaI,GAAiBA,EAAgB,KAC/CH,EAAQ7B,UAAUC,IAAI,WACnB+B,EAAgB,IACjBH,EAAQ7B,UAAUC,IAAI,iBAExBC,WAAW,WACT0B,EAAWI,EACXH,EAAQ7B,UAAUG,OAAO,YACxB,MAEF6B,GAAiB,IAClBH,EAAQ7B,UAAUG,OAAO,mBAzPZtP,EA+PnBwM,iBAAmB,SAAA/F,GAAW,IACpB4F,EAAYrM,EAAKuE,MAAjB8H,QACFzE,EAAOnB,EACbzG,EAAKqE,SAAS,CAAEuD,SAChB,IAAIwJ,EAAU,GAEd,OADAA,EAAO,GAAAzP,OAAI0K,EAAJ,gBAA4BzE,EAC5BzI,aAAoBoD,MAAM8O,OAAOD,IArQvBpR,EAyQnByM,2BAA6B,SAAAhG,GAAW,IAC9B4F,EAAYrM,EAAKuE,MAAjB8H,QACFxI,EAAiB4C,EACvBzG,EAAKqE,SAAS,CAAER,mBAChB,IAAIuN,EAAU,GAEd,OADAA,EAAO,GAAAzP,OAAI0K,EAAJ,0BAAsCxI,EACtC1E,aAAoBoD,MAAM8O,OAAOD,IA/QvBpR,EAkRnB8M,yBAA2B,SAAArG,GACzB,IAAM8D,EAAe9D,EACrBzG,EAAKqE,SAAS,CAAEkG,kBApRCvK,EAwRnBgN,cAAgB,SAAAsE,GACd,IAAMhF,EAAagF,EAAMC,OAAOpP,MAC7BmK,EAAWlF,OAAS,IACrBpH,EAAKqE,SAAS,CACZiI,aACAkF,iBAAiB,KA7RJxR,EAkSnByR,MAAQ,SAAAC,GACN3J,IAAQ0J,MAAR,GAAA9P,OAAiB+P,KAnSA1R,EAuSnBkN,oBAAsB,WAAM,IAAAyE,EAC+B3R,EAAKuE,MAAtD+H,EADkBqF,EAClBrF,WAAYkF,EADMG,EACNH,gBAAiBnF,EADXsF,EACWtF,QAASsD,EADpBgC,EACoBhC,OACxCO,EAAY,GAGlBA,EAAU/L,KAAKwL,GACf,IAAIyB,EAAU,GACI,KAAf9E,GAAqBkF,EACtBrS,aAAoBoD,IAApB,GAAAZ,OAA2B2K,EAA3B,mBAAuDuD,GAAG,QAAS,SAAAC,GAC9DA,EAASE,OACVhQ,EAAKqE,SAAS,CACZkI,SAAUuD,EAASE,MACnBE,YACAsB,iBAAiB,IAEnBJ,EAAO,GAAAzP,OAAI0K,EAAJ,mBAA+ByD,EAASE,MAC/C7Q,aAAoBoD,MAAM8O,OAAOD,GAEjCA,EAAO,GAAAzP,OAAI0K,EAAJ,qBAAiCC,EACxCnN,aAAoBoD,MAAM8O,OAAOD,GAEjCA,EAAO,GAAAzP,OAAI2K,EAAJ,oBAAmC4D,EAC1C/Q,aAAoBoD,MAAM8O,OAAOD,GAEjCpR,EAAK4R,QArBK,2BAuBV5R,EAAKyR,MAAM,kCAKfzR,EAAKyR,MAAM,qBAtUIzR,EA0UnB+M,eAAiB,SAAAuE,GAAS,IAAAO,EACmB7R,EAAKuE,MAAxC4E,EADgB0I,EAChB1I,aAAckD,EADEwF,EACFxF,QAASE,EADPsF,EACOtF,SAC/BvM,EAAKqE,SAAS,CACZ8E,cAAeA,EACf8G,eAAgBqB,EAAMC,OAAO9O,QAGd0G,EAEbnJ,EAAKwP,cAELxP,EAAKsQ,iBAAiB/D,GAG1BvM,EAAK4R,QAAQ,qBACT5R,EAAKqE,SAAS,CACZT,aAAc,GACdsG,SAAS,EACTgC,eAAgB,SAGtB,IAAIkF,EAAU,GACdA,EAAO,GAAAzP,OAAI0K,EAAJ,wBAAoClD,EAC3ChK,aAAoBoD,MAAM8O,OAAOD,IAjWhBpR,EAqWnB8K,aAAe,SAAAhH,GACb,IAAIiH,EAAe,GACfC,EAAe,GACnBlH,EAAUE,IAAI,SAAAc,GAAG,OAAIzB,OAAOU,KAAKe,EAAIyB,eAClCvC,IAAI,SAAA7D,GAAI,OAAwC,IAApC2E,EAAIyB,cAAcpG,GAAMsG,QACjCuE,EAAa7G,KAAKW,EAAIyB,cAAcpG,GAAMsG,SAE1CsE,EAAa5G,KAAKW,EAAIyB,cAAcpG,GAAMsG,aAChDzG,EAAKqE,SAAS,CACVuG,UAAYI,EAAa5D,OAAS2D,EAAa3D,UA9WlCpH,EAmXnBkL,UAAY,SAAA/K,GAAQ,IAAA2R,EAC6B9R,EAAKuE,MAA5C0L,EADU6B,EACV7B,eAAgBrM,EADNkO,EACMlO,aAAcD,EADpBmO,EACoBnO,KAChCoO,EAAWd,SAASe,cAAT,QAAArQ,OAA+BxB,EAAKsB,MACtCsQ,EAASE,cAAcA,cAAcA,cAC7C9C,UAAU+C,OAAO,QACxB,IAAMxN,EAAkBqN,EAASE,cAAcA,cAAcA,cAAcvQ,GAC3EvB,EAAKsG,SAAWtG,EAAKsG,QAErBzG,EAAKqE,SAAS,CAAEV,SAEhB,IAAIwO,EAAQ,GACZhT,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEiM,GAAG,QAAS,SAAAC,GAChFA,EAASsC,QAAQ,SAASC,GACtB,OAAOF,EAAQE,EAAcrC,MAAMhL,WAAaN,EAAkB2N,EAAc5Q,IAAM,SAI9F,IAAIrB,EAAU,GACdjB,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAAjC,OAAsEwQ,EAAtE,mBAA6FG,aAAa,OAAOC,QAAQpS,EAAKsB,KAAKoO,GAAG,QAAS,SAAAC,GAC7IA,EAASsC,QAAQ,SAASC,GACxB,OAAOjS,EAAUiS,EAAc5Q,QAInC,IAAI2P,EAAU,GAGd,OAFAA,EAAO,IAAAzP,OAAKsO,EAAL,KAAAtO,OAAuBiC,EAAvB,cAAAjC,OAAgDwQ,EAAhD,mBAAAxQ,OAAuEvB,IAAaD,EAEpFhB,aAAoBoD,MAAM8O,OAAOD,IA9YrBpR,EAiZnB2G,OAAS,SAAAxG,GAAQ,IAAAqS,EAC0BxS,EAAKuE,MAAtC0L,EADOuC,EACPvC,eAAgBrM,EADT4O,EACS5O,aAClBmO,EAAWd,SAASe,cAAT,QAAArQ,OAA+BxB,EAAKsB,MAC/CiD,EAAkBqN,EAASE,cAAcA,cAAcA,cAAcvQ,GACrE+Q,EAAaV,EAASE,cAAcA,cAAcA,cAAcA,cAAcS,WAEpF1S,EAAKqE,SAAS,CACZyE,UAAS,OAAAnH,OAASxB,EAAKA,MACvB4I,iBAAkB0J,EAAWrL,SAG/B,IAAI+K,EAAQ,GACZhT,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEiM,GAAG,QAAS,SAAAC,GAChFA,EAASsC,QAAQ,SAASC,GACtB,OAAOF,EAAQE,EAAcrC,MAAMhL,WAAaN,EAAkB2N,EAAc5Q,IAAM,SAGnE,IAAtBgR,EAAWrL,QACZjI,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAAjC,OAAsEwQ,IAASG,aAAa,OAAOC,QAAQpS,EAAKsB,KAAKoO,GAAG,QAAS,SAAAC,GAC/H,IAAM6C,EAAW7C,EAASrO,IACxBtC,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAAjC,OAAsEgR,IAAYrD,WAEtFD,WAAW,WACTrP,EAAKqE,SAAS,CAAEyE,UAAW,QAC1B,MAED3J,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAAjC,OAAsEwQ,EAAtE,mBAA6FG,aAAa,OAAOC,QAAQpS,EAAKsB,KAAKoO,GAAG,QAAS,SAAAC,GAC7IA,EAASsC,QAAQ,SAASC,GACxB,IAAMvJ,EAAYuJ,EAAc5Q,IAC9BtC,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAAjC,OAAsEwQ,EAAtE,mBAAAxQ,OAA6FmH,IAAawG,aAGhHD,WAAW,WACTrP,EAAKqE,SAAS,CAAEyE,UAAW,QAC1B,MAnbU9I,EAwbnB6F,eAAiB,SAAC1F,EAAMuB,GACtB,IAAM0K,EAAOpM,EAAKuE,MAAM0L,eAClB8B,EAAWd,SAASC,eAAe/Q,EAAK6E,UACxCpB,EAAe5D,EAAKuE,MAAMX,aAE5BuO,EAAQ,GACZhT,aAAoBoD,IAApB,GAAAZ,OAA2ByK,EAA3B,KAAAzK,OAAmCiC,EAAnC,cAA4DiM,GAAG,QAAS,SAAAC,GACtEA,EAASsC,QAAQ,SAASC,GACtB,OAAOF,EAAQE,EAAcrC,MAAMhL,WAAa+M,EAASrQ,GAAK2Q,EAAc5Q,IAAM,SAIxFtC,aAAoBoD,IAApB,GAAAZ,OAA2ByK,EAA3B,KAAAzK,OAAmCiC,EAAnC,cAAAjC,OAA4DwQ,IAAS7C,SAErED,WAAW,WACTrP,EAAKqE,SAAS,CAAEyE,UAAW,QAC1B,KAxcc9I,EA2cnB4S,WAAa,SAACzS,GAAS,IACb8P,EAAmBjQ,EAAKuE,MAAxB0L,eACRjQ,EAAKqE,SAAS,CAAEyE,UAAS,OAAAnH,OAASxB,KAElChB,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CxB,IAAQmP,SAErDD,WAAW,WACTrP,EAAKqE,SAAS,CAAEyE,UAAW,QAC1B,KAndc9I,EAudnB4J,cAAgB,SAAAzJ,GACdH,EAAKqE,SAAS,CAAE6F,SAAS,IACzBlK,EAAK4S,WAAWzS,GAChB4H,IAAQ6J,QAAQ,qBA1dC5R,EA6dnB8J,OAAS,SAAAxE,GACLyC,IAAQ0J,MAAM,sBA9dCzR,EAienB6S,gBAAkB,SAACvB,EAAOnR,GACxB,IAAM2S,EAAaxB,EAAMC,OAAOpP,MAChChC,EAAKE,QAAUyS,EACf9S,EAAKqE,SAAS,CACZlE,OACA2S,gBAtee9S,EA0enB+S,cAAgB,SAAC5Q,EAAOhC,GACtB,IAAMG,EAAQ6B,EACdhC,EAAKG,MAAQ6B,EACbnC,EAAKqE,SAAS,CACZ/D,QACAH,UA/eeH,EAmfnBgT,kBAAoB,SAAC7Q,EAAOhC,GAC1B,IAAM8S,EAAY9Q,EAClBhC,EAAK8S,UAAY9Q,EACjBnC,EAAKqE,SAAS,CACZ4O,YACA9S,UAxfeH,EA4fnB0H,aAAe,SAAAvH,GAAQ,IAAA+S,EACiBlT,EAAKuE,MAAnCjE,EADa4S,EACb5S,MAAOwG,EADMoM,EACNpM,QAASmM,EADHC,EACGD,UACxB,OACEjS,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACE/E,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAK8R,OAAQrM,EAAU,IAAM,GAAK,GAChC9F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAO0F,EAAU,IAAM,GAAK,IAC/B9F,EAAAC,EAAAC,cAACkS,EAAA,EAAD,CACEC,IAAK,EACLC,IAAmB,WAAdL,GAAwC,OAAdA,GAAoC,OAAdA,EAAqB,IAAO,GACjF5Q,SAAU,SAAAiD,GAAC,OAAItF,EAAK+S,cAAczN,EAAGnF,IACrCgC,MAAwB,kBAAV7B,EAAqBA,EAAQ,KAG/CU,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAO0F,EAAU,IAAM,EAAI,IAC9B9F,EAAAC,EAAAC,cAACqS,EAAA,EAAD,CACEF,IAAK,EACLC,IAAmB,WAAdL,GAAwC,OAAdA,GAAoC,OAAdA,EAAqB,IAAO,GACjFvQ,MAAO,CAAE4K,WAAY,GAAI9F,MAAO,MAAOxE,SAAU,QACjDb,MAAO7B,EACP+B,SAAU,SAAAiD,GAAC,OAAItF,EAAK+S,cAAczN,EAAGnF,OAGzCa,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAO0F,EAAU,IAAM,EAAI,IAC9B9F,EAAAC,EAAAC,cAACsS,EAAA,EAAD,CAAQC,aAAcR,EAAW5Q,SAAU,SAAAiD,GAAC,OAAItF,EAAKgT,kBAAkB1N,EAAGnF,IAAOuC,MAAO,CAAE8E,MAAO,QAC/FxG,EAAAC,EAAAC,cAACmN,GAAD,CAAQlM,MAAM,YAAS7B,GAAS,EAAI,WAAU,aAC9CU,EAAAC,EAAAC,cAACmN,GAAD,CAAQlM,MAAM,SAAS7B,GAAS,EAAI,QAAU,UAC9CU,EAAAC,EAAAC,cAACmN,GAAD,CAAQlM,MAAM,SAAS7B,GAAS,EAAI,QAAU,UAC9CU,EAAAC,EAAAC,cAACmN,GAAD,CAAQlM,MAAM,MAAd,MACAnB,EAAAC,EAAAC,cAACmN,GAAD,CAAQlM,MAAM,MAAd,MACAnB,EAAAC,EAAAC,cAACmN,GAAD,CAAQlM,MAAM,QAAQ7B,GAAS,EAAI,OAAS,SAC5CU,EAAAC,EAAAC,cAACmN,GAAD,CAAQlM,MAAM,UAAU7B,GAAS,EAAI,SAAW,cAItDU,EAAAC,EAAAC,cAACiN,GAAD,CACE/L,YAAY,yBACZsR,SAAU,CAAEC,QAAS,EAAGC,QAAS,IACjCvR,SAAU,SAAAiD,GAAC,OAAItF,EAAK6S,gBAAgBvN,EAAGnF,IACvCgC,MAAOhC,EAAKE,QACZwT,KAAM,GACNC,KAAMhN,EAAU,IAAM,GAAK,GAC3BZ,WAAS,EACT6N,aAAa,KACbrR,MAAO,CAAEsR,UAAW,MAAOC,QAAS,QACpCC,aAAc,SAAA5C,GAAK,OAAItR,EAAKyH,QAAQ6J,EAAOnR,QAxiBhCH,EA8iBnByL,mBAAqB,SAAAtL,GAAQ,IAAAgU,EACAnU,EAAKuE,MAAxBjE,EADmB6T,EACnB7T,MAAOwG,EADYqN,EACZrN,QACTsN,EACFpT,EAAAC,EAAAC,cAACmT,EAAA,EAAD,CAAUC,UAAW,CAAET,KAAM,EAAGrM,MAAO,CAAC,MAAO,MAAM,MAAM,QAAUkC,OAAO,GAC1E1I,EAAAC,EAAAC,cAAA,OAAKqT,IAAI,gBAAgBC,IAAKC,QAGpC,OACIzT,EAAAC,EAAAC,cAACwT,EAAA,EAAD,CACEhS,MAAO,CAAE8E,MAAOV,EAAU,IAAM,MAAQ,MAAO6N,WAAY,OAC3DC,MAAOR,GAEPpT,EAAAC,EAAAC,cAAC+M,GAAD,CACE4G,OAAQ7T,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAQnS,MAAO,CAAE6I,gBAAiB,WAAazI,KAAK,SAC5D4G,MAAOvJ,EAAKA,OAEZa,EAAAC,EAAAC,cAAA,WAEEZ,EACAU,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACA/E,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAIf,EAAKG,MAAT,IAAiBH,EAAK8S,UAAW3S,GAAS,EAAI,GAAI,MAGlD,KAGAH,EAAKE,QACLW,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACE/E,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAIf,EAAKE,UAGXW,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACE/E,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,yBAjlBKlB,EAylBnBU,cAAgB,SAAAP,GACdH,EAAKqE,SAAS,CACZ0C,SAAS,EACT5G,OACAG,MAAOH,EAAKG,MACZ2S,UAAW9S,EAAK8S,aA9lBDjT,EAkmBnByH,QAAU,SAAC6J,EAAOnR,GAChBH,EAAK2I,WAAW2I,EAAOnR,GACvBH,EAAKqE,SAAS,CACZ0C,SAAS,EACTzG,MAAO,EACP2S,UAAW,cAvmBIjT,EA4mBnB2I,WAAa,SAAC2I,EAAOwD,GACnBxD,EAAMyD,iBADuB,IAAAC,EAEkBhV,EAAKuE,MAA5C0L,EAFqB+E,EAErB/E,eAAgB9P,EAFK6U,EAEL7U,KAAMyD,EAFDoR,EAECpR,aAExBc,EADWuM,SAASe,cAAT,QAAArQ,OAA+BmT,EAAMrT,MACrBwQ,cAAcA,cAAcA,cAAcvQ,GAEvEyQ,EAAQ,GACZhT,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEiM,GAAG,QAAS,SAAAC,GAChFA,EAASsC,QAAQ,SAASC,GACtB,OAAOF,EAAQE,EAAcrC,MAAMhL,WAAaN,EAAkB2N,EAAc5Q,IAAM,SAI9F,IAAIrB,EAAU,GACdjB,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAAjC,OAAsEwQ,EAAtE,mBAA6FG,aAAa,OAAOC,QAAQuC,EAAMrT,KAAKoO,GAAG,QAAS,SAAAC,GAC9IA,EAASsC,QAAQ,SAASC,GACxB,OAAOjS,EAAUiS,EAAc5Q,QAInC,IAAI2P,EAAU,GAGd,OAFAA,EAAO,IAAAzP,OAAKsO,EAAL,KAAAtO,OAAuBiC,EAAvB,cAAAjC,OAAgDwQ,EAAhD,mBAAAxQ,OAAuEvB,IAAaD,EAEpFhB,aAAoBoD,MAAM8O,OAAOD,IAnoBrBpR,EAuoBnByI,WAAa,WAAM,IAAAwM,EAC8BjV,EAAKuE,MAA5CX,EADSqR,EACTrR,aAAcD,EADLsR,EACKtR,KAAMsM,EADXgF,EACWhF,eACtBnM,EAAY,GAClBT,OAAOU,KAAKJ,GAAMK,IAAI,SAAA7D,GAAI,OAAIA,IAASyD,EAAeP,OAAOU,KAAKJ,EAAKxD,IAAO6D,IAAI,SAAAC,GAAQ,OAAIZ,OAAOU,KAAKJ,EAAKxD,GAAM8D,IAAWD,IAAI,SAAAE,GAAY,OAAIJ,EAAUK,KAAKR,EAAKxD,GAAM8D,GAAUC,QAAkB,OAC1MJ,EAAUE,IAAI,SAAAc,GAAG,OAAIzB,OAAOU,KAAKe,EAAIyB,eAClCvC,IAAI,SAAA7D,GAAI,OAAwC,IAApC2E,EAAIyB,cAAcpG,GAAMsG,QACnC3B,EAAIyB,cAAcpG,GAAMsG,SAAU,EAAQ,SAE9CzG,EAAKqE,SAAS,CAAEV,SAEhB,IAAIyN,EAAU,GAGd,OAFAA,EAAO,IAAAzP,OAAKsO,IAAoBtM,EAEzBxE,aAAoBoD,MAAM8O,OAAOD,IAppBvBpR,EAwpBnBuJ,aAAe,SAACpJ,EAAMuJ,GAAU,IACtBuG,EAAmBjQ,EAAKuE,MAAxB0L,eACR9P,EAAKqJ,QAAUrJ,EAAKqJ,OAEpB,IAAI4H,EAAU,GAEd,OADAA,EAAO,IAAAzP,OAAKsO,EAAL,KAAAtO,OAAuB+H,EAAvB,MAAmCvJ,EACnChB,aAAoBoD,MAAM8O,OAAOD,IA9pBvBpR,EAkqBnB2F,gBAAkB,SAAAb,GAAO,IAAAoQ,EACgBlV,EAAKuE,MAAtC0L,EADiBiF,EACjBjF,eAAgBrM,EADCsR,EACDtR,aAClBc,EAAkBI,EAAIE,SAE5BF,EAAIc,mBAAqBd,EAAIc,kBAE7B,IAAIuM,EAAQ,GACVhT,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEiM,GAAG,QAAS,SAAAC,GAChFA,EAASsC,QAAQ,SAASC,GACtB,OAAOF,EAAQE,EAAcrC,MAAMhL,WAAaN,EAAkB2N,EAAc5Q,IAAM,SAI9F,IAAI2P,EAAU,GAGd,OAFAA,EAAO,IAAAzP,OAAKsO,EAAL,KAAAtO,OAAuBiC,EAAvB,cAAAjC,OAAgDwQ,EAAhD,MAA4DrN,EAE5D3F,aAAoBoD,MAAM8O,OAAOD,IAlrBrBpR,EAqrBnBQ,YAAc,SAAAL,GAAQ,IAAAgV,EACqBnV,EAAKuE,MAAtC0L,EADYkF,EACZlF,eAAgBrM,EADJuR,EACIvR,aAElBc,EADWuM,SAASe,cAAT,QAAArQ,OAA+BxB,EAAKsB,MACpBwQ,cAAcA,cAAcA,cAAcvQ,GAE3EvB,EAAKI,eAAiBJ,EAAKI,cAE3B,IAAI4R,EAAQ,GACZhT,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEiM,GAAG,QAAS,SAAAC,GAChFA,EAASsC,QAAQ,SAASC,GACtB,OAAOF,EAAQE,EAAcrC,MAAMhL,WAAaN,EAAkB2N,EAAc5Q,IAAM,SAI9F,IAAIrB,EAAU,GACdjB,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAAjC,OAAsEwQ,EAAtE,mBAA6FG,aAAa,OAAOC,QAAQpS,EAAKsB,KAAKoO,GAAG,QAAS,SAAAC,GAC7IA,EAASsC,QAAQ,SAASC,GACxB,OAAOjS,EAAUiS,EAAc5Q,QAInC,IAAI2P,EAAU,GAGd,OAFAA,EAAO,IAAAzP,OAAKsO,EAAL,KAAAtO,OAAuBiC,EAAvB,cAAAjC,OAAgDwQ,EAAhD,mBAAAxQ,OAAuEvB,IAAaD,EAEpFhB,aAAoBoD,MAAM8O,OAAOD,IA7sBrBpR,EAitBnBkH,kBAAoB,SAAAoK,GAClBA,EAAMyD,iBADqB,IAAAK,EAE+CpV,EAAKuE,MAAvE0L,EAFmBmF,EAEnBnF,eAAgBrM,EAFGwR,EAEHxR,aAAcc,EAFX0Q,EAEW1Q,gBAAiBwH,EAF5BkJ,EAE4BlJ,eACjDmJ,EAAYpE,SAASe,cAAc,iBACnCsD,EAAiBrE,SAASe,cAAc,kBAC1C/N,EAAW,GACf,GAAuB,gCAApBS,GAAqE,aAAnBwH,EACnDjI,EAAW,kCACN,CACL,IAAMsR,EAAMF,EAAUlT,MACtB8B,EAAWsR,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,UAAU,GAAGC,cAG5D,GAAuB,KAApBN,EAAUlT,MAIX,OAHAnC,EAAKqE,SAAS,CACZ2C,UAAU,IAEL,KAET,IAAM4O,EAAYC,KAAKC,MAEjBnS,EAAO,CACXqB,SAAUf,EACV2B,mBAAmB,EACnBnE,IAAKmU,EACLlQ,cAAc,GAGZqQ,GAAgB,EACpB5W,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEiM,GAAG,QAAS,SAAAC,GAChFA,EAASsC,QAAQ,SAASC,GACxB,OAAO0D,EAAgB1D,EAAcrC,MAAMhL,WAAaf,MAIxD8R,EAWF/V,EAAKyR,MAAM,0CAVXtS,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEO,KAAtEd,OAAA2S,EAAA,EAAA3S,CAAA,GACKM,IAEL3D,EAAKqE,SAAS,CACZK,gBAAiBT,EACjBoG,YAAY,EACZrD,UAAU,IAEZhH,EAAKiP,eAAeqG,IAItBD,EAAUlT,MAAQ,IAjwBDnC,EAqwBnB4R,QAAU,SAAAF,GACR3J,IAAQkO,OAAO,CACbC,IAAK,GACLjO,SAAU,IAEZF,IAAQ6J,QAAR,GAAAjQ,OAAmB+P,KA1wBF1R,EA8wBnBoG,UAAY,SAAAwC,GACV,IAAMlE,EAAkBkE,EACxB5I,EAAKqE,SAAS,CACZI,WAAW,EACXC,qBAlxBe1E,EAuxBnBiG,cAAgB,SAAAqL,GACdA,EAAMyD,iBADiB,IAAAoB,EAEmCnW,EAAKuE,MAAvD0L,EAFekG,EAEflG,eAAgBvL,EAFDyR,EAECzR,gBAAiBd,EAFlBuS,EAEkBvS,aACnCgS,EAAYC,KAAKC,MACjBM,EAAgBnF,SAASe,cAAc,eACvCsD,EAAiBrE,SAASe,cAAc,iBACxCqE,EAAUD,EAAcjU,MACxBiH,EAAUiN,EAAQb,OAAO,GAAGC,cAAgBY,EAAQX,UAAU,GAAGC,cAEvE,GAA2B,KAAxBS,EAAcjU,MAIf,OAHAnC,EAAKqE,SAAS,CACZI,WAAW,IAEN,KAGT,GAAuB,0BAApBC,EAED,OADA1E,EAAKkH,kBAAkBoK,GAChB,KAGT,IAAM3N,EAAO,CACXxD,KAAMiJ,EACN3C,SAAS,EACThF,IAAKmU,EACLvV,QAAS,GACTC,MAAO,EACP2S,UAAW,WACXqD,MAAM,EACN/V,eAAe,GAGjB,GAAe,KAAZ6I,GAAmC,KAAjBxF,EAAqB,CACxC,IAAIuO,EAAQ,GACZhT,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEiM,GAAG,QAAS,SAAAC,GAChFA,EAASsC,QAAQ,SAASC,GACtB,OAAOF,EAAQE,EAAcrC,MAAMhL,WAAaN,EAAkB2N,EAAc5Q,IAAM,SAI5FtC,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAAjC,OAAsEwQ,EAAtE,mBAA6FhO,KAA7Fd,OAAA2S,EAAA,EAAA3S,CAAA,GACKM,IAIP3D,EAAKiP,eAAeqG,GACpBc,EAAcjU,MAAQ,GACtBnC,EAAKqE,SAAS,CAAEI,WAAW,KAt0BVzE,EA00BnBwK,gBAAkB,SAAA8G,GAChBA,EAAMyD,iBADmB,IAEjB9E,EAAmBjQ,EAAKuE,MAAxB0L,eACFoF,EAAYpE,SAASe,cAAc,eACnCsD,EAAiBrE,SAASe,cAAc,mBACxCpJ,EAAQyM,EAAUlT,MACxB,GAAuB,KAApBkT,EAAUlT,MACX,OAAO,KAGTnC,EAAKqE,SAAS,SAAAzE,GAAS,MAAK,CAC1BqK,YAAW,GAAAtI,OAAA0B,OAAAkT,EAAA,EAAAlT,CAAMzD,EAAUqK,aAAhB,CAA6BrB,IACxCyB,YAAY,KAGdlL,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiH,IAASwH,IAAI,CACxD5G,QAAQ,IAGVxJ,EAAKiP,eAAeqG,GACpBD,EAAUlT,MAAQ,IA91BDnC,EAk2BnBqJ,WAAa,SAAAK,GACX1J,EAAKqE,SAAS,CACZT,aAAc8F,EACdQ,SAAS,KAr2BMlK,EA02BnByF,qBAAuB,SAACT,EAAUU,GAAiB,IAAA8Q,EACQxW,EAAKuE,MAAtD2H,EADyCsK,EACzCtK,eAAgBtI,EADyB4S,EACzB5S,aAAcqM,EADWuG,EACXvG,eAChCrH,EAAQqI,SAASC,eAAelM,GACtC,IAAIA,EACF,OAAO,KAEe,aAAnBkH,GACDtD,EAAM6N,UAAUC,WAAWvH,UAAU+C,OAAO,UAM9C,IAAIC,EAAQ,GACZhT,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEiM,GAAG,QAAS,SAAAC,GAChFA,EAASsC,QAAQ,SAASC,GACtB,OAAOF,EAAQE,EAAcrC,MAAMhL,WAAaA,EAAWqN,EAAc5Q,IAAM,SAGrF,IAAI2P,EAAU,GACdA,EAAO,IAAAzP,OAAKsO,EAAL,KAAAtO,OAAuBiC,EAAvB,cAAAjC,OAAgDwQ,EAAhD,mBAAyEzM,EAChFvG,aAAoBoD,MAAM8O,OAAOD,IA/3BlBpR,EAo4BnBqL,wBAA0B,SAAAiG,GACxBA,EAAMyD,iBACN,IAAMqB,EAAgBnF,SAASe,cAAc,gBACvCsD,EAAiBrE,SAASe,cAAc,iBACxC5I,EAAUgN,EAAcjU,MAC9B,GAAIiH,EAAJ,CALiC,IAAAuN,EAQyC3W,EAAKuE,MAAvE0L,EARyB0G,EAQzB1G,eAAgBvL,EARSiS,EAQTjS,gBAAiBd,EARR+S,EAQQ/S,aAAcgT,EARtBD,EAQsBC,eAEjDjT,EAAO,CACXxD,KAAMiJ,EACN3C,SAAS,EACThF,IAJgBoU,KAAKC,MAKrBzV,QAAS,GACTC,MAAO,EACP2S,UAAW,WACXqD,MAAM,EACN/V,eAAe,GAIbsW,EAAc,GAYlB,GAXA1X,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEiM,GAAG,QAAS,SAAAC,GAChFA,EAASsC,QAAQ,SAASC,GACvB,OAAOwE,EAA+C,gCAAjCxE,EAAcrC,MAAMhL,aAIvB,gCAApBN,GAAmDkS,GAAmBC,IACvE7W,EAAKkH,kBAAkBoK,GACvBtR,EAAKqE,SAAS,CAAEuS,gBAAgB,KAGnB,KAAZxN,GAAmC,KAAjBxF,EAAqB,CACxC,IAAIuO,EAAQ,GACZhT,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEiM,GAAG,QAAS,SAAAC,GAChFA,EAASsC,QAAQ,SAASC,GACtB,OAAOF,EAAQE,EAAcrC,MAAMhL,WAAaN,EAAkB2N,EAAc5Q,IAAM,SAI5FtC,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAAjC,OAAsEwQ,EAAtE,mBAA6FhO,KAA7Fd,OAAA2S,EAAA,EAAA3S,CAAA,GACKM,IAIP3D,EAAKiP,eAAeqG,GACpBc,EAAcjU,MAAQ,GACtBnC,EAAKqE,SAAS,CAAE2C,UAAU,MAr7BThH,EAy7BnBqH,gBAAkB,WAAM,IAAAyP,EACmB9W,EAAKuE,MAAtCX,EADckT,EACdlT,aAAcqM,EADA6G,EACA7G,eACtB9Q,aAAoBoD,IAAI,yCAAyCsN,GAAG,QAAS,SAAAC,GAC3E3Q,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,eAAuEwM,IAAIN,EAASE,MAAM/L,aA57B3EjE,EAi8BnBiJ,OAAS,WACPjJ,EAAKqE,SAAS,CAAE6F,SAAS,EAAOG,YAAY,KAl8B3BrK,EAs8BnBoK,YAAc,WACZpK,EAAKqE,SAAS,CAAE6H,eAAgB,UAv8BflM,EA28BnBkM,eAAiB,SAAAoF,GACf,IAAMpF,EAAiBoF,EAAMC,OAAO9O,KACd,KAAnByJ,IACqB,aAAnBA,EACDlM,EAAKqE,SAAS,CACZ6H,iBACAxH,gBAAiB,8BACjBsC,UAAU,IAGZhH,EAAKqE,SAAS,CACZ6H,iBACAxH,gBAAiB,wBACjBsC,UAAU,MAx9BChH,EA89BnB+W,SAAW,WACT,IAAMC,EAAchX,EAAKuE,MAAMyS,YAC/BhX,EAAKqE,SAAS,CAAE2S,aAAeA,KAh+BdhX,EAo+BrBW,WAAa,SAAAR,GACXH,EAAKqE,SAAS,CACZzD,eAAe,EACfG,aAAcZ,EAAKsB,IACnBkD,mBAAmB,EACnBsS,YAAa9W,EAAKA,QAz+BDH,EA8+BrBoF,eAAiB,SAAAN,GACf9E,EAAKqE,SAAS,CACZM,mBAAmB,EACnBC,iBAAkBE,EAAIrD,IACtBiD,gBAAiBI,EAAIE,YAl/BJhF,EAu/BrBuF,qBAAuB,SAAC+L,EAAOxM,GAC7BA,EAAIE,SAAWsM,EAAMC,OAAOpP,MAC5BnC,EAAKqE,SAAS,CAAEJ,SAAUa,EAAIE,YAz/BXhF,EA6/BrBa,iBAAmB,SAACyQ,EAAOnR,GACzBA,EAAKA,KAAOmR,EAAMC,OAAOpP,MACzBnC,EAAKqE,SAAS,CAAElE,UA//BGH,EAmgCrB6E,qBAAuB,SAACyM,EAAOxM,GAAQ,IAAAoS,EACqBlX,EAAKuE,MAAvD0L,EAD6BiH,EAC7BjH,eAAgBrM,EADasT,EACbtT,aAAcc,EADDwS,EACCxS,gBAClCT,EAAWjE,EAAKuE,MAAMN,SAEtBkO,EAAQ,GAMZ,GALAhT,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEiM,GAAG,QAAS,SAAAC,GAChFA,EAASsC,QAAQ,SAASC,GACtB,OAAOF,EAAQE,EAAcrC,MAAMhL,WAAaN,EAAkB2N,EAAc5Q,IAAM,SAG3E,UAAd6P,EAAM7P,IAAiB,CAExB,IAAIsU,GAAgB,EAOpB,GANA5W,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEiM,GAAG,QAAS,SAAAC,GAChFA,EAASsC,QAAQ,SAASC,GACxB,OAAO0D,EAAgB1D,EAAcrC,MAAMhL,WAAaf,MAIzD8R,GAA8B,OAAb9R,EAOjB,OANDjE,EAAKyR,MAAMsE,EAAgB,wCAAiC,qBAC5D9R,EAAWS,EACXI,EAAIE,SAAWN,EACf1E,EAAKqE,SAAS,CACZM,mBAAmB,IAEb,KAER,IAAIyM,EAAU,GACdA,EAAO,IAAAzP,OAAKsO,EAAL,KAAAtO,OAAuBiC,EAAvB,cAAAjC,OAAgDwQ,EAAhD,cAAoElO,EAC3E9E,aAAoBoD,MAAM8O,OAAOD,GAEnC/B,WAAW,WACTrP,EAAKqE,SAAS,CACZM,mBAAmB,EACnBC,iBAAkBE,EAAIE,SACtBf,SAAU,QAEX,MAziCcjE,EA8iCrBc,iBAAmB,SAACwQ,EAAOnR,GAAS,IAAAgX,EACoBnX,EAAKuE,MAAnD0L,EAD0BkH,EAC1BlH,eAAgBrM,EADUuT,EACVvT,aAAcqT,EADJE,EACIF,YAEhCvS,EADWuM,SAASe,cAAT,QAAArQ,OAA+BxB,EAAKsB,MACpBwQ,cAAcA,cAAcA,cAAcvQ,GAEvEyQ,EAAQ,GACRhT,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAsEiM,GAAG,QAAS,SAAAC,GAClFA,EAASsC,QAAQ,SAASC,GACtB,OAAOF,EAAQE,EAAcrC,MAAMhL,WAAaN,EAAkB2N,EAAc5Q,IAAM,SAG9F,IAAIrB,EAAU,GAMd,GALEjB,aAAoBoD,IAApB,GAAAZ,OAA2BsO,EAA3B,KAAAtO,OAA6CiC,EAA7C,cAAAjC,OAAsEwQ,EAAtE,mBAA6FG,aAAa,OAAOC,QAAQpS,EAAKsB,KAAKoO,GAAG,QAAS,SAAAC,GAC7IA,EAASsC,QAAQ,SAASC,GACxB,OAAOjS,EAAUiS,EAAc5Q,QAGpB,UAAd6P,EAAM7P,IAAiB,CACxB,GAAuB,kBAAbrB,EAKR,OAJAJ,EAAKqE,SAAS,CACZzD,eAAe,IAEjBT,EAAKA,KAAO8W,EACL,KAET,IAAI7F,EAAU,GACdA,EAAO,IAAAzP,OAAKsO,EAAL,KAAAtO,OAAuBiC,EAAvB,cAAAjC,OAAgDwQ,EAAhD,mBAAAxQ,OAAuEvB,EAAvE,UAAyFD,EAAKA,KAErGhB,aAAoBoD,MAAM8O,OAAOD,GAE/BpR,EAAKqE,SAAS,CACZzD,eAAe,EACfG,aAAc,GACdZ,KAAM,SA/kCOH,EAolCrBoN,YAAc,WACZjO,SAAgBiY,UAAUC,KAAK,WAC7BxX,KAAKwE,SAAS,CAAEiT,YAAY,MAC3BC,MAAM,SAAS9F,GAChB+F,QAAQC,IAAIhG,MAxlCKzR,EA6lCrByN,YAAc,SAAA6D,GACZ,IAAMpF,EAAiBoF,EAAM7P,IACP,KAAnByK,IACqB,aAAnBA,EACDlM,EAAKqE,SAAS,CACZ6H,iBACAxH,gBAAiB,8BACjBwF,SAAS,EACTtG,aAAc,GACdoD,UAAU,IAGZhH,EAAKqE,SAAS,CACZ6H,iBACAxH,gBAAiB,wBACjBwF,SAAS,EACTtG,aAAc,GACdoD,UAAU,EACVqD,YAAY,MA/mCCrK,EAsnCnB0X,sBAAwB,WAEtB,OAD2B1X,EAAKuE,MAAxB2H,gBAEN,IAAK,WACL,OAAOlL,EAAAC,EAAAC,cAACyW,EAAD,CACGvN,YAAapK,EAAKoK,YAClBf,WAAYrJ,EAAKqJ,WACjBa,QAASlK,EAAKuE,MAAM2F,QACpBpB,UAAW9I,EAAKuE,MAAMuE,UACtBlB,KAAM5H,EAAKuE,MAAMqD,KAEjBsD,UAAWlL,EAAKkL,UAChBvE,OAAQ3G,EAAK2G,OACbjG,cAAeV,EAAKU,cACpBiI,WAAY3I,EAAK2I,WACjBE,WAAY7I,EAAKuE,MAAMsE,WACvBwC,wBAAyBrL,EAAKqL,wBAC9BpC,OAAQjJ,EAAKiJ,OACbrF,aAAc5D,EAAKuE,MAAMX,aACzBD,KAAM3D,EAAKuE,MAAMZ,KACjB8B,qBAAsBzF,EAAKyF,qBAC3B5B,eAAgB7D,EAAKuE,MAAMV,eAC3BkD,QAAS/G,EAAKuE,MAAMwC,QACpBU,QAASzH,EAAKyH,QACdtH,KAAMH,EAAKuE,MAAMpE,KACjB2G,QAAS9G,EAAKuE,MAAMuC,QACpB2E,mBAAoBzL,EAAKyL,mBACzBtE,eAAgBnH,EAAKmH,eACrBH,SAAUhH,EAAKuE,MAAMyC,SACrBqB,aAAcrI,EAAKqI,aACnBc,aAAcnJ,EAAKuE,MAAM4E,eAEnC,IAAK,YACL,OAAOnI,EAAAC,EAAAC,cAAC0W,EAAD,CACG3N,YAAajK,EAAKuE,MAAM0F,YACxBZ,WAAYrJ,EAAKqJ,WACjBmB,gBAAiBxK,EAAKwK,gBACtBoI,WAAY5S,EAAK4S,WACjBzC,QAASnQ,EAAKuE,MAAM4L,QACpBxM,KAAM3D,EAAKuE,MAAMZ,KACjByG,YAAapK,EAAKoK,YAClBF,QAASlK,EAAKuE,MAAM2F,QACpBpB,UAAW9I,EAAKuE,MAAMuE,UACtBlB,KAAM5H,EAAKuE,MAAMqD,KAEjBjH,WAAYX,EAAKW,WACjBC,cAAeZ,EAAKuE,MAAM3D,cAC1BC,iBAAkBb,EAAKa,iBACvBC,iBAAkBd,EAAKc,iBACvBC,aAAcf,EAAKuE,MAAMxD,aACzB4F,OAAQ3G,EAAK2G,OACbjG,cAAeV,EAAKU,cACpBiI,WAAY3I,EAAK2I,WACjBE,WAAY7I,EAAKuE,MAAMsE,WACvB5C,cAAejG,EAAKiG,cACpBgD,OAAQjJ,EAAKiJ,OACb/B,kBAAmBlH,EAAKkH,kBACxBmD,WAAYrK,EAAKuE,MAAM8F,WACvB3F,gBAAiB1E,EAAKuE,MAAMG,gBAC5BqE,iBAAkB/I,EAAKuE,MAAMwE,iBAC7BlD,eAAgB7F,EAAK6F,eACrBjC,aAAc5D,EAAKuE,MAAMX,aACzBiU,mBAAoB7X,EAAKuE,MAAMsT,mBAC/BhU,eAAgB7D,EAAKuE,MAAMV,eAC3BkD,QAAS/G,EAAKuE,MAAMwC,QACpBU,QAASzH,EAAKyH,QACdtH,KAAMH,EAAKuE,MAAMpE,KACjBuH,aAAc1H,EAAK0H,aACnBZ,QAAS9G,EAAKuE,MAAMuC,QACpBvG,cAAeP,EAAKuE,MAAMhE,cAC1BC,YAAaR,EAAKQ,YAClB6H,aAAcrI,EAAKqI,aACnBrB,SAAUhH,EAAKuE,MAAMyC,SACrBG,eAAgBnH,EAAKmH,eACrBxB,gBAAiB3F,EAAK2F,gBACtBC,kBAAmB5F,EAAKuE,MAAMqB,kBAC9B6C,WAAYzI,EAAKyI,WACjBmB,cAAe5J,EAAK4J,cACpBE,OAAQ9J,EAAK8J,OACbP,aAAcvJ,EAAKuJ,aACnBJ,aAAcnJ,EAAKuE,MAAM4E,aACzB1E,UAAWzE,EAAKuE,MAAME,UACtB2B,UAAWpG,EAAKoG,UAChBX,qBAAsBzF,EAAKyF,qBAC3B4B,gBAAiBrH,EAAKqH,gBACtB3B,aAAc1F,EAAKuE,MAAMmB,aACzBf,kBAAmB3E,EAAKuE,MAAMI,kBAC9BV,SAAUjE,EAAKuE,MAAMN,SACrBW,iBAAkB5E,EAAKuE,MAAMK,iBAC7BQ,eAAgBpF,EAAKoF,eACrBG,qBAAsBvF,EAAKuF,qBAC3BV,qBAAsB7E,EAAK6E,uBAErC,IAAK,YACL,OAAO7D,EAAAC,EAAAC,cAAC4W,EAAD,CACC1N,YAAapK,EAAKoK,YAClBgC,KAAMpM,EAAKuE,MAAMoL,OACjBnD,iBAAkBxM,EAAKwM,iBACvB5E,KAAM5H,EAAKuE,MAAMqD,KACjB6E,2BAA4BzM,EAAKyM,2BACjC5I,eAAgB7D,EAAKuE,MAAMV,eAC3BwI,QAASrM,EAAKuE,MAAM8H,QACpBW,cAAehN,EAAKgN,cACpBE,oBAAqBlN,EAAKkN,oBAC1BZ,WAAYtM,EAAKuE,MAAM+H,WACvBnD,aAAcnJ,EAAKuE,MAAM4E,aACzB4D,eAAgB/M,EAAK+M,eACrBR,SAAUvM,EAAKuE,MAAMgI,SACrBhC,aAAcvK,EAAKuE,MAAMgG,aACzBuC,yBAA0B9M,EAAK8M,yBAC/BM,YAAapN,EAAKoN,cAE1B,QACA,OAAO,OAruCTjO,gBAAuB8W,GACnBjW,EAAKuE,MAAQ,CACT0F,YAAa,GACbtG,KAAM,GACNxD,KAAM,KACN8D,SAAU,KACVU,mBAAmB,EACnBC,iBAAkB,GAClB7D,aAAc,GACd8H,WAAY,GACZjF,aAAc,GACdsI,eAAgB,OAChBxH,gBAAuB,wBACvBqE,iBAAkB,EAClBuO,YAAY,EACZpN,SAAS,EACTtJ,eAAe,EACfuP,SAAS,EACTlH,QAAQ,EACRoB,YAAY,EACZ2M,aAAc,EACdlO,UAAW,KACXmO,YAAa,GACbY,oBAAoB,EACpBjQ,MAAM,EACN/D,gBAAgB,EAChB8L,OAAc,SACdtD,QAAS,GACTC,WAAY,GACZnD,cAAc,EACdqI,iBAAiB,EACjBvB,eAAgB,GAChB1D,SAAU,GACV2D,UAAW,GACX5P,MAAO,EACPsK,UAAW,EACXqI,UAAW,WACXH,WAAY,GACZpN,cAAc,EACdsB,UAAU,EACVvC,WAAW,EACXsC,SAAS,EACTxG,eAAe,EACfqF,mBAAmB,EACnBmS,UAAW,EACXhH,SAAU,EACVxG,cAAc,EACdzD,QAAS,EACT6J,QAAS,EACTiG,gBAAgB,GAEtB5W,EAAK2G,OAAS3G,EAAK2G,OAAOqR,KAAZ3U,OAAA4U,EAAA,EAAA5U,QAAA4U,EAAA,EAAA5U,CAAArD,KACdA,EAAK6F,eAAiB7F,EAAK6F,eAAemS,KAApB3U,OAAA4U,EAAA,EAAA5U,QAAA4U,EAAA,EAAA5U,CAAArD,KACtBA,EAAKiG,cAAgBjG,EAAKiG,cAAc+R,KAAnB3U,OAAA4U,EAAA,EAAA5U,QAAA4U,EAAA,EAAA5U,CAAArD,KACrBA,EAAKwK,gBAAkBxK,EAAKwK,gBAAgBwN,KAArB3U,OAAA4U,EAAA,EAAA5U,QAAA4U,EAAA,EAAA5U,CAAArD,KACvBA,EAAKoN,YAAcpN,EAAKoN,YAAY4K,KAAjB3U,OAAA4U,EAAA,EAAA5U,QAAA4U,EAAA,EAAA5U,CAAArD,KAzDJA,mFA2ED,IAAA4G,EAAA/G,KACVsQ,EAAYtQ,KAAK0E,MAAjB4L,QACNtQ,KAAKqY,uBAAyB/Y,SAAgBgZ,mBAC5C,SAAC/L,GACC,IAAGA,EAUD,OAAO,KATJ+D,GACDvJ,EAAK4I,YAAYpD,EAAKgM,KAExBxR,EAAKvC,SAAS,CACZiT,aAAclL,EACduD,OAAQvD,EAAKiM,YACbhM,QAASD,EAAKgM,QASxBvY,KAAK6Q,eACLvI,OAAOC,iBAAiB,SAAUvI,KAAK6Q,6DAIvCvI,OAAOG,oBAAoB,SAAUzI,KAAK6Q,cAC1C7Q,KAAKqY,0DAuoCH,OAAKrY,KAAK0E,MAAM+S,WAWbzX,KAAK0E,MAAM4L,QAEVnP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,KAAK,OAAOC,QAAQ,UACvBP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAMW,GAAI,CAAEX,KAAM,IAAKM,GAAG,QAC3DV,EAAAC,EAAAC,cAACoX,EAAD,MACAtX,EAAAC,EAAAC,cAAA,oCAOJF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,KAAK,OAAOC,QAAQ,eAAeG,GAAG,QACzCV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAMW,GAAI,CAAEX,KAAM,IAAMM,GAAG,WAC9DV,EAAAC,EAAAC,cAACqX,EAAA,EAAD,KACEvX,EAAAC,EAAAC,cAAC2M,GAAD,CACEnL,MAAO,CACL8F,QAAU3I,KAAK0E,MAAMuC,SAAW,IAAM,SAAW,MAEnD9F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,EAAGG,GAAI,GAEZlC,KAAK0E,MAAMuC,SAAW,IACtB9F,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,kBAAf,gBAEA,MAGJN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,GAAIG,GAAI,GACfW,MAAO,CACLwF,UAAYrI,KAAK0E,MAAMuC,SAAW,IAAM,QAAU,SAClD9D,SAAWnD,KAAK0E,MAAMuC,SAAW,IAAM,QAAU,UAGjD9F,EAAAC,EAAAC,cAACsX,EAAD,CACE/K,YAAa5N,KAAK4N,YAClBvB,eAAgBrM,KAAKqM,eACrByB,oBAAqB9N,KAAK0E,MAAM2H,mBAI1ClL,EAAAC,EAAAC,cAAC8M,GAAD,KAGkC,SAA9BnO,KAAK0E,MAAM2H,eACXlL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8E,SAAA,KACE/E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAM,GAAIM,GAAI7B,KAAK0E,MAAMuC,SAAW,IAAM,UAAY,YACzD9F,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMxB,KAAK,kBACXN,EAAAC,EAAAC,cAAA,2BAEFF,EAAAC,EAAAC,cAACuX,EAAD,CACEvM,eAAgBrM,KAAKqM,eACrBE,KAAMvM,KAAK0E,MAAMoL,OACjBoH,SAAUlX,KAAKkX,SACfC,YAAanX,KAAK0E,MAAMyS,YACxBpP,KAAM/H,KAAK0E,MAAMqD,QASrB/H,KAAK6X,yBAGL1W,EAAAC,EAAAC,cAAC6M,GAAD,KACE/M,EAAAC,EAAAC,cAAA,kCA5ERF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,KAAK,OAAOC,QAAQ,UACvBP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKS,GAAI,CAAER,KAAM,IAAMU,GAAI,CAAEV,KAAM,IAAKW,GAAI,CAAEX,KAAM,IAAMM,GAAG,aAC3DV,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAACwX,EAAAzX,EAAD,CAAoBuN,SAAU3O,KAAK2O,SAAUmK,aAAcxZ,oBAnvCrDgE,aCrBEyV,QACW,cAA7BzQ,OAAO0Q,SAASC,UAEe,UAA7B3Q,OAAO0Q,SAASC,UAEhB3Q,OAAO0Q,SAASC,SAASC,MACvB,8FCTNC,IAASC,OACLjY,EAAAC,EAAAC,cAACgY,GAAA,EAAD,CAAgBjU,OAAQkU,MACpBnY,EAAAC,EAAAC,cAACkY,GAAD,OAEFnI,SAASC,eAAe,SDoHxB,kBAAmBmI,WACrBA,UAAUC,cAAcC,MAAMlC,KAAK,SAAAmC,GACjCA,EAAaC","file":"static/js/main.c4049296.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/prochainement2.cbd80974.png\";","export default {\r\n    apiKey: \"AIzaSyASNdLHf9itHbMfni5KLun3kcA57LFgkFg\",\r\n    authDomain: \"check-list-course.firebaseapp.com\",\r\n    databaseURL: \"https://check-list-course.firebaseio.com\",\r\n    projectId: \"check-list-course\",\r\n    storageBucket: \"check-list-course.appspot.com\",\r\n    messagingSenderId: \"873680903792\"\r\n}","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport { Row, Col, Button, Icon, Badge, Input  } from 'antd';\r\n\r\nclass Item extends Component {\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.nameInput) {\r\n            this.nameInput.focus();\r\n        }\r\n    }\r\n    render() { \r\n        const { \r\n            item, itemKey, comment, count, \r\n            itemIsVisible, itemVisible, deleteItem, \r\n            toggleComment, changeItem, itemIsChanged, \r\n            handleChangeItem, valideChangeItem, itemSelected\r\n        } = this.props;\r\n        return ( \r\n            <Col span={24} >\r\n                <Row \r\n                    type=\"flex\" \r\n                    justify=\"space-between\" \r\n                    align=\"middle\"\r\n                    key={itemKey}\r\n                    id={`elt-${itemKey}`}\r\n                >\r\n                {\r\n                    itemIsChanged && itemSelected === itemKey ?\r\n                    <Col xs={12} sm={15} md={15} lg={18} onClick={changeItem} className={'ant-list-items-item'}>\r\n                        <Input \r\n                            type='text' \r\n                            value={item} \r\n                            placeholder='Modifier le produit' \r\n                            onChange={handleChangeItem} \r\n                            onKeyUp={valideChangeItem}\r\n                            ref={input => { this.nameInput = input }} \r\n                        />\r\n                    </Col>\r\n                    :\r\n                    <Col xs={12} sm={15} md={15} lg={18} onClick={changeItem} className={'ant-list-items-item'}>\r\n                        {item}\r\n                    </Col>\r\n                }\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                        <Button \r\n                            name=\"comment\" \r\n                            className='comment' \r\n                            style={{ background: 'transparent', border: 'none' }}\r\n                            type='primary'\r\n                            block\r\n                            onClick={toggleComment}>\r\n                            >\r\n                            {\r\n                                comment === '' && count === 0 ?\r\n                                <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                :\r\n                                <Badge status=\"success\">\r\n                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                </Badge>\r\n                            }\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                        <Button \r\n                            style={{ background: 'transparent' }}\r\n                            name=\"isVisible\" \r\n                            className=\"trash\"\r\n                            type='primary'\r\n                            block\r\n                            onClick={itemVisible}>\r\n                                {\r\n                                    itemIsVisible ?\r\n                                    <i className=\"far fa-eye\"></i>\r\n                                    :\r\n                                    <i className=\"far fa-eye-slash\"></i>\r\n                                }\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"trash\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={deleteItem}>\r\n                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                            </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Item;","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport Item from './Item'\r\n\r\nimport { List, Row, Col, Icon, Button, Drawer, Input } from 'antd';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrayData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.data !== this.props.data) {\r\n            this.renderData();\r\n        }\r\n        if(this.nameInput) {\r\n            this.nameInput.focus();\r\n        }\r\n        if(this.nameInput2) {\r\n            this.nameInput2.focus();\r\n        }\r\n        if(this.nameInput3) {\r\n            this.nameInput3.focus();\r\n        }\r\n    }\r\n\r\n    renderData = () => {\r\n        const { data, currentTitre, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? \r\n                Object.keys(data[item])\r\n                    .map(category => Object.keys(data[item][category])\r\n                        .map(categoryItem => arrayData.push(data[item][category][categoryItem])))\r\n                : null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        this.setState({ arrayData });\r\n    }\r\n\r\n    liste = () => {\r\n        const { arrayData } = this.state;\r\n        const { inputOpen, currentCategory, categoryIsChanged,\r\n                categorySelected, valideChangeCategory\r\n            } = this.props;\r\n        if(!arrayData) {\r\n            return null\r\n        }\r\n        return (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                name={`name-${elt.titreCat}`}\r\n                locale={{ emptyText: 'Veuillez ajouter un produit' }}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                    {\r\n                        categoryIsChanged && categorySelected === elt.key ?\r\n                        <Col xs={12} sm={15} lg={18} className='titreCat' onClick={() => this.props.changeCategory(elt)}>\r\n                            <Input\r\n                                type='text' \r\n                                id='myInput'\r\n                                maxLength={40}\r\n                                value={elt.titreCat} \r\n                                placeholder='Modifier la catégorie' \r\n                                onChange={e => this.props.handleChangeCategory(e, elt)} \r\n                                onKeyUp={e => valideChangeCategory(e, elt)}\r\n                                ref={input => { this.nameInput3 = input }} \r\n                            />\r\n                        </Col>\r\n                        :\r\n                        <Col xs={12} sm={15} lg={18} className='titreCat' onClick={() => this.props.changeCategory(elt)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    }\r\n                        <Col xs={4} sm={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"isVisible\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={() => this.props.checkCurrentCategory(elt.titreCat, elt.showCategory)}>\r\n                                {\r\n                                    elt.showCategory ?\r\n                                    <Icon type=\"caret-up\" />\r\n                                    :\r\n                                    <Icon type=\"caret-down\" />\r\n                                }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col xs={4} sm={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"isVisible\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={() => this.props.categoryVisible(elt)}>\r\n                                    {\r\n                                        elt.categoryIsVisible ?\r\n                                        <i className=\"far fa-eye\" style={{ color: 'aliceblue' }}/>\r\n                                        :\r\n                                        <i className=\"far fa-eye-slash\" style={{ color: 'aliceblue' }}/>\r\n                                    }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col xs={4} md={3} lg={2}>\r\n                            <Button \r\n                                name=\"trash\" \r\n                                className=\"trash\"\r\n                                block\r\n                                type='primary'\r\n                                onClick={() => this.props.deleteCategory(elt, id)}>\r\n                                <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                footer={\r\n                    <>\r\n                    {\r\n                        inputOpen && currentCategory === elt.titreCat ? \r\n                        <Row type=\"flex\" justify=\"center\" align='middle'>\r\n                            <form className='form form-titre' id='myForm' onSubmit={ e => this.props.createNewItem(e)}>\r\n                                <input \r\n                                    id='myInput' \r\n                                    type='text' \r\n                                    placeholder='Ajouter un produit'\r\n                                    maxLength={40} \r\n                                    autoFocus={true} \r\n                                    ref={input => { this.nameInput2 = input }} \r\n                                />\r\n                                <button type='submit' id='buttonSubmit'>\r\n                                    <Icon type=\"plus\" />\r\n                                </button>\r\n                            </form>\r\n                        </Row>\r\n                        :\r\n                        <Row \r\n                            type=\"flex\" \r\n                            justify=\"center\" \r\n                            align='middle' \r\n                            onClick={() => this.props.openInput(elt.titreCat)}\r\n                            >\r\n                            <p>Ajouter un produit</p>\r\n                        </Row>\r\n                    }\r\n                    </>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <>\r\n                    {\r\n                        elt.showCategory ?\r\n                        <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Item\r\n                                item={item.item}\r\n                                itemKey={item.key}\r\n                                comment={item.comment}\r\n                                count={item.count}\r\n                                itemIsVisible={item.itemIsVisible}\r\n                                itemIsChanged={this.props.itemIsChanged}\r\n                                itemSelected={this.props.itemSelected}\r\n\r\n                                handleChangeItem={e => this.props.handleChangeItem(e, item)}\r\n                                valideChangeItem={e => this.props.valideChangeItem(e, item)}\r\n                                changeItem={() => this.props.changeItem(item)}\r\n                                toggleComment={() => this.props.toggleComment(item)}\r\n                                itemVisible={() => this.props.itemVisible(item)}\r\n                                deleteItem={() => this.props.delete(item)}\r\n                            />\r\n                        </List.Item>\r\n                        :\r\n                        null\r\n                    }\r\n                    </>\r\n                    \r\n                    )}\r\n            />\r\n    \r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible, showForm } = this.props;\r\n        const { arrayData } = this.state;\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        return ( \r\n            <>\r\n            {\r\n                showForm ?\r\n                    <form className='form form-titre' id='myForm' onSubmit={ e => this.props.createNewCategory(e)}>\r\n                        <input \r\n                            id='myInput2'\r\n                            type='text' \r\n                            placeholder='Ajouter une catégorie'\r\n                            maxLength={40} \r\n                            autoFocus={true} \r\n                            ref={input => { this.nameInput = input }} \r\n                        />\r\n                        <button type='submit' id='buttonSubmit'>\r\n                            <Icon type=\"plus\" />\r\n                        </button>\r\n                    </form>\r\n                :\r\n                <>\r\n                <Row \r\n                    className='ant-list-footer addCategory' \r\n                    type=\"flex\" \r\n                    justify=\"center\" \r\n                    align='middle'\r\n                    onClick={this.props.showFormulaire}\r\n                    >\r\n                    <p>Ajouter une catégorie</p>\r\n                </Row>\r\n                {\r\n                    arrayData.length === 0 ?\r\n                    <Col xs={{ span: 6}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                        <Button block type=\"primary\" className='reload' onClick={this.props.loadListExemple}>\r\n                            <Icon type=\"download\" />\r\n                            Charger un exemple\r\n                        </Button>\r\n                    </Col>\r\n                    :\r\n                    null\r\n                }\r\n                </>\r\n            }\r\n            {this.liste()}\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContent(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, notification } from 'antd';\r\n\r\nimport ItemList from './ItemList';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Ajouter une catégorie',\r\n        description: \"Pour ajouter une catégorie, cliquez sur \\\"Ajouter une catégorie\\\" et écrivez le nom que vous désirez, par exemple \\\"Boissons\\\". Pour finaliser, cliquez sur le +.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Ajouter un produit',\r\n                description: \"Pour ajouter un produit, cliquez sur \\\"Ajouter un produit\\\" et écrivez le nom que vous désirez, par exemple \\\"Eau\\\". Pour finaliser, cliquez sur le +. Vous pouvez ajouter autant de produits que vous le désirez.\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                  onClose: () => {\r\n                    notification.open({\r\n                        message: 'Astuce!',\r\n                        description: \"Pour ajouter un produit dans une catégorie existente, cliquez sur le nom de la catégorie voulue, ensuite il vous suffit d'ajouter un produit.\",\r\n                        duration: 0,\r\n                        style: {\r\n                            textAlign: 'justify'\r\n                          }\r\n                      });\r\n                  }\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass MyLists extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n    \r\n    render() { \r\n        const { currentTitre } = this.props;\r\n        return ( \r\n            <Col onScroll={e => this.props.handleScroll(e)} className='containerList'>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                                <h3 className='titreListe'>\r\n                                    <i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>\r\n                                    {currentTitre}\r\n                                </h3>\r\n                            </Col>\r\n                            <Col xs={{ span: 6}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                                <Button block type=\"primary\" className='reload' onClick={this.props.reloadList}>\r\n                                    <Icon type=\"reload\" />\r\n                                </Button>\r\n                            </Col>\r\n                        </>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <ItemList\r\n                            data={this.props.data}\r\n                            changeItem={this.props.changeItem}\r\n                            itemIsChanged={this.props.itemIsChanged}\r\n                            handleChangeItem={this.props.handleChangeItem}\r\n                            valideChangeItem={this.props.valideChangeItem}\r\n                            itemSelected={this.props.itemSelected}\r\n                            delete={this.props.delete}\r\n                            toggleComment={this.props.toggleComment}\r\n                            addComment={this.props.addComment}\r\n                            titre={this.props.titreListe}\r\n                            indexItem={this.props.indexItem}\r\n                            numChildCategory={this.props.numChildCategory}\r\n                            deleteCategory={this.props.deleteCategory}\r\n                            currentTitre={this.props.currentTitre}\r\n                            inverseProduit={this.props.inverseProduit}\r\n                            visible={this.props.visible}\r\n                            onClose={this.props.onClose}\r\n                            item={this.props.item}\r\n                            modalContent={this.props.modalContent}\r\n                            largeur={this.props.largeur}\r\n                            itemIsVisible={this.props.itemIsVisible}\r\n                            itemVisible={this.props.itemVisible}\r\n                            categoryVisible={this.props.categoryVisible}\r\n                            categoryIsVisible={this.props.categoryIsVisible}\r\n                            createNewItem={this.props.createNewItem}\r\n                            inputOpen={this.props.inputOpen}\r\n                            openInput={this.props.openInput}\r\n                            currentCategory={this.props.currentCategory}\r\n                            showForm={this.props.showForm}\r\n                            createNewCategory={this.props.createNewCategory}\r\n                            showFormulaire={this.props.showFormulaire}\r\n                            checkCurrentCategory={this.props.checkCurrentCategory}\r\n                            loadListExemple={this.props.loadListExemple}\r\n                            showCategory={this.props.showCategory}\r\n                            categoryIsChanged={this.props.categoryIsChanged}\r\n                            category={this.props.category}\r\n                            categorySelected={this.props.categorySelected}\r\n                            changeCategory={this.props.changeCategory}\r\n                            handleChangeCategory={this.props.handleChangeCategory}\r\n                            valideChangeCategory={this.props.valideChangeCategory}\r\n                        />\r\n                    </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyLists;","import React, { Component } from 'react';\r\n\r\nimport MyLists from './MyLists';\r\n\r\nimport { Button, Icon, Col, notification, List, Popconfirm } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Créer une liste de course',\r\n        description: \"Pour créer une liste, il vous suffit simplement d'écrire son nom dans la case \\\"ajouter une liste\\\" et de cliquer sur le +. Ensuite cliquez sur le nom de votre liste qui vient d'apparaitre en dessous. Vous pouvez en créer maximum 3.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        // onClose: () => {\r\n        //   alert('clicked');\r\n        // },\r\n      });\r\n  };\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const { data, choixUserUid } = this.props;\r\n        const newData = [];\r\n        Object.keys(data).map(item => item !== 'user' ? newData.push(item) : null); //on enlève user des items\r\n            return (\r\n                <List\r\n                    bordered\r\n                    locale={{ emptyText: 'Veuillez créer une liste' }}\r\n                    dataSource={newData}\r\n                    renderItem={ (item, id) => (\r\n                        <>\r\n                        {\r\n                        item ?\r\n                            <>\r\n                            {\r\n                                choixUserUid ?\r\n                                <List.Item >\r\n                                    <Col span={24} key={id} className='listeDeBase'>  \r\n                                        <Col xs={{ span: 16 }} md={{ span: 18 }} lg={{ span: 20 }} key={`elt-${item}`} id={`id-${item}`} onClick={() => this.props.choixListe(item)}>\r\n                                            {item}\r\n                                        </Col>\r\n                                        <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                            <Button\r\n                                                size='large'\r\n                                                name=\"trash\" \r\n                                                type=\"primary\"\r\n                                                block \r\n                                                className=\"trash\"\r\n                                                onClick={() => this.props.changeLocked(data[item], item)}\r\n                                            >  \r\n                                            {\r\n                                                !data[item].locked ?\r\n                                                <Icon type=\"unlock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                :\r\n                                                <Icon type=\"lock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            }\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                            <Popconfirm title=\"Confirmer pour effacer\" onConfirm={() => this.props.confirmDelete(item)} onCancel={this.props.cancel} okText=\"Oui\" cancelText=\"Non\">\r\n                                                <Button\r\n                                                    size='large' \r\n                                                    name=\"trash\" \r\n                                                    type=\"primary\"\r\n                                                    block \r\n                                                    className=\"trash\"\r\n                                                >  \r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                </Button>\r\n                                            </Popconfirm>\r\n                                        </Col>\r\n                                    </Col>\r\n                                </List.Item>\r\n                                :\r\n                                <>\r\n                                    {\r\n                                        data[item].locked === false ?\r\n                                        <List.Item >\r\n                                            <Col span={24} key={id} className='listeDeBase'>  \r\n                                                <Col xs={{ span: 16 }} md={{ span: 18 }} lg={{ span: 20 }} key={`elt-${item}`} id={item} onClick={() => this.props.choixListe(item)}>\r\n                                                    {item}\r\n                                                </Col>\r\n                                                <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                                    <Button\r\n                                                        size='large' \r\n                                                        name=\"trash\" \r\n                                                        type=\"primary\"\r\n                                                        block \r\n                                                        className=\"trash\"\r\n                                                        // onClick={() => this.props.changeLocked(data[item], item)}\r\n                                                    >  \r\n                                                    {\r\n                                                        !data[item].locked ?\r\n                                                        <Icon type=\"unlock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                        :\r\n                                                        <Icon type=\"lock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                    }\r\n                                                    </Button>\r\n                                                </Col>\r\n                                                <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                                    <Popconfirm title=\"Confirmer pour effacer\" onConfirm={() => this.props.confirmDelete(item)} onCancel={this.props.cancel} okText=\"Oui\" cancelText=\"Non\">\r\n                                                        <Button\r\n                                                            size='large' \r\n                                                            name=\"trash\" \r\n                                                            type=\"primary\"\r\n                                                            block \r\n                                                            className=\"trash\"\r\n                                                        >  \r\n                                                            <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                        </Button>\r\n                                                    </Popconfirm>\r\n                                                </Col>\r\n                                            </Col>\r\n                                        </List.Item>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </>\r\n                            }\r\n                            </>\r\n                        \r\n                        :\r\n                        null\r\n                        }\r\n                        </>\r\n                    )}\r\n                />\r\n            )};\r\n        \r\n    render() {\r\n        const { listeDeBase, clicked } = this.props;\r\n        return (\r\n            <>\r\n            {\r\n            !clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    { \r\n                        listeDeBase.length >= 4 ?\r\n                        null\r\n                        :\r\n                        <form className='formulaire form-titre' onSubmit={e => this.props.addNewListTitre(e)}>\r\n                            <input type='text' id='form-input' placeholder='Ajouter une liste' maxLength={30}/>\r\n                            <button type='submit' id='myButtonSubmit'>+</button>\r\n                        </form>\r\n                    }\r\n                \r\n                    <Col>\r\n                        {this.liste()}\r\n                    </Col>\r\n                    <Col span={6} style={{ marginRight: '1em' }}>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </Col>\r\n                </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n                <MyLists\r\n                    currentTitre={this.props.currentTitre}\r\n                    createNewItem={this.props.createNewItem}\r\n                    data={this.props.data}\r\n                    changeItem={this.props.changeItem}\r\n                    itemIsChanged={this.props.itemIsChanged}\r\n                    handleChangeItem={this.props.handleChangeItem}\r\n                    valideChangeItem={this.props.valideChangeItem}\r\n                    itemSelected={this.props.itemSelected}\r\n                    delete={this.props.delete}\r\n                    toggleComment={this.props.toggleComment}\r\n                    addComment={this.props.addComment}\r\n                    titreListe={this.props.titreListe}\r\n                    returnToApp={this.props.returnToApp}\r\n                    goHome={this.props.goHome}\r\n                    indexItem={this.props.indexItem}\r\n                    createNewCategory={this.props.createNewCategory}\r\n                    isCategory={this.props.isCategory}\r\n                    numChildCategory={this.props.numChildCategory}\r\n                    deleteCategory={this.props.deleteCategory}\r\n                    toggleSwitchType={this.props.toggleSwitchType}\r\n                    help={this.props.help}\r\n                    inverseProduit={this.props.inverseProduit}\r\n                    visible={this.props.visible}\r\n                    onClose={this.props.onClose}\r\n                    item={this.props.item}\r\n                    modalContent={this.props.modalContent}\r\n                    largeur={this.props.largeur}\r\n                    itemIsVisible={this.props.itemIsVisible}\r\n                    itemVisible={this.props.itemVisible}\r\n                    handleScroll={this.props.handleScroll}\r\n                    followWindow={this.props.followWindow}\r\n                    showForm={this.props.showForm}\r\n                    showFormulaire={this.props.showFormulaire}\r\n                    currentCategory={this.props.currentCategory}\r\n                    categoryVisible={this.props.categoryVisible}\r\n                    categoryIsVisible={this.props.categoryIsVisible}\r\n                    reloadList={this.props.reloadList}\r\n                    inputOpen={this.props.inputOpen}\r\n                    openInput={this.props.openInput}\r\n                    checkCurrentCategory={this.props.checkCurrentCategory}\r\n                    loadListExemple={this.props.loadListExemple}\r\n                    showCategory={this.props.showCategory}\r\n                    categoryIsChanged={this.props.categoryIsChanged}\r\n                    category={this.props.category}\r\n                    categorySelected={this.props.categorySelected}\r\n                    changeCategory={this.props.changeCategory}\r\n                    handleChangeCategory={this.props.handleChangeCategory}\r\n                    valideChangeCategory={this.props.valideChangeCategory}\r\n                />\r\n            </Col>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => (\r\n    <ReactLoading \r\n    type=\"cylon\" \r\n    color=\"#078073\" \r\n    className=\"load\"\r\n    id=\"load\"\r\n    height={200}\r\n    width={200}\r\n    />\r\n)\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, List, Row, Badge, notification, Drawer  } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Astuce',\r\n        description: \"Lorsque vous faites vos courses, il suffit de cliquer sur un produit pour qu'il soit \\\"barré\\\" et \\\"grisé\\\".\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Astuce',\r\n                description: \"Vous ouvez rajouter un produit de dernière minute en l'ajoutant dans la case \\\"Entrez un produit\\\".\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n              });\r\n            }\r\n      });\r\n  };\r\nlet countItem = 0;\r\n\r\nclass EnCourseList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            count: 0,\r\n            arrayData: []\r\n         }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        this.renderData();\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.data !== this.props.data) {\r\n            this.renderData();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    //compteur de produits\r\n    countProduit = ( data, currentTitre ) => {\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? Object.keys(data[item])\r\n                .map(category => Object.keys(data[item][category])\r\n                    .map(categoryItem => data[item][category][categoryItem].categoryItems && data[item][category][categoryItem].categoryIsVisible ? arrayData.push(data[item][category][categoryItem]): null))\r\n            : null);\r\n        let countItemPos = [];\r\n        let countItemNeg = [];\r\n        let countTotal = [];\r\n        arrayData.map(elt => Object.keys(elt.categoryItems).map(item => countTotal.push(elt.categoryItems[item].checked)));\r\n        arrayData.map(elt => Object.keys(elt.categoryItems).map(item => elt.categoryItems[item].checked === false && elt.categoryItems[item].itemIsVisible ? countItemNeg.push(elt.categoryItems[item].checked): countItemPos.push(elt.categoryItems[item].checked)));\r\n        countItem = countTotal.length - countItemPos.length;\r\n    }\r\n\r\n    renderData = () => {\r\n        const { data, currentTitre, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? \r\n                Object.keys(data[item])\r\n                    .map(category => Object.keys(data[item][category])\r\n                        .map(categoryItem => arrayData.push(data[item][category][categoryItem])))\r\n                : null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        this.setState({ arrayData });\r\n    }\r\n\r\n    // création de la liste de produit et des catégories\r\n    liste = () => {\r\n        const { arrayData } = this.state;\r\n        if(!arrayData) {\r\n            return null\r\n        }\r\n        \r\n        return (arrayData || []).map((elt, id) =>\r\n        <div key={`key-${id}`}>\r\n        {\r\n            elt.categoryIsVisible ? // cache ou affiche une catégorie\r\n            <List\r\n                key={`titreCat-${elt.titreCat}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row id={`titreCat-${id}`} type=\"flex\" justify=\"space-between\" align='middle' style={{height: '2.5em'}}>\r\n                        <Col span={24} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat, elt.showCategory)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <>\r\n                    {\r\n                    item.itemIsVisible ? //cache ou affiche un produit\r\n                    <List.Item key={`listItemId-${item.key}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} key={`col24-${item.key}`}>\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={`elt-${item.key}`}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={20} sm={21} md={21} lg={22} key={`col20-${item.key}`} onClick={() => this.props.isChecked(item, arrayData)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2} key={`col4-${item.key}`}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' && item.count === 0 ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                    </List.Item>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                    )}\r\n            />\r\n            :\r\n            null\r\n        }\r\n        </div>\r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible, showForm, currentTitre, data } = this.props;\r\n        // width du drawer en fonction de la taille de l'écran\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        const positionY = window.scrollY;\r\n        this.countProduit(data, currentTitre);\r\n        return ( \r\n            <Col onScroll={ e => this.props.handleScroll(e) } className='containerList'>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                    {\r\n                        showForm ?\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                            </Col>\r\n                            \r\n                            <form id='myForm' className={showForm && positionY <= 80 ? 'formu formu-titre enCourse-formu-titre' : 'formu formu-titre enCourse-formu-titre fixedPosition'} onSubmit={this.props.createNewItemLastMinute}>\r\n                                <input type='text' placeholder='Produit de dernière minute' maxLength={40} />\r\n                                <button type='submit' id='buttonSubmit' onClick={this.props.showFormulaire}>\r\n                                    <Badge count={countItem} offset={[11, -30]} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}>\r\n                                        <Icon type=\"plus\" />\r\n                                    </Badge>\r\n                                </button>\r\n                            </form>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                            </Col>\r\n                            <Col xs={{ span: 12}} sm={{ span: 14}} md={{ span: 16}} lg={{ span: 18}}>\r\n                                <button type='button' className={!showForm && positionY <= 80 ? '' : 'fixedPosition'} id='buttonSubmit2' onClick={this.props.showFormulaire} >\r\n                                    <Badge count={countItem} offset={[5, -5]} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}>\r\n                                        <Icon type=\"edit\" style={{ fontSize: '2.5em' }}/>\r\n                                    </Badge>\r\n                                </button>\r\n                            </Col>\r\n                        </>\r\n                    }\r\n                    </Col>\r\n               <Col span={24}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={this.props.visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContentCourse(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseList;","import React, { Component } from 'react';\r\n\r\nimport { Col } from 'antd';\r\n\r\nclass EnCourseItem extends Component {\r\n    render() { \r\n        const { item, choixListe } = this.props;\r\n        return ( \r\n            <Col span={24} key={`key-${item}`} className='listeDeBaseEnCourse'>  \r\n                <Col xs={{ span: 20 }} md={{ span: 21 }} lg={{ span: 22 }} key={`elt-${item}`} id={`id-${item}`} onClick={choixListe}>\r\n                    {item}\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseItem;","import React, { Component } from 'react';\r\nimport { Button, Icon, Col, List } from 'antd';\r\n\r\nimport EnCourseList from './EnCourseList';\r\nimport EnCourseItem from './EnCourseItem';\r\n\r\nclass EnCourse extends Component {\r\n    liste = () => {\r\n        const { data, choixUserUid } = this.props;\r\n        const newData = [];\r\n        Object.keys(data).map(item => item !== 'user' ? newData.push(item) : null); //on enlève user des items\r\n        return ( \r\n            <List\r\n                bordered\r\n                locale={{ emptyText: 'Vous devez d\\'abord créer une liste avant de faire vos courses' }}\r\n                dataSource={newData}\r\n                renderItem={ (item, id) => (\r\n                    <>\r\n                    {\r\n                    item ?\r\n                    <>\r\n                    {\r\n                        choixUserUid ?\r\n                        <List.Item>\r\n                            <EnCourseItem\r\n                                item={item}\r\n                                choixListe={() => this.props.choixListe(item)}\r\n                            />\r\n                        </List.Item>\r\n                        :\r\n                        <>\r\n                        {\r\n                            data[item].locked === false ?\r\n                            <List.Item >\r\n                                <EnCourseItem\r\n                                    item={item}\r\n                                    choixListe={() => this.props.choixListe(item)}\r\n                                />\r\n                            </List.Item>\r\n                            :\r\n                            null\r\n                        }\r\n                        </>\r\n\r\n                    }\r\n                    </>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                </>\r\n                :\r\n                <Col span={24}>\r\n                    <EnCourseList\r\n                        currentTitre={this.props.currentTitre}\r\n                        createNewItemLastMinute={this.props.createNewItemLastMinute}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titreListe={this.props.titreListe}\r\n                        returnToApp={this.props.returnToApp}\r\n                        closeComment={this.props.closeComment}\r\n                        goHome={this.props.goHome}\r\n                        indexItem={this.props.indexItem}\r\n                        checkCurrentCategory={this.props.checkCurrentCategory}\r\n                        help={this.props.help}\r\n                        inverseProduit={this.props.inverseProduit}\r\n                        visible={this.props.visible}\r\n                        onClose={this.props.onClose}\r\n                        item={this.props.item}\r\n                        largeur={this.props.largeur}\r\n                        modalContentCourse={this.props.modalContentCourse}\r\n                        showFormulaire={this.props.showFormulaire}\r\n                        showForm={this.props.showForm}\r\n                        handleScroll={this.props.handleScroll}\r\n                        handleScrollButton={this.props.handleScrollButton}\r\n                    />\r\n                </Col>\r\n            }\r\n            \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourse;","import React, { Component } from 'react';\r\n\r\nimport '../NewApp.css';\r\n\r\nimport { Button, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Liste de course interactive',\r\n        description: \"Bienvenue sur votre application de liste de course. Pour commencer, veuillez cliquer sur \\\"créer une liste\\\". Si vous avez déjà créé une liste, cliquez sur \\\"En course\\\" lorsque vous faites vos course.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          }\r\n      });\r\n  };\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                        <Button \r\n                            style={{ margin : '1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='enCourse'\r\n                            onClick={this.props.choixComponent}\r\n                            >Faire ses courses\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='mesListes'\r\n                            onClick={this.props.choixComponent}\r\n                        >Créer une liste\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\" \r\n                            className='item-button'\r\n                            name='monProfil'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mon profil\r\n                        </Button>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Row, Col, notification, Switch } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Votre profil',\r\n        description: \"Bientôt vous aurez la possibilité de modifier votre profil et bien plus encore!\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Se connecter à un autre profil',\r\n                description: \"Il vous suffit de recopier l'identifiant de la liste que vous souhaitez rejoindre et de valider. Ensuite cliquez sur cette liste pour la rejoindre!\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                // onClose: () => {\r\n                //   alert('clicked');\r\n                // },\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass ProfilUser extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const { \r\n            user, help, inverseProduit, userUid, newUserUid, choixUserUid, linkName, followWindow,\r\n                toggleSwitchHelp, toggleSwitchInverseProduit \r\n            } = this.props;\r\n        return ( \r\n            <Col span={24}>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col  xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                    <h2>Bienvenue sur votre profil {user}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Aide : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={help === true ? true : false} onChange={toggleSwitchHelp} id='switchButtonHelp'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Inverser l'ordre des produits : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={inverseProduit === true ? true : false} onChange={toggleSwitchInverseProduit} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Case d'ajout de produit qui suit l'écran : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={followWindow === true ? true : false} onChange={this.props.toggleSwitchFollowWindow} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Votre identifiant : </b>{userUid}</span>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                        <Button block type={choixUserUid ? \"primary\" : \"default\"} name={userUid}  onClick={!choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                        {choixUserUid ? <span>Votre liste</span>: <span>Rejoindre votre liste</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <Button block type={choixUserUid ? \"default\" : \"primary\"} name={newUserUid} onClick={choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                            {choixUserUid ? <span>Rejoindre la liste de {linkName}</span>: <span>Liste de {linkName}</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Ajouter un identifiant : </b></span>\r\n                        <input type='text' placeholder='Entrez le nouvel identifiant' onChange={this.props.changeUserUid} required={true}/>\r\n                        <Button type=\"primary\" onClick={this.props.valideChangeUserUid} className='changeUid'>\r\n                            <Icon type=\"check\" />Valider\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 3, pull: 10 }} md={{ span: 3, pull: 10 }} lg={{ span: 3, pull: 10 }}>\r\n                        <Button type='primary' onClick={() => this.props.deconnexion()} style={{ borderRadius: '50px', width: '35px', height: '35px', marginLeft: '10px' }}>\r\n                            <Icon type=\"logout\" />\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row type='flex' justify='left'>\r\n                    <Col span={6}>\r\n                    <div className='button-anth'>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilUser;","import React, { Component } from 'react';\r\n\r\nimport { Menu, Icon } from 'antd';\r\n\r\nclass HeaderMenu extends Component {\r\n    render() { \r\n        return ( \r\n            <Menu\r\n            onClick={this.props.handleClick}\r\n            selectedKeys={[this.props.choixComponentState]}\r\n            mode=\"horizontal\"\r\n          >\r\n            <Menu.Item key=\"menu\">\r\n                <Icon type=\"home\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"mesListes\">\r\n                <Icon type=\"ordered-list\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"enCourse\">\r\n                <Icon type=\"shopping\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"monProfil\">\r\n                <Icon type=\"user\" />\r\n            </Menu.Item>\r\n          </Menu>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HeaderMenu;","import React, { Component } from 'react';\n// import './App.css';\nimport './NewApp.css';\nimport 'antd/dist/antd.css';\nimport './animations.css';\n\nimport * as firebase from 'firebase';\nimport config from './firebase';\n\n//ANT design\nimport { \n  Row, Col, Layout, Icon, message, Input, Slider, InputNumber, Select, Card, Avatar, Skeleton \n} from 'antd';\n\nimport Home from './Components/Home';\nimport Loading from './Components/Loading';\nimport EnCourse from './Components/EnCourse';\nimport Menu from './Components/Menu';\nimport ProfilUser from './Components/ProfilUser';\nimport HeaderMenu from './Components/HeaderMenu';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport prochainement from './img/prochainement2.png';\n\nconst {\n  Header, Footer, Content,\n} = Layout;\nconst { Meta } = Card;\n\nconst {TextArea} = Input;\nconst Option = Select.Option;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    firebase.initializeApp(config);\n        this.state = {\n            listeDeBase: [],\n            data: '',\n            item: null,\n            category: null,\n            categoryIsChanged: false,\n            categorySelected: '',\n            itemSelected: '',\n            titreListe: [],\n            currentTitre: '',\n            choixComponent: 'menu',\n            currentCategory: '' || 'Ma super catégorie',\n            numChildCategory: 0,\n            isSignedIn: false,\n            clicked: false,\n            itemIsChanged: false,\n            loading: true,\n            goHome: false,\n            isCategory: true,\n            clickedText : false,\n            indexItem: null,\n            currentItem: '',\n            isToggleSwitchType: false,\n            help: true,\n            inverseProduit: true,\n            userId: '' || 'Mikael',\n            userUid: '',\n            newUserUid: '',\n            choixUserUid: true,\n            changeUserInput: false,\n            currentUserUid: '',\n            linkName: '',\n            followers: [],\n            count: 0,\n            countItem: 0,\n            typeCount: 'unité',\n            newComment: '',\n            showCategory: true, // cache ou pas la catégorie avec hidden\n            showForm: false, //affiche ou non le form dans faire ses courses\n            inputOpen: false, // rend visible l'input du form\n            visible: false, //affiche le drawer\n            itemIsVisible: true, //affiche ou non l'item dans la liste de course\n            categoryIsVisible: true, //affiche ou non la catégorie dans la liste de course\n            totalItem: 0,\n            isScroll: 0,\n            followWindow: true,\n            largeur: 0,\n            hauteur: 0,\n            lastMinuteItem: false //verifie si un item a ete ajoute a la derniere minute\n        };\n      this.delete = this.delete.bind(this);\n      this.deleteCategory = this.deleteCategory.bind(this);\n      this.createNewItem = this.createNewItem.bind(this);\n      this.addNewListTitre = this.addNewListTitre.bind(this);\n      this.deconnexion = this.deconnexion.bind(this);\n}\n\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\ncomponentDidMount() {\n  const { loading } = this.state;\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        if(user) {\n          if(loading) {\n            this.getDataBase(user.uid);\n          }\n          this.setState({\n            isSignedIn: !!user, \n            userId: user.displayName,\n            userUid: user.uid\n          });\n        } else {\n          return null\n        }\n      }\n    );\n  \n  //détection du changement de taille d'écran\n  this.handleResize();\n  window.addEventListener('resize', this.handleResize);\n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('resize', this.handleResize); //on enlève l'évènement qui regarde la taille de la fenêtre\n  this.unregisterAuthObserver();\n}\n\n  animFormButton = button => {\n    button.classList.add('formButton-active');\n    setTimeout(() => {\n        button.classList.remove('formButton-active');\n    }, 500);\n  }\n\n  animFormElt = elt => {\n    elt.classList.add('message-enter');\n  }\n\n  getDataBase = myUser => {\n    const { userId, choixUserUid, newUserUid } = this.state;\n    const userUid = myUser || this.state.userUid;\n    const currentUser = choixUserUid ? userUid : newUserUid;\n    const ref = firebase.database().ref(`${currentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${userUid}/user/`).on('value', snapshot => {\n              this.setState({ \n                help: snapshot.val().help,\n                inverseProduit: snapshot.val().inverseProduit,\n                userUid: snapshot.val().userUid,\n                newUserUid: snapshot.val().newUserUid,\n                choixUserUid: snapshot.val().choixUserUid,\n                currentUserUid: snapshot.val().choixUserUid === true ? snapshot.val().userUid : snapshot.val().newUserUid,\n                linkName: snapshot.val().linkName,\n                followers: snapshot.val().followers,\n                followWindow: snapshot.val().followWindow\n               });\n               if(snapshot.val().choixUserUid) {\n                firebase.database().ref(`${currentUser}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               } else {\n                const newUserUid = snapshot.val().newUserUid;\n                firebase.database().ref(`${newUserUid}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               }\n            });\n            \n            } else {\n              firebase.database().ref(`${userUid}`).set({\n                user: {\n                  userName: userId,\n                  userUid: userUid,\n                  newUserUid: '',\n                  help: true,\n                  inverseProduit: true,\n                  choixUserUid: true,\n                  linkName: '',\n                  followers: [],\n                  followWindow: true\n                }\n              });\n              this.setState({\n                loading: false\n            });\n          }\n        });\n  }\n\n  //charger la database du compte sélectionné\n  getOtherDataBase = (linkName) => {\n    const curentUser = this.state.currentUserUid;\n    const user = this.state.userId;\n    const ref = firebase.database().ref(`${curentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${curentUser}/user`).on('value', snapshot => {\n              this.setState({ \n                linkName: snapshot.val().userName === user ? linkName : snapshot.val().userName  //probleme quand retour sur user d'origine\n               });\n            });\n            firebase.database().ref(`${curentUser}`).on('value', snapshot => {\n              Object.keys(snapshot.val()).map(item =>\n                listItem.push(item)\n              );\n                this.setState({\n                  listeDeBase: listItem,\n                  data: snapshot.val(),\n                  loading: false\n                  });\n              });\n            }\n        });\n        \n  }\n\n  adminAddList = () => {\n    const { data } = this.state;\n    const listeExemple = [];\n    Object.keys(data).map(item => item === 'Liste d\\'exemple' ? listeExemple.push(data[item]) : null);\n    firebase.database().ref('Liste-Exemple/').push(listeExemple);\n  }\n\n  showFormulaire = () => {\n    const showForm = !this.state.showForm;\n    \n    setTimeout(() => {\n      this.setState({ showForm });\n    }, 300);\n  }\n\n  //détecter la taille de la fenêtre\n  handleResize = () => this.setState({\n    hauteur: window.innerHeight,\n    largeur: window.innerWidth\n  });\n\n  // detection du scroll\n  handleScroll = () => {\n    const { followWindow, showForm } = this.state;\n    let isScroll = 0;\n    const formElt = showForm ? document.getElementById('myForm2') : document.getElementById('buttonSubmit2');\n    let lastPositionY = window.scrollY;\n    if(formElt && followWindow) {\n      if(isScroll !== lastPositionY && lastPositionY > 80) {\n        formElt.classList.add('opacity');\n        if(lastPositionY > 80) {\n          formElt.classList.add('fixedPosition');\n        }\n        setTimeout(() => {\n          isScroll = lastPositionY;\n          formElt.classList.remove('opacity');\n        }, 600);\n      }\n      if(lastPositionY <= 80) {\n        formElt.classList.remove('fixedPosition');\n      }\n    }\n}\n\n  // on ou off de l'aide\n  toggleSwitchHelp = checked => {\n    const { userUid } = this.state;\n    const help = checked;\n    this.setState({ help });\n    let updates = {};\n    updates[`${userUid}/user/help`] = !help;\n    return firebase.database().ref().update(updates);\n  }\n\n  // on ou off pour inverser l'ordre des produits\n  toggleSwitchInverseProduit = checked => {\n    const { userUid } = this.state;\n    const inverseProduit = checked;\n    this.setState({ inverseProduit });\n    let updates = {};\n    updates[`${userUid}/user/inverseProduit`] = !inverseProduit;\n    return firebase.database().ref().update(updates);\n  }\n\n  toggleSwitchFollowWindow = checked => {\n    const followWindow = checked;\n    this.setState({ followWindow });\n  }\n\n  // changer l'uid pour rejoindre une liste\n  changeUserUid = event => {\n    const newUserUid = event.target.value;\n    if(newUserUid.length > 20) {\n      this.setState({ \n        newUserUid, \n        changeUserInput: true \n      });\n    }\n  }\n\n  error = text => {\n    message.error(`${text}`);\n  };\n\n  //valider le changement de l'uid\n  valideChangeUserUid = () => {\n    const { newUserUid, changeUserInput, userUid, userId } = this.state;\n    const followers = [];\n    const message = 'Utilisateur trouvé!'\n    //on rajoute le nom du followers\n    followers.push(userId);\n    let updates = {};\n    if(newUserUid !== '' && changeUserInput) {\n      firebase.database().ref(`${newUserUid}/user/userName`).on('value', snapshot => {\n        if(snapshot.val()) {\n          this.setState({ \n            linkName: snapshot.val(),\n            followers,\n            changeUserInput: false\n          });\n          updates[`${userUid}/user/linkName`] = snapshot.val();\n          firebase.database().ref().update(updates);\n\n          updates[`${userUid}/user/newUserUid`] = newUserUid;\n          firebase.database().ref().update(updates);\n      \n          updates[`${newUserUid}/user/followers`] = followers;\n          firebase.database().ref().update(updates);\n\n          this.success(message);\n        } else {\n          this.error('Cet utilisateur n\\'existe pas');\n          return;\n        }\n      });\n    } else {\n      this.error('Erreur de saisie');\n    }\n  }\n\n  choisirUserUid = event => {\n    const { choixUserUid, userUid, linkName} = this.state;\n    this.setState({ \n      choixUserUid: !choixUserUid,\n      currentUserUid: event.target.name\n    });\n\n    const choixDB = !choixUserUid;\n    if(choixDB) {\n        this.getDataBase();\n    } else {\n        this.getOtherDataBase(linkName);\n    }\n\n    this.success('Liste chargée!');\n        this.setState({ \n          currentTitre: '',\n          clicked: false,\n          choixComponent: 'menu'\n        });\n\n    let updates = {};\n    updates[`${userUid}/user/choixUserUid`] = !choixUserUid;\n    firebase.database().ref().update(updates);\n  }\n\n  // compteur de produits dans une liste\n  countProduit = arrayData => {\n    let countItemPos = [];\n    let countItemNeg = [];\n    arrayData.map(elt => Object.keys(elt.categoryItems)\n      .map(item => elt.categoryItems[item].checked === false ? \n          countItemNeg.push(elt.categoryItems[item].checked)\n          : \n          countItemPos.push(elt.categoryItems[item].checked)));\n    this.setState({\n        countItem : countItemNeg.length - countItemPos.length\n    });\n}\n\n  // Regarde si un produit est checked\n  isChecked = item => {\n    const { currentUserUid, currentTitre, data } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const divElt = collapse.parentElement.parentElement.parentElement;\n    divElt.classList.toggle('flip');\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    item.checked = !item.checked;\n\n    this.setState({ data });\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n}\n  // Delete un produit\n  delete = item => {\n    const { currentUserUid, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const contentElt = collapse.parentElement.parentElement.parentElement.parentElement.childNodes;\n    \n    this.setState({ \n      indexItem: `elt-${item.item}`,\n      numChildCategory: contentElt.length\n  });\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    if(contentElt.length === 1) {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n        const indexCat = snapshot.key;\n          firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${indexCat}`).remove();\n      });\n      setTimeout(() => {\n        this.setState({ indexItem: null});\n      }, 50);\n    } else {\n        firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n          snapshot.forEach(function(childSnapshot){\n            const indexItem = childSnapshot.key;\n              firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${indexItem}`).remove();\n          });\n        });\n        setTimeout(() => {\n          this.setState({ indexItem: null});\n        }, 50);\n    }\n  }\n\n  // delete une catégorie\n  deleteCategory = (item, id) => {\n    const user = this.state.currentUserUid;\n    const collapse = document.getElementById(item.titreCat);\n    const currentTitre = this.state.currentTitre;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === collapse.id ? childSnapshot.key : null;\n      });\n    });\n\n    firebase.database().ref(`${user}/${currentTitre}/category/${index}`).remove();\n    \n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 50);\n  }\n\n  deleteList = (item) => {\n    const { currentUserUid } = this.state;\n    this.setState({ indexItem: `elt-${item}` });\n\n    firebase.database().ref(`${currentUserUid}/${item}`).remove();\n\n    setTimeout(() => {\n      this.setState({ indexItem: null });\n    }, 50);\n    \n  }\n\n  confirmDelete = item => {\n    this.setState({ clicked: false });\n    this.deleteList(item);\n    message.success('Liste effacée');\n  }\n\n  cancel = e => {\n      message.error('Action annulée');\n    }\n\n  onChangeComment = (event, item) => {\n    const newComment = event.target.value;\n    item.comment = newComment;\n    this.setState({\n      item,\n      newComment\n    });\n  }\n\n  onChangeCount = (value, item) => {\n    const count = value;\n    item.count = value;\n    this.setState({\n      count,\n      item\n    });\n  }\n\n  onChangeTypeCount = (value, item) => {\n    const typeCount = value;\n    item.typeCount = value;\n    this.setState({\n      typeCount,\n      item\n    });\n  }\n\n  modalContent = item => {\n    const { count, largeur, typeCount } = this.state;\n    return (\n      <>\n        <Row gutter={largeur > 720 ? 12 : 8}>\n          <Col span={ largeur > 720 ? 14 : 24 }>\n            <Slider\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              onChange={e => this.onChangeCount(e, item)}\n              value={typeof count === 'number' ? count : 0}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <InputNumber\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              style={{ marginLeft: 16, width: '90%', fontSize: '16px' }}\n              value={count}\n              onChange={e => this.onChangeCount(e, item)}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <Select defaultValue={typeCount} onChange={e => this.onChangeTypeCount(e, item)} style={{ width: '90%' }}>\n              <Option value='unité'>{count <= 1 ? 'unité' : 'unités'}</Option>\n              <Option value='boite'>{count <= 1 ? 'boite' : 'boites'}</Option>\n              <Option value='litre'>{count <= 1 ? 'litre' : 'litres'}</Option>\n              <Option value='ml'>ml</Option>\n              <Option value='cl'>cl</Option>\n              <Option value='Kilo'>{count <= 1 ? 'kilo' : 'kilos'}</Option>\n              <Option value='Gramme'>{count <= 1 ? 'gramme' : 'grammes'}</Option>\n            </Select>\n          </Col>\n        </Row>\n        <TextArea \n          placeholder='ajouter un commentaire' \n          autosize={{ minRows: 5, maxRows: 10 }} \n          onChange={e => this.onChangeComment(e, item)}\n          value={item.comment} \n          rows={10}\n          cols={largeur > 720 ? 50 : 30}\n          autoFocus\n          autoComplete='on'\n          style={{ marginTop: '1em', ontSize: '16px' }}\n          onPressEnter={event => this.onClose(event, item)}\n        />\n      </>\n    )\n  }\n\n  modalContentCourse = item => {\n    const { count, largeur } = this.state;\n    const image = (\n        <Skeleton paragraph={{ rows: 4, width: ['90%', '90%','90%','90%'] }} title={false}>\n          <img alt=\"prochainement\" src={prochainement} />\n        </Skeleton>\n    )\n    return(\n        <Card\n          style={{ width: largeur > 720 ? '70%' : '90%', paddingTop: '1em'}}\n          cover={image}\n        >\n          <Meta\n            avatar={<Avatar style={{ backgroundColor: '#009688' }} icon=\"user\" />}\n            title={item.item}\n          />\n            <br/>\n            {\n              count ?\n              <>\n              <h4>Quantité</h4>\n              <p>{item.count} {item.typeCount}{count <= 1 ? '': 's'}</p>\n              </>\n              :\n              null\n            }\n            {\n              item.comment ?\n              <>\n                <h4>Commentaire</h4>\n                <p>{item.comment}</p>\n              </>\n              :\n              <>\n                <h4>Commentaire</h4>\n                <p>Rien ici!</p>\n              </>\n            }\n        </Card>\n    )\n  }\n\n  //faire apparaitre/disparaitre la commentaire\n  toggleComment = item => {\n    this.setState({ \n      visible: true,\n      item,\n      count: item.count,\n      typeCount: item.typeCount,\n    });\n  }\n\n  onClose = (event, item) => {\n    this.addComment(event, item);\n    this.setState({\n      visible: false,\n      count: 0,\n      typeCount: 'unité',\n    });\n  };\n\n  // Ajouter un commentaire à un élément de la liste\n  addComment = (event, items) => {\n    event.preventDefault();\n    const { currentUserUid, item, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${items.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(items.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  //remettre la liste a zéro (check)\n  reloadList = () => {\n    const { currentTitre, data, currentUserUid } = this.state;\n    const arrayData = [];\n    Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\n    arrayData.map(elt => Object.keys(elt.categoryItems)\n      .map(item => elt.categoryItems[item].checked === true ? \n        elt.categoryItems[item].checked = false : null));\n\n    this.setState({ data });\n\n    let updates = {};\n    updates[`/${currentUserUid}`] = data;\n  \n    return firebase.database().ref().update(updates);\n  }\n\n  //rendre une liste privée\n  changeLocked = (item, title) => {\n    const { currentUserUid } = this.state;\n    item.locked = !item.locked;\n\n    let updates = {};\n    updates[`/${currentUserUid}/${title}/`] = item;      \n    return firebase.database().ref().update(updates);\n  }\n\n  //cache ou non une catégorie\n  categoryVisible = elt => {\n  const { currentUserUid, currentTitre } = this.state;\n  const currentCategory = elt.titreCat;\n\n  elt.categoryIsVisible = !elt.categoryIsVisible;\n\n  let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/`] = elt;\n          \n  return firebase.database().ref().update(updates);\n  }\n\n  itemVisible = item => {\n    const { currentUserUid, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    item.itemIsVisible = !item.itemIsVisible;\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n          \n  return firebase.database().ref().update(updates);\n  }\n\n  // Créer une catégorie dans la liste de course\n  createNewCategory = event => {\n    event.preventDefault();\n    const { currentUserUid, currentTitre, currentCategory, choixComponent } = this.state;\n    const formInput = document.querySelector('#myForm>input');\n    const todoFormButton = document.querySelector('#myForm>button');\n    let category = '';\n    if(currentCategory === 'Ajout de dernière minute' && choixComponent === 'enCourse') {\n      category = 'Ajout de dernière minute';\n    } else {\n      const cat = formInput.value;\n      category = cat.charAt(0).toUpperCase() + cat.substring(1).toLowerCase();\n    }\n    \n    if(formInput.value === '') {\n      this.setState({ \n        showForm: false\n      });\n      return null\n    }\n    const timestamp = Date.now();\n    //insérer une catégorie sans exemple de produit!\n    const data = {\n      titreCat: category,\n      categoryIsVisible: true,\n      key: timestamp,\n      showCategory: true\n    }\n    //on regarde si la catégorie existe déjà\n    let categoryExist = false;\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot) {\n        return categoryExist = childSnapshot.val().titreCat === category ? true : false;\n      });\n    });\n    //si la catégorie n'existe pas, on la push dans la bdd\n    if(!categoryExist) {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).push({\n        ...data\n      });\n      this.setState({\n        currentCategory: category,\n        isCategory: false,\n        showForm: false\n      });\n      this.animFormButton(todoFormButton);\n    } else { // si elle existe message d'alerte\n      this.error('Cette catégorie existe déjà!');\n    }\n    formInput.value = '';\n  }\n\n  //message qui annonce la catégorie sélectionnée\n  success = text => {\n    message.config({\n      top: 90,\n      duration: 2\n    });\n    message.success(`${text}`);\n  };\n\n  // on ouvre le formulaire\n  openInput = titre => {\n    const currentCategory = titre;\n    this.setState({ \n      inputOpen: true,\n      currentCategory\n    });\n  }\n\n  // Créer un élément de liste de course\n  createNewItem = event => {\n    event.preventDefault();\n    const { currentUserUid, currentCategory, currentTitre } = this.state;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const dataElt = todoFormInput.value;\n    const newData = dataElt.charAt(0).toUpperCase() + dataElt.substring(1).toLowerCase();\n\n    if(todoFormInput.value === '') {\n      this.setState({ \n        inputOpen: false\n      });\n      return null\n    }\n\n    if(currentCategory === 'Ma super catégorie') {\n      this.createNewCategory(event);\n      return null;\n    }\n\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n    this.setState({ inputOpen: false });\n  }\n\n  // Ajout d'un titre de liste de course\n  addNewListTitre = event => {\n    event.preventDefault();\n    const { currentUserUid } = this.state;\n    const formInput = document.querySelector('#form-input');\n    const todoFormButton = document.querySelector('#myButtonSubmit');\n    const titre = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n\n    this.setState(prevState => ({\n      listeDeBase: [...prevState.listeDeBase, titre],\n      isCategory: true\n    }));\n\n    firebase.database().ref(`${currentUserUid}/${titre}`).set({\n      locked: false\n    });\n\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n  }\n\n  // Détecte quelle liste à été choisie\n  choixListe = title => {\n    this.setState({\n      currentTitre: title,\n      clicked: true\n    });\n  }\n\n  // En Course --------> Check toute la catégorie\n  checkCurrentCategory = (titreCat, showCategory) => {\n    const { choixComponent, currentTitre, currentUserUid } = this.state;\n    const titre = document.getElementById(titreCat);\n    if(!titreCat) {\n      return null\n    } else {\n      if(choixComponent === 'enCourse') {\n        titre.lastChild.firstChild.classList.toggle('hidden');\n      } else {\n        // titre.lastChild.firstChild.classList.toggle('hidden');\n        // titre.children[1].classList.toggle('hidden');\n      }\n      //on cherche l'index de la catégorie selectionnée\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === titreCat ? childSnapshot.key : null;\n        });\n      });\n      let updates = {};\n      updates[`/${currentUserUid}/${currentTitre}/category/${index}/showCategory`] = !showCategory;   \n      firebase.database().ref().update(updates);\n    }\n  }\n\n  // EN COURSE --------> Crée un item dans la catégorie derniere minute\n  createNewItemLastMinute = event => {\n    event.preventDefault();\n    const todoFormInput = document.querySelector('.formu>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    if(!newData) {\n      return\n    }\n    const { currentUserUid, currentCategory, currentTitre, lastMinuteItem } = this.state;\n    const timestamp = Date.now();\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    //on regarde si la catégorie existe déjà pour ne pas en recréer une identique\n    let hasTitreCat = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n         return hasTitreCat = childSnapshot.val().titreCat === 'Ajout de dernière minute';\n      });\n    });\n\n    if(currentCategory === 'Ajout de dernière minute' && !lastMinuteItem && !hasTitreCat) {\n      this.createNewCategory(event);\n      this.setState({ lastMinuteItem: true });\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n    this.setState({ showForm: false });\n  }\n\n  // charger une liste d'exemple\n  loadListExemple = () => {\n    const { currentTitre, currentUserUid } = this.state;\n    firebase.database().ref('Liste-Exemple/-LY14-nVOqZIM_Cn9Ma6/0/').on('value', snapshot => {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/`).set(snapshot.val().category);\n    });\n  }\n\n  // utilisé sur bouton pour retour en arrière\n  goHome = () => {\n    this.setState({ clicked: false, isCategory: true });\n  }\n\n  // retour au menu de l'accueil\n  returnToApp = () => {\n    this.setState({ choixComponent: 'menu' });\n  }\n\n  // détecte le composant choisi à l'accueil\n  choixComponent = event => {\n    const choixComponent = event.target.name;\n    if(choixComponent !== '') {\n      if(choixComponent === 'enCourse') {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ajout de dernière minute',\n          showForm: false\n        });\n      } else {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ma super catégorie',\n          showForm: false\n        });\n      }\n    }\n  }\n\n  hideText = () => {\n    const clickedText = this.state.clickedText;\n    this.setState({ clickedText : !clickedText });\n}\n\n//changer le texte d'un produit\nchangeItem = item => {\n  this.setState({ \n    itemIsChanged: true,\n    itemSelected: item.key,\n    categoryIsChanged: false,\n    currentItem: item.item\n  });\n}\n\n//changer le texte d'une catégorie\nchangeCategory = elt => {\n  this.setState({\n    categoryIsChanged: true,\n    categorySelected: elt.key,\n    currentCategory: elt.titreCat\n   });\n}\n\n//on capture le changement categorie\nhandleChangeCategory = (event, elt) => {\n  elt.titreCat = event.target.value;\n  this.setState({ category: elt.titreCat });\n}\n\n//on capture le changement produit\nhandleChangeItem = (event, item) => {\n  item.item = event.target.value;\n  this.setState({ item });\n}\n\n//on valide le changement de catégorie\nvalideChangeCategory = (event, elt) => {\n  const { currentUserUid, currentTitre, currentCategory } = this.state;\n  let category = this.state.category;\n  //on cherche l'index de la catégorie selectionnée\n  let index = '';\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n        return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n    });\n  });\n  if(event.key === 'Enter') {\n    //on regarde si la catégorie existe déjà\n    let categoryExist = false;\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot) {\n        return categoryExist = childSnapshot.val().titreCat === category ? true : false;\n      });\n    });\n    //si la catégorie n'existe pas, on la push dans la bdd\n    if(categoryExist || category === null) {\n      this.error(categoryExist ? 'Cette catégorie existe déjà!' : 'Pas de changement');\n      category = currentCategory;\n      elt.titreCat = currentCategory;\n      this.setState({ \n        categoryIsChanged: false,\n       });\n       return null;\n    } else { // si elle existe message d'alerte\n      let updates = {};\n      updates[`/${currentUserUid}/${currentTitre}/category/${index}/titreCat`] = category;   \n      firebase.database().ref().update(updates);\n    }\n    setTimeout(() => {\n      this.setState({\n        categoryIsChanged: false,\n        categorySelected: elt.titreCat,\n        category: null\n       });\n    }, 50);\n  }\n}\n\n// on valide le changement du produit\nvalideChangeItem = (event, item) => {\n  const { currentUserUid, currentTitre, currentItem } = this.state;\n  const collapse = document.querySelector(`#elt-${item.key}`);\n  const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n  let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n  let itemKey = {};\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n        return itemKey = childSnapshot.key;\n      });\n    });\n  if(event.key === 'Enter') {\n    if(typeof(itemKey) !== 'string' ) {\n      this.setState({ \n        itemIsChanged: false\n      });\n      item.item = currentItem;\n      return null;\n    }\n    let updates = {};\n    updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}/item`] = item.item;\n            \n    firebase.database().ref().update(updates);\n\n      this.setState({ \n        itemIsChanged: false,\n        itemSelected: '',\n        item: null  \n      });\n  }\n}\n\ndeconnexion = () => {\n  firebase.auth().signOut().then(function() {\n    this.setState({ isSignedIn: false });\n  }).catch(function(error) {\n    console.log(error);\n  });\n}\n\n//choix composant via headermenu\nhandleClick = event => {\n  const choixComponent = event.key;\n  if(choixComponent !== '') {\n    if(choixComponent === 'enCourse') {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ajout de dernière minute',\n        clicked: false,\n        currentTitre: '',\n        showForm: false\n      });\n    } else {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ma super catégorie',\n        clicked: false,\n        currentTitre: '',\n        showForm: false,\n        isCategory: true\n      });\n    }\n  }\n}\n\n  //renvoie dans le render le composent choisit\n  renderChoiseConponent = () => {\n    const { choixComponent } = this.state;\n    switch(choixComponent) {\n      case 'enCourse':\n      return <EnCourse\n                returnToApp={this.returnToApp}\n                choixListe={this.choixListe}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                createNewItemLastMinute={this.createNewItemLastMinute}\n                goHome={this.goHome}\n                currentTitre={this.state.currentTitre}\n                data={this.state.data}\n                checkCurrentCategory={this.checkCurrentCategory}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                largeur={this.state.largeur}\n                modalContentCourse={this.modalContentCourse}\n                showFormulaire={this.showFormulaire}\n                showForm={this.state.showForm}\n                handleScroll={this.handleScroll}\n                choixUserUid={this.state.choixUserUid}\n              />\n      case 'mesListes':\n      return <Home\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                addNewListTitre={this.addNewListTitre}\n                deleteList={this.deleteList}\n                loading={this.state.loading}\n                data={this.state.data}\n                returnToApp={this.returnToApp}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                changeItem={this.changeItem}\n                itemIsChanged={this.state.itemIsChanged}\n                handleChangeItem={this.handleChangeItem}\n                valideChangeItem={this.valideChangeItem}\n                itemSelected={this.state.itemSelected}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                createNewCategory={this.createNewCategory}\n                isCategory={this.state.isCategory}\n                currentCategory={this.state.currentCategory}\n                numChildCategory={this.state.numChildCategory}\n                deleteCategory={this.deleteCategory}\n                currentTitre={this.state.currentTitre}\n                isToggleSwitchType={this.state.isToggleSwitchType}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                modalContent={this.modalContent}\n                largeur={this.state.largeur}\n                itemIsVisible={this.state.itemIsVisible}\n                itemVisible={this.itemVisible}\n                handleScroll={this.handleScroll}\n                showForm={this.state.showForm}\n                showFormulaire={this.showFormulaire}\n                categoryVisible={this.categoryVisible}\n                categoryIsVisible={this.state.categoryIsVisible}\n                reloadList={this.reloadList}\n                confirmDelete={this.confirmDelete}\n                cancel={this.cancel}\n                changeLocked={this.changeLocked}\n                choixUserUid={this.state.choixUserUid}\n                inputOpen={this.state.inputOpen}\n                openInput={this.openInput}\n                checkCurrentCategory={this.checkCurrentCategory}\n                loadListExemple={this.loadListExemple}\n                showCategory={this.state.showCategory}\n                categoryIsChanged={this.state.categoryIsChanged}\n                category={this.state.category}\n                categorySelected={this.state.categorySelected}\n                changeCategory={this.changeCategory}\n                handleChangeCategory={this.handleChangeCategory}\n                valideChangeCategory={this.valideChangeCategory}\n              />\n      case 'monProfil':\n      return <ProfilUser\n              returnToApp={this.returnToApp}\n              user={this.state.userId}\n              toggleSwitchHelp={this.toggleSwitchHelp}\n              help={this.state.help}\n              toggleSwitchInverseProduit={this.toggleSwitchInverseProduit}\n              inverseProduit={this.state.inverseProduit}\n              userUid={this.state.userUid}\n              changeUserUid={this.changeUserUid}\n              valideChangeUserUid={this.valideChangeUserUid}\n              newUserUid={this.state.newUserUid}\n              choixUserUid={this.state.choixUserUid}\n              choisirUserUid={this.choisirUserUid}\n              linkName={this.state.linkName}\n              followWindow={this.state.followWindow}\n              toggleSwitchFollowWindow={this.toggleSwitchFollowWindow}\n              deconnexion={this.deconnexion}\n              />\n      default:\n      return null\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14}} lg={{ span: 10 }} id='connexion'>\n            <h1>Check-Course</h1>\n            <p>Veuillez vous connecter svp:</p>\n            <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n          </Col>\n        </Row>\n      );\n    }\n    if(this.state.loading) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14 }} lg={{ span: 10}} id='load'>\n            <Loading/>\n            <h3>Chargement du caddie</h3>\n          </Col>\n        </Row>\n      )\n    }\n    \n    return (\n        <Row type=\"flex\" justify=\"space-around\" id='main'>\n          <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} id='mainCol' >\n          <Layout>\n            <Header \n              style={{ \n                padding : this.state.largeur >= 480 ? '0 50px' : '0'\n              }}>\n              <Col xs={0} lg={4}>\n                {\n                  this.state.largeur >= 480 ? \n                  <h4><Icon type=\"shopping-cart\" />Check-Course</h4>\n                  :\n                  null\n                }\n              </Col>\n              <Col xs={24} lg={20} \n                style={{\n                  textAlign : this.state.largeur >= 480 ? 'right' : 'center',\n                  fontSize : this.state.largeur >= 480 ? '0.9em' : '0.7em'\n                }}\n              >\n                  <HeaderMenu\n                    handleClick={this.handleClick}\n                    choixComponent={this.choixComponent}\n                    choixComponentState={this.state.choixComponent}\n                  />\n              </Col>\n            </Header>\n          <Content>\n            \n            {\n              this.state.choixComponent === 'menu' ?\n              <>\n                <Col span={24} id={this.state.largeur >= 480 ? 'bckLogo' : 'bckLogo2'}>\n                  <Icon type=\"shopping-cart\" />\n                  <h2>CHECK-COURSE</h2>\n                </Col>\n                <Menu\n                  choixComponent={this.choixComponent}\n                  user={this.state.userId}\n                  hideText={this.hideText}\n                  clickedText={this.state.clickedText}\n                  help={this.state.help}\n                />\n                {\n                // Ligne a mettre en commentaire quand pas utilisé\n                // this.adminAddList() // envoie une liste d'exemple dans la bdd\n                // Ligne a mettre en commentaire quand pas utilisé\n                }\n              </>\n              :\n              this.renderChoiseConponent()\n            }\n            </Content>\n              <Footer>\n                <p>Created By Mikael</p>\n              </Footer>\n            </Layout>\n            </Col>\n          </Row>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { LocaleProvider } from 'antd';\nimport fr_FR from 'antd/lib/locale-provider/fr_FR';\n\nReactDOM.render(\n    <LocaleProvider locale={fr_FR}>\n        <App />\n    </LocaleProvider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}