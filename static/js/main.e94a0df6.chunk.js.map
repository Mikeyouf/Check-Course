{"version":3,"sources":["img/prochainement2.png","firebase.js","Components/Item.js","Components/ItemList.js","Components/MyLists.js","Components/Home.js","Components/Loading.js","Components/EnCourseList.js","Components/EnCourseItem.js","Components/EnCourse.js","Components/Menu.js","Components/ProfilUser.js","Components/HeaderMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Item","_this$props","this","props","item","itemKey","comment","count","itemIsVisible","itemVisible","deleteItem","toggleComment","isChecked","react_default","a","createElement","col","span","row","type","justify","align","key","id","concat","xs","sm","md","lg","onClick","className","es_button","name","style","background","border","block","icon","color","fontSize","badge","status","Component","ItemList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderData","data","currentTitre","inverseProduit","arrayData","keys","map","category","categoryItem","push","reverse","setState","liste","state","_this$props2","inputOpen","currentCategory","elt","list","titreCat","locale","emptyText","header","checkCurrentCategory","categoryVisible","categoryIsVisible","deleteCategory","footer","Fragment","onSubmit","e","createNewItem","placeholder","maxLength","autoFocus","ref","input","nameInput2","openInput","bordered","dataSource","categoryItems","renderItem","checked","Components_Item","delete","prevProps","prevState","nameInput","console","log","focus","_this2","_this$props3","largeur","visible","showForm","drawerWidth","createNewCategory","showFormulaire","length","loadListExemple","drawer","placement","width","onClose","modalContent","MyLists","help","notification","open","message","description","duration","textAlign","window","addEventListener","handleScroll","removeEventListener","onScroll","padding","reloadList","Components_ItemList","addComment","titre","titreListe","indexItem","numChildCategory","marginRight","goHome","Home","choixUserUid","newData","choixListe","size","changeLocked","locked","popconfirm","title","onConfirm","confirmDelete","onCancel","cancel","okText","cancelText","listeDeBase","clicked","Components_MyLists","returnToApp","isCategory","toggleSwitchType","followWindow","addNewListTitre","Loading","react_loading_default","height","countItem","EnCourseList","countProduit","countItemPos","countItemNeg","countTotal","positionY","scrollY","createNewItemLastMinute","offset","backgroundColor","boxShadow","modalContentCourse","EnCourseItem","EnCourse","Components_EnCourseItem","Components_EnCourseList","closeComment","handleScrollButton","Menu","margin","choixComponent","ProfilUser","user","userUid","newUserUid","linkName","toggleSwitchHelp","toggleSwitchInverseProduit","marginBottom","es_switch","checkedChildren","unCheckedChildren","onChange","toggleSwitchFollowWindow","choisirUserUid","changeUserUid","required","valideChangeUserUid","pull","deconnexion","borderRadius","marginLeft","HeaderMenu","menu","handleClick","selectedKeys","choixComponentState","mode","Header","Layout","Footer","Content","Meta","Card","TextArea","Input","Option","Select","App","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","animFormButton","button","classList","add","setTimeout","remove","animFormElt","getDataBase","myUser","_this$state","userId","currentUser","on","snapshot","listItem","val","currentUserUid","followers","loading","set","userName","getOtherDataBase","curentUser","handleResize","hauteur","innerHeight","innerWidth","_this$state2","isScroll","formElt","document","getElementById","lastPositionY","updates","update","event","target","value","changeUserInput","error","text","_this$state3","success","_this$state4","_this$state5","collapse","querySelector","parentElement","toggle","index","forEach","childSnapshot","orderByChild","equalTo","_this$state6","contentElt","childNodes","indexCat","deleteList","onChangeComment","newComment","onChangeCount","onChangeTypeCount","typeCount","_this$state7","gutter","slider","min","max","input_number","es_select","defaultValue","autosize","minRows","maxRows","rows","cols","autoComplete","marginTop","ontSize","onPressEnter","_this$state8","image","skeleton","paragraph","alt","src","prochainement","card","paddingTop","cover","avatar","items","preventDefault","_this$state9","_this$state10","_this$state11","_this$state12","_this$state13","formInput","todoFormButton","cat","charAt","toUpperCase","substring","toLowerCase","categoryExist","objectSpread","config","top","_this$state14","timestamp","Date","now","todoFormInput","dataElt","show","toConsumableArray","lastChild","firstChild","children","_this$state15","lastMinuteItem","hasTitreCat","_this$state16","hideText","clickedText","signOut","then","isSignedIn","catch","renderChoiseConponent","Components_EnCourse","Components_Home","isToggleSwitchType","Components_ProfilUser","totalItem","bind","assertThisInitialized","unregisterAuthObserver","onAuthStateChanged","uid","displayName","Components_Loading","layout","Components_HeaderMenu","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Boolean","location","hostname","match","ReactDOM","render","locale_provider","fr_FR","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e94a0df6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/prochainement2.cbd80974.png\";","export default {\r\n    apiKey: \"AIzaSyASNdLHf9itHbMfni5KLun3kcA57LFgkFg\",\r\n    authDomain: \"check-list-course.firebaseapp.com\",\r\n    databaseURL: \"https://check-list-course.firebaseio.com\",\r\n    projectId: \"check-list-course\",\r\n    storageBucket: \"check-list-course.appspot.com\",\r\n    messagingSenderId: \"873680903792\"\r\n}","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport { Row, Col, Button, Icon, Badge  } from 'antd';\r\n\r\nclass Item extends Component {\r\n    render() { \r\n        const { item, itemKey, comment, count, itemIsVisible, itemVisible, deleteItem, toggleComment, isChecked } = this.props;\r\n        return ( \r\n            <Col span={24} >\r\n                <Row \r\n                    type=\"flex\" \r\n                    justify=\"space-between\" \r\n                    align=\"middle\"\r\n                    key={itemKey}\r\n                    id={`elt-${itemKey}`}\r\n                >\r\n                    <Col xs={12} sm={15} md={15} lg={18} onClick={isChecked} className={'ant-list-items-item'}>\r\n                        {item}\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                        <Button \r\n                            name=\"comment\" \r\n                            className='comment' \r\n                            style={{ background: 'transparent', border: 'none' }}\r\n                            type='primary'\r\n                            block\r\n                            onClick={toggleComment}>\r\n                            >\r\n                            {\r\n                                comment === '' && count === 0 ?\r\n                                <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                :\r\n                                <Badge status=\"success\">\r\n                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                </Badge>\r\n                            }\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                        <Button \r\n                            style={{ background: 'transparent' }}\r\n                            name=\"isVisible\" \r\n                            className=\"trash\"\r\n                            type='primary'\r\n                            block\r\n                            onClick={itemVisible}>\r\n                                {\r\n                                    itemIsVisible ?\r\n                                    <i className=\"far fa-eye\"></i>\r\n                                    :\r\n                                    <i className=\"far fa-eye-slash\"></i>\r\n                                }\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"trash\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={deleteItem}>\r\n                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                            </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Item;","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport Item from './Item'\r\n\r\nimport { List, Row, Col, Icon, Button, Drawer } from 'antd';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrayData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.data !== this.props.data) {\r\n            this.renderData();\r\n        }\r\n        if(this.nameInput) {\r\n            console.log(this.nameInput);\r\n            this.nameInput.focus();\r\n        }\r\n        if(this.nameInput2) {\r\n            console.log(this.nameInput2);\r\n            this.nameInput2.focus();\r\n        }\r\n    }\r\n\r\n    renderData = () => {\r\n        const { data, currentTitre, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? \r\n                Object.keys(data[item])\r\n                    .map(category => Object.keys(data[item][category])\r\n                        .map(categoryItem => arrayData.push(data[item][category][categoryItem])))\r\n                : null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        this.setState({ arrayData });\r\n    }\r\n\r\n    liste = () => {\r\n        const { arrayData } = this.state;\r\n        const { inputOpen, currentCategory } = this.props;\r\n        if(!arrayData) {\r\n            return null\r\n        }\r\n        return (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                locale={{ emptyText: 'Veuillez ajouter un produit' }}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                        <Col xs={16} md={18} lg={20} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                        <Col xs={4} sm={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"isVisible\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={() => this.props.categoryVisible(elt)}>\r\n                                    {\r\n                                        elt.categoryIsVisible ?\r\n                                        <i className=\"far fa-eye\" style={{ color: 'aliceblue' }}/>\r\n                                        :\r\n                                        <i className=\"far fa-eye-slash\" style={{ color: 'aliceblue' }}/>\r\n                                    }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col xs={4} md={3} lg={2}>\r\n                            <Button \r\n                                name=\"trash\" \r\n                                className=\"trash\"\r\n                                block\r\n                                type='primary'\r\n                                onClick={() => this.props.deleteCategory(elt, id)}>\r\n                                <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                footer={\r\n                    <>\r\n                    {\r\n                        inputOpen && currentCategory === elt.titreCat ? \r\n                        <Row type=\"flex\" justify=\"center\" align='middle'>\r\n                            <form className='form form-titre' id='myForm' onSubmit={ e => this.props.createNewItem(e)}>\r\n                                <input \r\n                                    id='myInput' \r\n                                    type='text' \r\n                                    placeholder='Ajouter un produit'\r\n                                    maxLength={40} \r\n                                    autoFocus={true} \r\n                                    ref={input => { this.nameInput2 = input }} \r\n                                />\r\n                                <button type='submit' id='buttonSubmit'>\r\n                                    <Icon type=\"plus\" />\r\n                                </button>\r\n                            </form>\r\n                        </Row>\r\n                        :\r\n                        <Row \r\n                            type=\"flex\" \r\n                            justify=\"center\" \r\n                            align='middle' \r\n                            onClick={() => this.props.openInput(elt.titreCat)}\r\n                            >\r\n                            <p>Ajouter un produit</p>\r\n                        </Row>\r\n                    }\r\n                    </>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                        <Item\r\n                            item={item.item}\r\n                            itemKey={item.key}\r\n                            comment={item.comment}\r\n                            count={item.count}\r\n                            itemIsVisible={item.itemIsVisible}\r\n\r\n                            isChecked={() => this.props.isChecked(item)}\r\n                            toggleComment={() => this.props.toggleComment(item)}\r\n                            itemVisible={() => this.props.itemVisible(item)}\r\n                            deleteItem={() => this.props.delete(item)}\r\n                        />\r\n                    </List.Item>\r\n                    )}\r\n            />\r\n    \r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible, showForm } = this.props;\r\n        const { arrayData } = this.state;\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        return ( \r\n            <>\r\n            {\r\n                showForm ?\r\n                    <form className='form form-titre' id='myForm' onSubmit={ e => this.props.createNewCategory(e)}>\r\n                        <input \r\n                            id='myInput2'\r\n                            type='text' \r\n                            placeholder='Ajouter une catégorie'\r\n                            maxLength={40} \r\n                            autoFocus={true} \r\n                            ref={input => { this.nameInput = input }} \r\n                        />\r\n                        <button type='submit' id='buttonSubmit'>\r\n                            <Icon type=\"plus\" />\r\n                        </button>\r\n                    </form>\r\n                :\r\n                <>\r\n                <Row \r\n                    className='ant-list-footer addCategory' \r\n                    type=\"flex\" \r\n                    justify=\"center\" \r\n                    align='middle'\r\n                    onClick={this.props.showFormulaire}\r\n                    >\r\n                    <p>Ajouter une catégorie</p>\r\n                </Row>\r\n                {\r\n                    arrayData.length === 0 ?\r\n                    <Col xs={{ span: 6}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                        <Button block type=\"primary\" className='reload' onClick={this.props.loadListExemple}>\r\n                            <Icon type=\"download\" />\r\n                            Charger un exemple\r\n                        </Button>\r\n                    </Col>\r\n                    :\r\n                    null\r\n                }\r\n                </>\r\n            }\r\n            {this.liste()}\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContent(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, notification } from 'antd';\r\n\r\nimport ItemList from './ItemList';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Ajouter une catégorie',\r\n        description: \"Pour ajouter une catégorie, cliquez sur \\\"Ajouter une catégorie\\\" et écrivez le nom que vous désirez, par exemple \\\"Boissons\\\". Pour finaliser, cliquez sur le +.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Ajouter un produit',\r\n                description: \"Pour ajouter un produit, cliquez sur \\\"Ajouter un produit\\\" et écrivez le nom que vous désirez, par exemple \\\"Eau\\\". Pour finaliser, cliquez sur le +. Vous pouvez ajouter autant de produits que vous le désirez.\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                  onClose: () => {\r\n                    notification.open({\r\n                        message: 'Astuce!',\r\n                        description: \"Pour ajouter un produit dans une catégorie existente, cliquez sur le nom de la catégorie voulue, ensuite il vous suffit d'ajouter un produit.\",\r\n                        duration: 0,\r\n                        style: {\r\n                            textAlign: 'justify'\r\n                          }\r\n                      });\r\n                  }\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass MyLists extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n    \r\n    render() { \r\n        const { currentTitre } = this.props;\r\n        return ( \r\n            <Col onScroll={e => this.props.handleScroll(e)} className='containerList'>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                                <h3 className='titreListe'>\r\n                                    <i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>\r\n                                    {currentTitre}\r\n                                </h3>\r\n                            </Col>\r\n                            <Col xs={{ span: 6}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                                <Button block type=\"primary\" className='reload' onClick={this.props.reloadList}>\r\n                                    <Icon type=\"reload\" />\r\n                                </Button>\r\n                            </Col>\r\n                        </>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <ItemList\r\n                            data={this.props.data}\r\n                            isChecked={this.props.isChecked}\r\n                            delete={this.props.delete}\r\n                            toggleComment={this.props.toggleComment}\r\n                            addComment={this.props.addComment}\r\n                            titre={this.props.titreListe}\r\n                            indexItem={this.props.indexItem}\r\n                            numChildCategory={this.props.numChildCategory}\r\n                            deleteCategory={this.props.deleteCategory}\r\n                            currentTitre={this.props.currentTitre}\r\n                            inverseProduit={this.props.inverseProduit}\r\n                            visible={this.props.visible}\r\n                            onClose={this.props.onClose}\r\n                            item={this.props.item}\r\n                            modalContent={this.props.modalContent}\r\n                            largeur={this.props.largeur}\r\n                            itemIsVisible={this.props.itemIsVisible}\r\n                            itemVisible={this.props.itemVisible}\r\n                            categoryVisible={this.props.categoryVisible}\r\n                            categoryIsVisible={this.props.categoryIsVisible}\r\n                            createNewItem={this.props.createNewItem}\r\n                            inputOpen={this.props.inputOpen}\r\n                            openInput={this.props.openInput}\r\n                            currentCategory={this.props.currentCategory}\r\n                            showForm={this.props.showForm}\r\n                            createNewCategory={this.props.createNewCategory}\r\n                            showFormulaire={this.props.showFormulaire}\r\n                            checkCurrentCategory={this.props.checkCurrentCategory}\r\n                            loadListExemple={this.props.loadListExemple}\r\n                        />\r\n                    </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyLists;","import React, { Component } from 'react';\r\n\r\nimport MyLists from './MyLists';\r\n\r\nimport { Button, Icon, Col, notification, List, Popconfirm } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Créer une liste de course',\r\n        description: \"Pour créer une liste, il vous suffit simplement d'écrire son nom dans la case \\\"ajouter une liste\\\" et de cliquer sur le +. Ensuite cliquez sur le nom de votre liste qui vient d'apparaitre en dessous. Vous pouvez en créer maximum 3.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        // onClose: () => {\r\n        //   alert('clicked');\r\n        // },\r\n      });\r\n  };\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const { data, choixUserUid } = this.props;\r\n        const newData = [];\r\n        Object.keys(data).map(item => item !== 'user' ? newData.push(item) : null); //on enlève user des items\r\n            return (\r\n                <List\r\n                    bordered\r\n                    locale={{ emptyText: 'Veuillez créer une liste' }}\r\n                    dataSource={newData}\r\n                    renderItem={ (item, id) => (\r\n                        <>\r\n                        {\r\n                        item ?\r\n                            <>\r\n                            {\r\n                                choixUserUid ?\r\n                                <List.Item >\r\n                                    <Col span={24} key={id} className='listeDeBase'>  \r\n                                        <Col xs={{ span: 16 }} md={{ span: 18 }} lg={{ span: 20 }} key={`elt-${item}`} id={`id-${item}`} onClick={() => this.props.choixListe(item)}>\r\n                                            {item}\r\n                                        </Col>\r\n                                        <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                            <Button\r\n                                                size='large'\r\n                                                name=\"trash\" \r\n                                                type=\"primary\"\r\n                                                block \r\n                                                className=\"trash\"\r\n                                                onClick={() => this.props.changeLocked(data[item], item)}\r\n                                            >  \r\n                                            {\r\n                                                !data[item].locked ?\r\n                                                <Icon type=\"unlock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                :\r\n                                                <Icon type=\"lock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            }\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                            <Popconfirm title=\"Confirmer pour effacer\" onConfirm={() => this.props.confirmDelete(item)} onCancel={this.props.cancel} okText=\"Oui\" cancelText=\"Non\">\r\n                                                <Button\r\n                                                    size='large' \r\n                                                    name=\"trash\" \r\n                                                    type=\"primary\"\r\n                                                    block \r\n                                                    className=\"trash\"\r\n                                                >  \r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                </Button>\r\n                                            </Popconfirm>\r\n                                        </Col>\r\n                                    </Col>\r\n                                </List.Item>\r\n                                :\r\n                                <>\r\n                                    {\r\n                                        data[item].locked === false ?\r\n                                        <List.Item >\r\n                                            <Col span={24} key={id} className='listeDeBase'>  \r\n                                                <Col xs={{ span: 16 }} md={{ span: 18 }} lg={{ span: 20 }} key={`elt-${item}`} id={item} onClick={() => this.props.choixListe(item)}>\r\n                                                    {item}\r\n                                                </Col>\r\n                                                <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                                    <Button\r\n                                                        size='large' \r\n                                                        name=\"trash\" \r\n                                                        type=\"primary\"\r\n                                                        block \r\n                                                        className=\"trash\"\r\n                                                        // onClick={() => this.props.changeLocked(data[item], item)}\r\n                                                    >  \r\n                                                    {\r\n                                                        !data[item].locked ?\r\n                                                        <Icon type=\"unlock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                        :\r\n                                                        <Icon type=\"lock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                    }\r\n                                                    </Button>\r\n                                                </Col>\r\n                                                <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                                    <Popconfirm title=\"Confirmer pour effacer\" onConfirm={() => this.props.confirmDelete(item)} onCancel={this.props.cancel} okText=\"Oui\" cancelText=\"Non\">\r\n                                                        <Button\r\n                                                            size='large' \r\n                                                            name=\"trash\" \r\n                                                            type=\"primary\"\r\n                                                            block \r\n                                                            className=\"trash\"\r\n                                                        >  \r\n                                                            <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                        </Button>\r\n                                                    </Popconfirm>\r\n                                                </Col>\r\n                                            </Col>\r\n                                        </List.Item>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </>\r\n                            }\r\n                            </>\r\n                        \r\n                        :\r\n                        null\r\n                        }\r\n                        </>\r\n                    )}\r\n                />\r\n            )};\r\n        \r\n    render() {\r\n        const { listeDeBase, clicked } = this.props;\r\n        return (\r\n            <>\r\n            {\r\n            !clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    { \r\n                        listeDeBase.length >= 4 ?\r\n                        null\r\n                        :\r\n                        <form className='formulaire form-titre' onSubmit={e => this.props.addNewListTitre(e)}>\r\n                            <input type='text' id='form-input' placeholder='Ajouter une liste' maxLength={30}/>\r\n                            <button type='submit' id='myButtonSubmit'>+</button>\r\n                        </form>\r\n                    }\r\n                \r\n                    <Col>\r\n                        {this.liste()}\r\n                    </Col>\r\n                    <Col span={6} style={{ marginRight: '1em' }}>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </Col>\r\n                </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n                <MyLists\r\n                    currentTitre={this.props.currentTitre}\r\n                    createNewItem={this.props.createNewItem}\r\n                    data={this.props.data}\r\n                    isChecked={this.props.isChecked}\r\n                    delete={this.props.delete}\r\n                    toggleComment={this.props.toggleComment}\r\n                    addComment={this.props.addComment}\r\n                    titreListe={this.props.titreListe}\r\n                    returnToApp={this.props.returnToApp}\r\n                    goHome={this.props.goHome}\r\n                    indexItem={this.props.indexItem}\r\n                    createNewCategory={this.props.createNewCategory}\r\n                    isCategory={this.props.isCategory}\r\n                    numChildCategory={this.props.numChildCategory}\r\n                    deleteCategory={this.props.deleteCategory}\r\n                    toggleSwitchType={this.props.toggleSwitchType}\r\n                    help={this.props.help}\r\n                    inverseProduit={this.props.inverseProduit}\r\n                    visible={this.props.visible}\r\n                    onClose={this.props.onClose}\r\n                    item={this.props.item}\r\n                    modalContent={this.props.modalContent}\r\n                    largeur={this.props.largeur}\r\n                    itemIsVisible={this.props.itemIsVisible}\r\n                    itemVisible={this.props.itemVisible}\r\n                    handleScroll={this.props.handleScroll}\r\n                    followWindow={this.props.followWindow}\r\n                    showForm={this.props.showForm}\r\n                    showFormulaire={this.props.showFormulaire}\r\n                    currentCategory={this.props.currentCategory}\r\n                    categoryVisible={this.props.categoryVisible}\r\n                    categoryIsVisible={this.props.categoryIsVisible}\r\n                    reloadList={this.props.reloadList}\r\n                    inputOpen={this.props.inputOpen}\r\n                    openInput={this.props.openInput}\r\n                    checkCurrentCategory={this.props.checkCurrentCategory}\r\n                    loadListExemple={this.props.loadListExemple}\r\n                />\r\n            </Col>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => (\r\n    <ReactLoading \r\n    type=\"cylon\" \r\n    color=\"#078073\" \r\n    className=\"load\"\r\n    id=\"load\"\r\n    height={200}\r\n    width={200}\r\n    />\r\n)\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, List, Row, Badge, notification, Drawer  } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Astuce',\r\n        description: \"Lorsque vous faites vos courses, il suffit de cliquer sur un produit pour qu'il soit \\\"barré\\\" et \\\"grisé\\\".\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Astuce',\r\n                description: \"Vous ouvez rajouter un produit de dernière minute en l'ajoutant dans la case \\\"Entrez un produit\\\".\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n              });\r\n            }\r\n      });\r\n  };\r\nlet countItem = 0;\r\n\r\nclass EnCourseList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            count: 0,\r\n            arrayData: []\r\n         }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        this.renderData();\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.data !== this.props.data) {\r\n            this.renderData();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    //compteur de produits\r\n    countProduit = ( data, currentTitre ) => {\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? Object.keys(data[item])\r\n                .map(category => Object.keys(data[item][category])\r\n                    .map(categoryItem => data[item][category][categoryItem].categoryItems && data[item][category][categoryItem].categoryIsVisible ? arrayData.push(data[item][category][categoryItem]): null))\r\n            : null);\r\n        let countItemPos = [];\r\n        let countItemNeg = [];\r\n        let countTotal = [];\r\n        arrayData.map(elt => Object.keys(elt.categoryItems).map(item => countTotal.push(elt.categoryItems[item].checked)));\r\n        arrayData.map(elt => Object.keys(elt.categoryItems).map(item => elt.categoryItems[item].checked === false && elt.categoryItems[item].itemIsVisible ? countItemNeg.push(elt.categoryItems[item].checked): countItemPos.push(elt.categoryItems[item].checked)));\r\n        countItem = countTotal.length - countItemPos.length;\r\n    }\r\n\r\n    renderData = () => {\r\n        const { data, currentTitre, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? \r\n                Object.keys(data[item])\r\n                    .map(category => Object.keys(data[item][category])\r\n                        .map(categoryItem => arrayData.push(data[item][category][categoryItem])))\r\n                : null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        this.setState({ arrayData });\r\n    }\r\n\r\n    // création de la liste de produit et des catégories\r\n    liste = () => {\r\n        const { arrayData } = this.state;\r\n        if(!arrayData) {\r\n            return null\r\n        }\r\n        \r\n        return (arrayData || []).map((elt, id) =>\r\n        <div key={`key-${id}`}>\r\n        {\r\n            elt.categoryIsVisible ? // cache ou affiche une catégorie\r\n            <List\r\n                key={`titreCat-${elt.titreCat}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row id={`titreCat-${id}`} type=\"flex\" justify=\"space-between\" align='middle' style={{height: '2.5em'}}>\r\n                        <Col span={24} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <>\r\n                    {\r\n                    item.itemIsVisible ? //cache ou affiche un produit\r\n                    <List.Item key={`listItemId-${item.key}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} key={`col24-${item.key}`}>\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={`elt-${item.key}`}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={20} sm={21} md={21} lg={22} key={`col20-${item.key}`} onClick={() => this.props.isChecked(item, arrayData)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2} key={`col4-${item.key}`}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' && item.count === 0 ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                    </List.Item>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                    )}\r\n            />\r\n            :\r\n            null\r\n        }\r\n        </div>\r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible, showForm, currentTitre, data } = this.props;\r\n        // width du drawer en fonction de la taille de l'écran\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        const positionY = window.scrollY;\r\n        this.countProduit(data, currentTitre);\r\n        return ( \r\n            <Col onScroll={ e => this.props.handleScroll(e) } className='containerList'>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                    {\r\n                        showForm ?\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                            </Col>\r\n                            \r\n                            <form id='myForm' className={showForm && positionY <= 80 ? 'formu formu-titre enCourse-formu-titre' : 'formu formu-titre enCourse-formu-titre fixedPosition'} onSubmit={this.props.createNewItemLastMinute}>\r\n                                <input type='text' placeholder='Produit de dernière minute' maxLength={40} />\r\n                                <button type='submit' id='buttonSubmit' onClick={this.props.showFormulaire}>\r\n                                    <Badge count={countItem} offset={[11, -30]} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}>\r\n                                        <Icon type=\"plus\" />\r\n                                    </Badge>\r\n                                </button>\r\n                            </form>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                            </Col>\r\n                            <Col xs={{ span: 12}} sm={{ span: 14}} md={{ span: 16}} lg={{ span: 18}}>\r\n                                <button type='button' className={!showForm && positionY <= 80 ? '' : 'fixedPosition'} id='buttonSubmit2' onClick={this.props.showFormulaire} >\r\n                                    <Badge count={countItem} offset={[5, -5]} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}>\r\n                                        <Icon type=\"edit\" style={{ fontSize: '2.5em' }}/>\r\n                                    </Badge>\r\n                                </button>\r\n                            </Col>\r\n                        </>\r\n                    }\r\n                    </Col>\r\n               <Col span={24}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={this.props.visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContentCourse(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseList;","import React, { Component } from 'react';\r\n\r\nimport { Col } from 'antd';\r\n\r\nclass EnCourseItem extends Component {\r\n    render() { \r\n        const { item, choixListe } = this.props;\r\n        return ( \r\n            <Col span={24} key={`key-${item}`} className='listeDeBaseEnCourse'>  \r\n                <Col xs={{ span: 20 }} md={{ span: 21 }} lg={{ span: 22 }} key={`elt-${item}`} id={`id-${item}`} onClick={choixListe}>\r\n                    {item}\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseItem;","import React, { Component } from 'react';\r\nimport { Button, Icon, Col, List } from 'antd';\r\n\r\nimport EnCourseList from './EnCourseList';\r\nimport EnCourseItem from './EnCourseItem';\r\n\r\nclass EnCourse extends Component {\r\n    liste = () => {\r\n        const { data, choixUserUid } = this.props;\r\n        const newData = [];\r\n        Object.keys(data).map(item => item !== 'user' ? newData.push(item) : null); //on enlève user des items\r\n        return ( \r\n            <List\r\n                bordered\r\n                locale={{ emptyText: 'Vous devez d\\'abord créer une liste avant de faire vos courses' }}\r\n                dataSource={newData}\r\n                renderItem={ (item, id) => (\r\n                    <>\r\n                    {\r\n                    item ?\r\n                    <>\r\n                    {\r\n                        choixUserUid ?\r\n                        <List.Item>\r\n                            <EnCourseItem\r\n                                item={item}\r\n                                choixListe={() => this.props.choixListe(item)}\r\n                            />\r\n                        </List.Item>\r\n                        :\r\n                        <>\r\n                        {\r\n                            data[item].locked === false ?\r\n                            <List.Item >\r\n                                <EnCourseItem\r\n                                    item={item}\r\n                                    choixListe={() => this.props.choixListe(item)}\r\n                                />\r\n                            </List.Item>\r\n                            :\r\n                            null\r\n                        }\r\n                        </>\r\n\r\n                    }\r\n                    </>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                </>\r\n                :\r\n                <Col span={24}>\r\n                    <EnCourseList\r\n                        currentTitre={this.props.currentTitre}\r\n                        createNewItemLastMinute={this.props.createNewItemLastMinute}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titreListe={this.props.titreListe}\r\n                        returnToApp={this.props.returnToApp}\r\n                        closeComment={this.props.closeComment}\r\n                        goHome={this.props.goHome}\r\n                        indexItem={this.props.indexItem}\r\n                        checkCurrentCategory={this.props.checkCurrentCategory}\r\n                        help={this.props.help}\r\n                        inverseProduit={this.props.inverseProduit}\r\n                        visible={this.props.visible}\r\n                        onClose={this.props.onClose}\r\n                        item={this.props.item}\r\n                        largeur={this.props.largeur}\r\n                        modalContentCourse={this.props.modalContentCourse}\r\n                        showFormulaire={this.props.showFormulaire}\r\n                        showForm={this.props.showForm}\r\n                        handleScroll={this.props.handleScroll}\r\n                        handleScrollButton={this.props.handleScrollButton}\r\n                    />\r\n                </Col>\r\n            }\r\n            \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourse;","import React, { Component } from 'react';\r\n\r\nimport '../NewApp.css';\r\n\r\nimport { Button, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Liste de course interactive',\r\n        description: \"Bienvenue sur votre application de liste de course. Pour commencer, veuillez cliquer sur \\\"créer une liste\\\". Si vous avez déjà créé une liste, cliquez sur \\\"En course\\\" lorsque vous faites vos course.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          }\r\n      });\r\n  };\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                        <Button \r\n                            style={{ margin : '1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='enCourse'\r\n                            onClick={this.props.choixComponent}\r\n                            >Faire ses courses\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='mesListes'\r\n                            onClick={this.props.choixComponent}\r\n                        >Créer une liste\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\" \r\n                            className='item-button'\r\n                            name='monProfil'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mon profil\r\n                        </Button>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Row, Col, notification, Switch } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Votre profil',\r\n        description: \"Bientôt vous aurez la possibilité de modifier votre profil et bien plus encore!\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Se connecter à un autre profil',\r\n                description: \"Il vous suffit de recopier l'identifiant de la liste que vous souhaitez rejoindre et de valider. Ensuite cliquez sur cette liste pour la rejoindre!\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                // onClose: () => {\r\n                //   alert('clicked');\r\n                // },\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass ProfilUser extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const { \r\n            user, help, inverseProduit, userUid, newUserUid, choixUserUid, linkName, followWindow,\r\n                toggleSwitchHelp, toggleSwitchInverseProduit \r\n            } = this.props;\r\n        return ( \r\n            <Col span={24}>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col  xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                    <h2>Bienvenue sur votre profil {user}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Aide : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={help === true ? true : false} onChange={toggleSwitchHelp} id='switchButtonHelp'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Inverser l'ordre des produits : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={inverseProduit === true ? true : false} onChange={toggleSwitchInverseProduit} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Case d'ajout de produit qui suit l'écran : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={followWindow === true ? true : false} onChange={this.props.toggleSwitchFollowWindow} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Votre identifiant : </b>{userUid}</span>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                        <Button block type={choixUserUid ? \"primary\" : \"default\"} name={userUid}  onClick={!choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                        {choixUserUid ? <span>Votre liste</span>: <span>Rejoindre votre liste</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <Button block type={choixUserUid ? \"default\" : \"primary\"} name={newUserUid} onClick={choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                            {choixUserUid ? <span>Rejoindre la liste de {linkName}</span>: <span>Liste de {linkName}</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Ajouter un identifiant : </b></span>\r\n                        <input type='text' placeholder='Entrez le nouvel identifiant' onChange={this.props.changeUserUid} required={true}/>\r\n                        <Button type=\"primary\" onClick={this.props.valideChangeUserUid} className='changeUid'>\r\n                            <Icon type=\"check\" />Valider\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 3, pull: 10 }} md={{ span: 3, pull: 10 }} lg={{ span: 3, pull: 10 }}>\r\n                        <Button type='primary' onClick={() => this.props.deconnexion()} style={{ borderRadius: '50px', width: '35px', height: '35px', marginLeft: '10px' }}>\r\n                            <Icon type=\"logout\" />\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row type='flex' justify='left'>\r\n                    <Col span={6}>\r\n                    <div className='button-anth'>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilUser;","import React, { Component } from 'react';\r\n\r\nimport { Menu, Icon } from 'antd';\r\n\r\nclass HeaderMenu extends Component {\r\n    render() { \r\n        return ( \r\n            <Menu\r\n            onClick={this.props.handleClick}\r\n            selectedKeys={[this.props.choixComponentState]}\r\n            mode=\"horizontal\"\r\n          >\r\n            <Menu.Item key=\"menu\">\r\n                <Icon type=\"home\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"mesListes\">\r\n                <Icon type=\"ordered-list\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"enCourse\">\r\n                <Icon type=\"shopping\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"monProfil\">\r\n                <Icon type=\"user\" />\r\n            </Menu.Item>\r\n          </Menu>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HeaderMenu;","import React, { Component } from 'react';\n// import './App.css';\nimport './NewApp.css';\nimport 'antd/dist/antd.css';\nimport './animations.css';\n\nimport * as firebase from 'firebase';\nimport config from './firebase';\n\n//ANT design\nimport { \n  Row, Col, Layout, Icon, message, Input, Slider, InputNumber, Select, Card, Avatar, Skeleton \n} from 'antd';\n\nimport Home from './Components/Home';\nimport Loading from './Components/Loading';\nimport EnCourse from './Components/EnCourse';\nimport Menu from './Components/Menu';\nimport ProfilUser from './Components/ProfilUser';\nimport HeaderMenu from './Components/HeaderMenu';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport prochainement from './img/prochainement2.png';\n\nconst {\n  Header, Footer, Content,\n} = Layout;\nconst { Meta } = Card;\n\nconst {TextArea} = Input;\nconst Option = Select.Option;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    firebase.initializeApp(config);\n        this.state = {\n            listeDeBase: [],\n            data: '',\n            item: null,\n            titreListe: [],\n            currentTitre: '',\n            choixComponent: 'menu',\n            currentCategory: '' || 'Ma super catégorie',\n            numChildCategory: 0,\n            isSignedIn: false,\n            clicked: false, \n            loading: true,\n            goHome: false,\n            isCategory: true,\n            clickedText : false,\n            indexItem: null,\n            isToggleSwitchType: false,\n            help: true,\n            inverseProduit: true,\n            userId: '' || 'Mikael',\n            userUid: '',\n            newUserUid: '',\n            choixUserUid: true,\n            changeUserInput: false,\n            currentUserUid: '',\n            linkName: '',\n            followers: [],\n            count: 0,\n            countItem: 0,\n            typeCount: 'unité',\n            newComment: '',\n            showForm: false, //affiche ou non le form dans faire ses courses\n            inputOpen: false, // rend visible l'input du form\n            visible: false, //affiche le drawer\n            itemIsVisible: true, //affiche ou non l'item dans la liste de course\n            categoryIsVisible: true, //affiche ou non la catégorie dans la liste de course\n            totalItem: 0,\n            isScroll: 0,\n            followWindow: true,\n            largeur: 0,\n            hauteur: 0,\n            lastMinuteItem: false //verifie si un item a ete ajoute a la derniere minute\n        };\n      this.delete = this.delete.bind(this);\n      this.deleteCategory = this.deleteCategory.bind(this);\n      this.createNewItem = this.createNewItem.bind(this);\n      this.addNewListTitre = this.addNewListTitre.bind(this);\n      this.deconnexion = this.deconnexion.bind(this);\n}\n\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\ncomponentDidMount() {\n  const { loading } = this.state;\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        if(user) {\n          if(loading) {\n            this.getDataBase(user.uid);\n          }\n          this.setState({\n            isSignedIn: !!user, \n            userId: user.displayName,\n            userUid: user.uid\n          });\n        } else {\n          return null\n        }\n      }\n    );\n  \n  //détection du changement de taille d'écran\n  this.handleResize();\n  window.addEventListener('resize', this.handleResize);\n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('resize', this.handleResize); //on enlève l'évènement qui regarde la taille de la fenêtre\n  this.unregisterAuthObserver();\n}\n\n  animFormButton = button => {\n    button.classList.add('formButton-active');\n    setTimeout(() => {\n        button.classList.remove('formButton-active');\n    }, 500);\n  }\n\n  animFormElt = elt => {\n    elt.classList.add('message-enter');\n  }\n\n  getDataBase = myUser => {\n    const { userId, choixUserUid, newUserUid } = this.state;\n    const userUid = myUser || this.state.userUid;\n    const currentUser = choixUserUid ? userUid : newUserUid;\n    const ref = firebase.database().ref(`${currentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${userUid}/user/`).on('value', snapshot => {\n              this.setState({ \n                help: snapshot.val().help,\n                inverseProduit: snapshot.val().inverseProduit,\n                userUid: snapshot.val().userUid,\n                newUserUid: snapshot.val().newUserUid,\n                choixUserUid: snapshot.val().choixUserUid,\n                currentUserUid: snapshot.val().choixUserUid === true ? snapshot.val().userUid : snapshot.val().newUserUid,\n                linkName: snapshot.val().linkName,\n                followers: snapshot.val().followers,\n                followWindow: snapshot.val().followWindow\n               });\n               if(snapshot.val().choixUserUid) {\n                firebase.database().ref(`${currentUser}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               } else {\n                const newUserUid = snapshot.val().newUserUid;\n                firebase.database().ref(`${newUserUid}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               }\n            });\n            \n            } else {\n              firebase.database().ref(`${userUid}`).set({\n                user: {\n                  userName: userId,\n                  userUid: userUid,\n                  newUserUid: '',\n                  help: true,\n                  inverseProduit: true,\n                  choixUserUid: true,\n                  linkName: '',\n                  followers: [],\n                  followWindow: true\n                }\n              });\n              this.setState({\n                loading: false\n            });\n          }\n        });\n  }\n\n  //charger la database du compte sélectionné\n  getOtherDataBase = (linkName) => {\n    const curentUser = this.state.currentUserUid;\n    const user = this.state.userId;\n    const ref = firebase.database().ref(`${curentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${curentUser}/user`).on('value', snapshot => {\n              this.setState({ \n                linkName: snapshot.val().userName === user ? linkName : snapshot.val().userName  //probleme quand retour sur user d'origine\n               });\n            });\n            firebase.database().ref(`${curentUser}`).on('value', snapshot => {\n              Object.keys(snapshot.val()).map(item =>\n                listItem.push(item)\n              );\n                this.setState({\n                  listeDeBase: listItem,\n                  data: snapshot.val(),\n                  loading: false\n                  });\n              });\n            }\n        });\n        \n  }\n\n  // adminAddList = () => {\n  //   const { data } = this.state;\n  //   const listeExemple = [];\n  //   Object.keys(data).map(item => item === 'Liste d\\'exemple' ? listeExemple.push(data[item]) : null);\n  //   firebase.database().ref('Liste-Exemple/').push(listeExemple);\n  // }\n\n  showFormulaire = () => {\n    const showForm = !this.state.showForm;\n    \n    setTimeout(() => {\n      this.setState({ showForm });\n    }, 300);\n  }\n\n  //détecter la taille de la fenêtre\n  handleResize = () => this.setState({\n    hauteur: window.innerHeight,\n    largeur: window.innerWidth\n  });\n\n  // detection du scroll\n  handleScroll = () => {\n    const { followWindow, showForm } = this.state;\n    let isScroll = 0;\n    const formElt = showForm ? document.getElementById('myForm2') : document.getElementById('buttonSubmit2');\n    let lastPositionY = window.scrollY;\n    if(formElt && followWindow) {\n      if(isScroll !== lastPositionY && lastPositionY > 80) {\n        formElt.classList.add('opacity');\n        if(lastPositionY > 80) {\n          formElt.classList.add('fixedPosition');\n        }\n        setTimeout(() => {\n          isScroll = lastPositionY;\n          formElt.classList.remove('opacity');\n        }, 600);\n      }\n      if(lastPositionY <= 80) {\n        formElt.classList.remove('fixedPosition');\n      }\n    }\n}\n\n  // on ou off de l'aide\n  toggleSwitchHelp = checked => {\n    const { userUid } = this.state;\n    const help = checked;\n    this.setState({ help });\n    let updates = {};\n    updates[`${userUid}/user/help`] = !help;\n    return firebase.database().ref().update(updates);\n  }\n\n  // on ou off pour inverser l'ordre des produits\n  toggleSwitchInverseProduit = checked => {\n    const { userUid } = this.state;\n    const inverseProduit = checked;\n    this.setState({ inverseProduit });\n    let updates = {};\n    updates[`${userUid}/user/inverseProduit`] = !inverseProduit;\n    return firebase.database().ref().update(updates);\n  }\n\n  toggleSwitchFollowWindow = checked => {\n    const followWindow = checked;\n    this.setState({ followWindow });\n  }\n\n  // changer l'uid pour rejoindre une liste\n  changeUserUid = event => {\n    const newUserUid = event.target.value;\n    if(newUserUid.length > 20) {\n      this.setState({ \n        newUserUid, \n        changeUserInput: true \n      });\n    }\n  }\n\n  error = text => {\n    message.error(`${text}`);\n  };\n\n  //valider le changement de l'uid\n  valideChangeUserUid = () => {\n    const { newUserUid, changeUserInput, userUid, userId } = this.state;\n    const followers = [];\n    const message = 'Utilisateur trouvé!'\n    //on rajoute le nom du followers\n    followers.push(userId);\n    let updates = {};\n    if(newUserUid !== '' && changeUserInput) {\n      firebase.database().ref(`${newUserUid}/user/userName`).on('value', snapshot => {\n        if(snapshot.val()) {\n          this.setState({ \n            linkName: snapshot.val(),\n            followers,\n            changeUserInput: false\n          });\n          updates[`${userUid}/user/linkName`] = snapshot.val();\n          firebase.database().ref().update(updates);\n\n          updates[`${userUid}/user/newUserUid`] = newUserUid;\n          firebase.database().ref().update(updates);\n      \n          updates[`${newUserUid}/user/followers`] = followers;\n          firebase.database().ref().update(updates);\n\n          this.success(message);\n        } else {\n          this.error('Cet utilisateur n\\'existe pas');\n          return;\n        }\n      });\n    } else {\n      this.error('Erreur de saisie');\n    }\n  }\n\n  choisirUserUid = event => {\n    const { choixUserUid, userUid, linkName} = this.state;\n    this.setState({ \n      choixUserUid: !choixUserUid,\n      currentUserUid: event.target.name\n    });\n\n    const choixDB = !choixUserUid;\n    if(choixDB) {\n        this.getDataBase();\n    } else {\n        this.getOtherDataBase(linkName);\n    }\n\n    this.success('Liste chargée!');\n        this.setState({ \n          currentTitre: '',\n          clicked: false,\n          choixComponent: 'menu'\n        });\n\n    let updates = {};\n    updates[`${userUid}/user/choixUserUid`] = !choixUserUid;\n    firebase.database().ref().update(updates);\n  }\n\n  // compteur de produits dans une liste\n  countProduit = arrayData => {\n    let countItemPos = [];\n    let countItemNeg = [];\n    arrayData.map(elt => Object.keys(elt.categoryItems)\n      .map(item => elt.categoryItems[item].checked === false ? \n          countItemNeg.push(elt.categoryItems[item].checked)\n          : \n          countItemPos.push(elt.categoryItems[item].checked)));\n    this.setState({\n        countItem : countItemNeg.length - countItemPos.length\n    });\n}\n\n  // Regarde si un produit est checked\n  isChecked = item => {\n    const { currentUserUid, currentTitre, data } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const divElt = collapse.parentElement.parentElement.parentElement;\n    divElt.classList.toggle('flip');\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    item.checked = !item.checked;\n\n    this.setState({ data });\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n}\n  // Delete un produit\n  delete = item => {\n    const { currentUserUid, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const contentElt = collapse.parentElement.parentElement.parentElement.parentElement.childNodes;\n    \n    this.setState({ \n      indexItem: `elt-${item.item}`,\n      numChildCategory: contentElt.length\n  });\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    if(contentElt.length === 1) {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n        const indexCat = snapshot.key;\n          firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${indexCat}`).remove();\n      });\n      setTimeout(() => {\n        this.setState({ indexItem: null});\n      }, 50);\n    } else {\n        firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n          snapshot.forEach(function(childSnapshot){\n            const indexItem = childSnapshot.key;\n              firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${indexItem}`).remove();\n          });\n        });\n        setTimeout(() => {\n          this.setState({ indexItem: null});\n        }, 50);\n    }\n  }\n\n  // delete une catégorie\n  deleteCategory = (item, id) => {\n    const user = this.state.currentUserUid;\n    const collapse = document.getElementById(item.titreCat);\n    const currentTitre = this.state.currentTitre;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === collapse.id ? childSnapshot.key : null;\n      });\n    });\n\n    firebase.database().ref(`${user}/${currentTitre}/category/${index}`).remove();\n    \n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 50);\n  }\n\n  deleteList = (item) => {\n    const { currentUserUid } = this.state;\n    this.setState({ indexItem: `elt-${item}` });\n\n    firebase.database().ref(`${currentUserUid}/${item}`).remove();\n\n    setTimeout(() => {\n      this.setState({ indexItem: null });\n    }, 50);\n    \n  }\n\n  confirmDelete = item => {\n    this.setState({ clicked: false });\n    this.deleteList(item);\n    message.success('Liste effacée');\n  }\n\n  cancel = e => {\n      message.error('Action annulée');\n    }\n\n  onChangeComment = (event, item) => {\n    const newComment = event.target.value;\n    item.comment = newComment;\n    this.setState({\n      item,\n      newComment\n    });\n  }\n\n  onChangeCount = (value, item) => {\n    const count = value;\n    item.count = value;\n    this.setState({\n      count,\n      item\n    });\n  }\n\n  onChangeTypeCount = (value, item) => {\n    const typeCount = value;\n    item.typeCount = value;\n    this.setState({\n      typeCount,\n      item\n    });\n  }\n\n  modalContent = item => {\n    const { count, largeur, typeCount } = this.state;\n    return (\n      <>\n        <Row gutter={largeur > 720 ? 12 : 8}>\n          <Col span={ largeur > 720 ? 14 : 24 }>\n            <Slider\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              onChange={e => this.onChangeCount(e, item)}\n              value={typeof count === 'number' ? count : 0}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <InputNumber\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              style={{ marginLeft: 16, width: '90%', fontSize: '16px' }}\n              value={count}\n              onChange={e => this.onChangeCount(e, item)}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <Select defaultValue={typeCount} onChange={e => this.onChangeTypeCount(e, item)} style={{ width: '90%' }}>\n              <Option value='unité'>{count <= 1 ? 'unité' : 'unités'}</Option>\n              <Option value='boite'>{count <= 1 ? 'boite' : 'boites'}</Option>\n              <Option value='litre'>{count <= 1 ? 'litre' : 'litres'}</Option>\n              <Option value='ml'>ml</Option>\n              <Option value='cl'>cl</Option>\n              <Option value='Kilo'>{count <= 1 ? 'kilo' : 'kilos'}</Option>\n              <Option value='Gramme'>{count <= 1 ? 'gramme' : 'grammes'}</Option>\n            </Select>\n          </Col>\n        </Row>\n        <TextArea \n          placeholder='ajouter un commentaire' \n          autosize={{ minRows: 5, maxRows: 10 }} \n          onChange={e => this.onChangeComment(e, item)}\n          value={item.comment} \n          rows={10}\n          cols={largeur > 720 ? 50 : 30}\n          autoFocus\n          autoComplete='on'\n          style={{ marginTop: '1em', ontSize: '16px' }}\n          onPressEnter={event => this.onClose(event, item)}\n        />\n      </>\n    )\n  }\n\n  modalContentCourse = item => {\n    const { count, largeur } = this.state;\n    const image = (\n        <Skeleton paragraph={{ rows: 4, width: ['90%', '90%','90%','90%'] }} title={false}>\n          <img alt=\"prochainement\" src={prochainement} />\n        </Skeleton>\n    )\n    return(\n        <Card\n          style={{ width: largeur > 720 ? '70%' : '90%', paddingTop: '1em'}}\n          cover={image}\n        >\n          <Meta\n            avatar={<Avatar style={{ backgroundColor: '#009688' }} icon=\"user\" />}\n            title={item.item}\n          />\n            <br/>\n            {\n              count ?\n              <>\n              <h4>Quantité</h4>\n              <p>{item.count} {item.typeCount}{count <= 1 ? '': 's'}</p>\n              </>\n              :\n              null\n            }\n            {\n              item.comment ?\n              <>\n                <h4>Commentaire</h4>\n                <p>{item.comment}</p>\n              </>\n              :\n              <>\n                <h4>Commentaire</h4>\n                <p>Rien ici!</p>\n              </>\n            }\n        </Card>\n    )\n  }\n\n  //faire apparaitre/disparaitre la commentaire\n  toggleComment = item => {\n    this.setState({ \n      visible: true,\n      item,\n      count: item.count,\n      typeCount: item.typeCount,\n    });\n  }\n\n  onClose = (event, item) => {\n    this.addComment(event, item);\n    this.setState({\n      visible: false,\n      count: 0,\n      typeCount: 'unité',\n    });\n  };\n\n  // Ajouter un commentaire à un élément de la liste\n  addComment = (event, items) => {\n    event.preventDefault();\n    const { currentUserUid, item, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${items.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(items.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  //remettre la liste a zéro (check)\n  reloadList = () => {\n    const { currentTitre, data, currentUserUid } = this.state;\n    const arrayData = [];\n    Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\n    arrayData.map(elt => Object.keys(elt.categoryItems)\n      .map(item => elt.categoryItems[item].checked === true ? \n        elt.categoryItems[item].checked = false : null));\n\n    this.setState({ data });\n\n    let updates = {};\n    updates[`/${currentUserUid}`] = data;\n  \n    return firebase.database().ref().update(updates);\n  }\n\n  //rendre une liste privée\n  changeLocked = (item, title) => {\n    const { currentUserUid } = this.state;\n    item.locked = !item.locked;\n\n    let updates = {};\n    updates[`/${currentUserUid}/${title}/`] = item;      \n    return firebase.database().ref().update(updates);\n  }\n\n  //cache ou non une catégorie\n  categoryVisible = elt => {\n  const { currentUserUid, currentTitre } = this.state;\n  const currentCategory = elt.titreCat;\n\n  elt.categoryIsVisible = !elt.categoryIsVisible;\n\n  let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/`] = elt;\n          \n  return firebase.database().ref().update(updates);\n  }\n\n  itemVisible = item => {\n    const { currentUserUid, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    item.itemIsVisible = !item.itemIsVisible;\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n          \n  return firebase.database().ref().update(updates);\n  }\n\n  // Créer une catégorie dans la liste de course\n  createNewCategory = event => {\n    event.preventDefault();\n    const { currentUserUid, currentTitre, currentCategory, choixComponent } = this.state;\n    const formInput = document.querySelector('#myForm>input');\n    const todoFormButton = document.querySelector('#myForm>button');\n    let category = '';\n    if(currentCategory === 'Ajout de dernière minute' && choixComponent === 'enCourse') {\n      category = 'Ajout de dernière minute';\n    } else {\n      const cat = formInput.value;\n      category = cat.charAt(0).toUpperCase() + cat.substring(1).toLowerCase();\n    }\n    \n    if(formInput.value === '') {\n      this.setState({ \n        showForm: false\n      });\n      return null\n    }\n    //insérer une catégorie sans exemple de produit!\n    const data = {\n      titreCat: category,\n      categoryIsVisible: true\n    }\n    //on regarde si la catégorie existe déjà\n    let categoryExist = false;\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot) {\n        return categoryExist = childSnapshot.val().titreCat === category ? true : false;\n      });\n    });\n    //si la catégorie n'existe pas, on la push dans la bdd\n    if(!categoryExist) {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).push({\n        ...data\n      });\n      this.setState({\n        currentCategory: category,\n        isCategory: false,\n        showForm: false\n      });\n      this.animFormButton(todoFormButton);\n    } else { // si elle existe message d'alerte\n      this.error('Cette catégorie existe déjà!');\n    }\n    formInput.value = '';\n  }\n\n  //message qui annonce la catégorie sélectionnée\n  success = text => {\n    message.config({\n      top: 90,\n      duration: 2\n    });\n    message.success(`${text}`);\n  };\n\n  // on ouvre le formulaire\n  openInput = titre => {\n    const currentCategory = titre;\n    this.setState({ \n      inputOpen: true,\n      currentCategory\n    });\n  }\n\n  // Créer un élément de liste de course\n  createNewItem = event => {\n    event.preventDefault();\n    const { currentUserUid, currentCategory, currentTitre } = this.state;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const dataElt = todoFormInput.value;\n    const newData = dataElt.charAt(0).toUpperCase() + dataElt.substring(1).toLowerCase();\n\n    if(todoFormInput.value === '') {\n      this.setState({ \n        inputOpen: false\n      });\n      return null\n    }\n\n    if(currentCategory === 'Ma super catégorie') {\n      this.createNewCategory(event);\n      return null;\n    }\n\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n    this.setState({ inputOpen: false });\n  }\n\n  // Ajout d'un titre de liste de course\n  addNewListTitre = event => {\n    event.preventDefault();\n    const { currentUserUid } = this.state;\n    const formInput = document.querySelector('#form-input');\n    const todoFormButton = document.querySelector('#myButtonSubmit');\n    const titre = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n\n    this.setState(prevState => ({\n      listeDeBase: [...prevState.listeDeBase, titre],\n      isCategory: true\n    }));\n\n    firebase.database().ref(`${currentUserUid}/${titre}`).set({\n      locked: false\n    });\n\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n  }\n\n  // Détecte quelle liste à été choisie\n  choixListe = title => {\n    this.setState({\n      currentTitre: title,\n      clicked: true\n    });\n  }\n\n  // En Course --------> Check toute la catégorie\n  checkCurrentCategory = titreCat => {\n    const { choixComponent } = this.state;\n    const titre = document.getElementById(titreCat);\n    if(choixComponent === 'enCourse') {\n      titre.lastChild.firstChild.classList.toggle('hidden');\n    } else {\n      titre.lastChild.firstChild.classList.toggle('hidden');\n      titre.children[1].classList.toggle('hidden');\n    }\n  }\n\n  // EN COURSE --------> Crée un item dans la catégorie derniere minute\n  createNewItemLastMinute = event => {\n    event.preventDefault();\n    const todoFormInput = document.querySelector('.formu>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    if(!newData) {\n      return\n    }\n    const { currentUserUid, currentCategory, currentTitre, lastMinuteItem } = this.state;\n    const timestamp = Date.now();\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    //on regarde si la catégorie existe déjà pour ne pas en recréer une identique\n    let hasTitreCat = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n         return hasTitreCat = childSnapshot.val().titreCat === 'Ajout de dernière minute';\n      });\n    });\n\n    if(currentCategory === 'Ajout de dernière minute' && !lastMinuteItem && !hasTitreCat) {\n      this.createNewCategory(event);\n      this.setState({ lastMinuteItem: true });\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n    this.setState({ showForm: false });\n  }\n\n  // charger une liste d'exemple\n  loadListExemple = () => {\n    const { currentTitre, currentUserUid } = this.state;\n    firebase.database().ref('Liste-Exemple/-LY14-nVOqZIM_Cn9Ma6/0/').on('value', snapshot => {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/`).set(snapshot.val().category);\n    });\n  }\n\n  // utilisé sur bouton pour retour en arrière\n  goHome = () => {\n    this.setState({ clicked: false, isCategory: true });\n  }\n\n  // retour au menu de l'accueil\n  returnToApp = () => {\n    this.setState({ choixComponent: 'menu' });\n  }\n\n  // détecte le composant choisi à l'accueil\n  choixComponent = event => {\n    const choixComponent = event.target.name;\n    if(choixComponent !== '') {\n      if(choixComponent === 'enCourse') {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ajout de dernière minute',\n          showForm: false\n        });\n      } else {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ma super catégorie',\n          showForm: false\n        });\n      }\n    }\n  }\n\n  hideText = () => {\n    const clickedText = this.state.clickedText;\n    this.setState({ clickedText : !clickedText });\n}\n\ndeconnexion = () => {\n  firebase.auth().signOut().then(function() {\n    this.setState({ isSignedIn: false });\n  }).catch(function(error) {\n    console.log(error);\n  });\n}\n\n//choix composant via headermenu\nhandleClick = event => {\n  const choixComponent = event.key;\n  if(choixComponent !== '') {\n    if(choixComponent === 'enCourse') {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ajout de dernière minute',\n        clicked: false,\n        currentTitre: '',\n        showForm: false\n      });\n    } else {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ma super catégorie',\n        clicked: false,\n        currentTitre: '',\n        showForm: false,\n        isCategory: true\n      });\n    }\n  }\n}\n\n  //renvoie dans le render le composent choisit\n  renderChoiseConponent = () => {\n    const { choixComponent } = this.state;\n    switch(choixComponent) {\n      case 'enCourse':\n      return <EnCourse\n                returnToApp={this.returnToApp}\n                choixListe={this.choixListe}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                createNewItemLastMinute={this.createNewItemLastMinute}\n                goHome={this.goHome}\n                currentTitre={this.state.currentTitre}\n                data={this.state.data}\n                checkCurrentCategory={this.checkCurrentCategory}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                largeur={this.state.largeur}\n                modalContentCourse={this.modalContentCourse}\n                showFormulaire={this.showFormulaire}\n                showForm={this.state.showForm}\n                handleScroll={this.handleScroll}\n                choixUserUid={this.state.choixUserUid}\n              />\n      case 'mesListes':\n      return <Home\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                addNewListTitre={this.addNewListTitre}\n                deleteList={this.deleteList}\n                loading={this.state.loading}\n                data={this.state.data}\n                returnToApp={this.returnToApp}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                createNewCategory={this.createNewCategory}\n                isCategory={this.state.isCategory}\n                currentCategory={this.state.currentCategory}\n                numChildCategory={this.state.numChildCategory}\n                deleteCategory={this.deleteCategory}\n                currentTitre={this.state.currentTitre}\n                isToggleSwitchType={this.state.isToggleSwitchType}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                modalContent={this.modalContent}\n                largeur={this.state.largeur}\n                itemIsVisible={this.state.itemIsVisible}\n                itemVisible={this.itemVisible}\n                handleScroll={this.handleScroll}\n                showForm={this.state.showForm}\n                showFormulaire={this.showFormulaire}\n                categoryVisible={this.categoryVisible}\n                categoryIsVisible={this.state.categoryIsVisible}\n                reloadList={this.reloadList}\n                confirmDelete={this.confirmDelete}\n                cancel={this.cancel}\n                changeLocked={this.changeLocked}\n                choixUserUid={this.state.choixUserUid}\n                inputOpen={this.state.inputOpen}\n                openInput={this.openInput}\n                checkCurrentCategory={this.checkCurrentCategory}\n                loadListExemple={this.loadListExemple}\n              />\n      case 'monProfil':\n      return <ProfilUser\n              returnToApp={this.returnToApp}\n              user={this.state.userId}\n              toggleSwitchHelp={this.toggleSwitchHelp}\n              help={this.state.help}\n              toggleSwitchInverseProduit={this.toggleSwitchInverseProduit}\n              inverseProduit={this.state.inverseProduit}\n              userUid={this.state.userUid}\n              changeUserUid={this.changeUserUid}\n              valideChangeUserUid={this.valideChangeUserUid}\n              newUserUid={this.state.newUserUid}\n              choixUserUid={this.state.choixUserUid}\n              choisirUserUid={this.choisirUserUid}\n              linkName={this.state.linkName}\n              followWindow={this.state.followWindow}\n              toggleSwitchFollowWindow={this.toggleSwitchFollowWindow}\n              deconnexion={this.deconnexion}\n              />\n      default:\n      return null\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14}} lg={{ span: 10 }} id='connexion'>\n            <h1>Check-Course</h1>\n            <p>Veuillez vous connecter svp:</p>\n            <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n          </Col>\n        </Row>\n      );\n    }\n    if(this.state.loading) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14 }} lg={{ span: 10}} id='load'>\n            <Loading/>\n            <h3>Chargement du caddie</h3>\n          </Col>\n        </Row>\n      )\n    }\n    \n    return (\n        <Row type=\"flex\" justify=\"space-around\" id='main'>\n          <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} id='mainCol' >\n          <Layout>\n            <Header \n              style={{ \n                padding : this.state.largeur >= 480 ? '0 50px' : '0'\n              }}>\n              <Col xs={0} lg={4}>\n                {\n                  this.state.largeur >= 480 ? \n                  <h4><Icon type=\"shopping-cart\" />Check-Course</h4>\n                  :\n                  null\n                }\n              </Col>\n              <Col xs={24} lg={20} \n                style={{\n                  textAlign : this.state.largeur >= 480 ? 'right' : 'center',\n                  fontSize : this.state.largeur >= 480 ? '0.9em' : '0.7em'\n                }}\n              >\n                  <HeaderMenu\n                    handleClick={this.handleClick}\n                    choixComponent={this.choixComponent}\n                    choixComponentState={this.state.choixComponent}\n                  />\n              </Col>\n            </Header>\n          <Content>\n            \n            {\n              this.state.choixComponent === 'menu' ?\n              <>\n                <Col span={24} id={this.state.largeur >= 480 ? 'bckLogo' : 'bckLogo2'}>\n                  <Icon type=\"shopping-cart\" />\n                  <h2>CHECK-COURSE</h2>\n                </Col>\n                <Menu\n                  choixComponent={this.choixComponent}\n                  user={this.state.userId}\n                  hideText={this.hideText}\n                  clickedText={this.state.clickedText}\n                  help={this.state.help}\n                />\n                {\n                // Ligne a mettre en commentaire quand pas utilisé\n                // this.adminAddList() // envoie une liste d'exemple dans la bdd\n                // Ligne a mettre en commentaire quand pas utilisé\n                }\n              </>\n              :\n              this.renderChoiseConponent()\n            }\n            </Content>\n              <Footer>\n                <p>Created By Mikael</p>\n              </Footer>\n            </Layout>\n            </Col>\n          </Row>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { LocaleProvider } from 'antd';\nimport fr_FR from 'antd/lib/locale-provider/fr_FR';\n\nReactDOM.render(\n    <LocaleProvider locale={fr_FR}>\n        <App />\n    </LocaleProvider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}