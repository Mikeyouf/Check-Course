{"version":3,"sources":["firebase.js","Components/ItemList.js","Components/MyLists.js","Components/Home.js","Components/Loading.js","Components/EnCourseList.js","Components/EnCourse.js","Components/Menu.js","Components/ProfilUser.js","Components/HeaderMenu.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ItemList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","liste","currentTitre","data","arrayData","keys","map","item","category","categoryItem","push","reverse","elt","id","react_default","a","createElement","list","key","concat","titreCat","header","row","type","justify","align","col","xs","md","lg","className","onClick","getCurrentCategory","name","deleteCategory","icon","style","color","fontSize","bordered","dataSource","categoryItems","renderItem","Item","checked","span","sm","isChecked","tooltip","placement","title","mouseEnterDelay","es_button","background","block","delete","border","toggleComment","comment","badge","status","show","onSubmit","e","closeComment","value","placeholder","onChange","addComment","maxLength","state","Fragment","Component","MyLists","help","notification","open","message","description","duration","textAlign","onClose","isCategory","padding","createNewCategory","createNewItem","es_switch","checkedChildren","unCheckedChildren","toggleSwitch","Components_ItemList","titre","titreListe","indexItem","currentCategory","numChildCategory","marginRight","goHome","Home","listeDeBase","size","choixListe","deleteList","_this2","clicked","Components_MyLists","returnToApp","isToggleSwitchType","toggleSwitchType","length","addNewListTitre","Loading","react_loading_default","height","width","EnCourseList","checkCurrentCategory","createNewItemLastMinute","EnCourse","Components_EnCourseList","Menu","margin","choixComponent","ProfilUser","user","toggleSwitchHelp","HeaderMenu","menu","handleClick","selectedKeys","choixComponentState","mode","Header","Layout","Footer","Content","App","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","animFormButton","button","classList","add","setTimeout","remove","animFormElt","getDataBase","userId","ref","on","snapshot","listItem","val","setState","loading","set","userName","handleResize","hauteur","window","innerHeight","largeur","innerWidth","updates","update","document","querySelector","parentElement","newData","product","objectSpread","index","forEach","childSnapshot","itemKey","orderByChild","equalTo","collapse","getElementById","event","preventDefault","commentName","target","formInput","todoFormButton","prevState","timestamp","Date","now","todoFormInput","toConsumableArray","console","log","lastMinuteItem","hasTitreCat","hideText","clickedText","deconnexion","signOut","renderChoiseConponent","Components_EnCourse","Components_Home","Components_ProfilUser","config","isSignedIn","bind","assertThisInitialized","addEventListener","unregisterAuthObserver","onAuthStateChanged","displayName","removeEventListener","_this3","contentElt","childElementCount","indexCat","Components_Loading","layout","Components_HeaderMenu","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3b34e64.chunk.js","sourcesContent":["export default {\r\n    apiKey: \"AIzaSyASNdLHf9itHbMfni5KLun3kcA57LFgkFg\",\r\n    authDomain: \"check-list-course.firebaseapp.com\",\r\n    databaseURL: \"https://check-list-course.firebaseio.com\",\r\n    projectId: \"check-list-course\",\r\n    storageBucket: \"check-list-course.appspot.com\",\r\n    messagingSenderId: \"873680903792\"\r\n}","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport { List, Row, Col, Icon, Tooltip, Button, Badge } from 'antd';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    liste = () => {\r\n        const currentTitre = this.props.currentTitre;\r\n        const data = this.props.data;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        arrayData.reverse();\r\n        return (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                        <Col xs={18} md={20}  lg={22} className='titreCat' onClick={() => this.props.getCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                        <Col xs={3} md={2} lg={1}>\r\n                            <input type='checkbox' id={elt.titreCat}/>\r\n                        </Col>\r\n                        <Col xs={3} md={2} lg={1}>\r\n                            <button \r\n                            name=\"trash\" \r\n                            className=\"trash\" \r\n                            onClick={() => this.props.deleteCategory(elt, id)}>\r\n                                <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} >\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    // className={item.checked ? '.ant-list-bordered .ant-list-item flip' : '.ant-list-bordered .ant-list-item'} \r\n                                    key={item.key}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={16} sm={18} md={18} lg={20} onClick={() => this.props.isChecked(item, id)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Supprimer' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                style={{ background: 'transparent' }}\r\n                                                name=\"trash\" \r\n                                                className=\"trash\"\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.delete(item, id)}>\r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Commentaire' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Col span={24} className={item.show ? 'form-comm-container-active' : 'form-comm-container'}>\r\n                                    <form className='form-comm' onSubmit={e => this.props.closeComment(e, item)}>\r\n                                        <input \r\n                                            value={item.comment} \r\n                                            name='comment' \r\n                                            type='text'\r\n                                            id='inputComment'\r\n                                            placeholder='ajouter un commentaire'\r\n                                            onChange={(e) => this.props.addComment(e, item)}\r\n                                            className={item.show ? 'item message-enter-active' : 'item message-leave-active'}\r\n                                            maxLength={50}\r\n                                        />\r\n                                    </form>\r\n                                </Col>\r\n                            </Col>\r\n                    </List.Item>\r\n                    )}\r\n            />\r\n    \r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            {this.liste()}\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, notification, Switch } from 'antd';\r\n\r\nimport ItemList from './ItemList';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Ajouter une catégorie',\r\n        description: \"Pour ajouter une catégorie, cliquez sur \\\"Ajouter une catégorie\\\" et écrivez le nom que vous désirez, par exemple \\\"Boissons\\\". Pour finaliser, cliquez sur le +.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Ajouter un produit',\r\n                description: \"Pour ajouter un produit, cliquez sur \\\"Ajouter un produit\\\" et écrivez le nom que vous désirez, par exemple \\\"Eau\\\". Pour finaliser, cliquez sur le +. Vous pouvez ajouter autant de produits que vous le désirez.\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                  onClose: () => {\r\n                    notification.open({\r\n                        message: 'Astuce!',\r\n                        description: \"Pour ajouter un produit dans une catégorie existente, cliquez sur le nom de la catégorie voulue, ensuite il vous suffit d'ajouter un produit.\",\r\n                        duration: 0,\r\n                        style: {\r\n                            textAlign: 'justify'\r\n                          }\r\n                      });\r\n                  }\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass MyLists extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const isCategory = this.props.isCategory;\r\n        return ( \r\n            \r\n            <>\r\n                <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{this.props.currentTitre}</h3>\r\n                </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                        <form className='form form-titre' onSubmit={isCategory === true ? e => this.props.createNewCategory(e) : e => this.props.createNewItem(e)}>\r\n                            <Switch checkedChildren=\"C\" unCheckedChildren=\"P\" checked={isCategory === true ? true : false}  onChange={this.props.toggleSwitch} id='switchButton'/>\r\n                            <input type='text' placeholder={isCategory === true ? 'Ajouter une catégorie' : 'Ajouter un produit'} maxLength={40} />\r\n                            <button type='submit' id='buttonSubmit'>+</button>\r\n                        </form>\r\n                    </Col>\r\n                    <Col span={24}>  \r\n                        <ItemList\r\n                            data={this.props.data}\r\n                            isChecked={this.props.isChecked}\r\n                            delete={this.props.delete}\r\n                            toggleComment={this.props.toggleComment}\r\n                            addComment={this.props.addComment}\r\n                            titre={this.props.titreListe}\r\n                            closeComment={this.props.closeComment}\r\n                            indexItem={this.props.indexItem}\r\n                            currentCategory={this.props.currentCategory}\r\n                            numChildCategory={this.props.numChildCategory}\r\n                            deleteCategory={this.props.deleteCategory}\r\n                            currentTitre={this.props.currentTitre}\r\n                            getCurrentCategory={this.props.getCurrentCategory}\r\n                        />\r\n                    </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyLists;","import React, { Component } from 'react';\r\n\r\nimport MyLists from './MyLists';\r\n\r\nimport { Button, Icon, Col, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Créer une liste de course',\r\n        description: \"Pour créer une liste, il vous suffit simplement d'écrire son nom dans la case \\\"ajouter une liste\\\" et de cliquer sur le +. Ensuite cliquez sur le nom de votre liste qui vient d'apparaitre en dessous. Vous pouvez en créer maximum 3.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        // onClose: () => {\r\n        //   alert('clicked');\r\n        // },\r\n      });\r\n  };\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const indexItem = this.props.indexItem;\r\n        const listeDeBase = this.props.listeDeBase;\r\n        return listeDeBase.map((item, id) => \r\n        item !== 'user'?\r\n        <div key={id}>  \r\n            <Col xs={{ span: 22 }} md={{ span: 23 }} lg={{ span: 23 }} key={`elt-${item}`}>\r\n                <Button \r\n                    size='large' \r\n                    block \r\n                    type=\"primary\"\r\n                    id={item}\r\n                    onClick={e => this.props.choixListe(e)}\r\n                    className={indexItem === `elt-${item}` ? 'item-titre message-leave': 'item-titre'}\r\n                    >\r\n                        {item}\r\n                </Button>\r\n            </Col>\r\n            <Col xs={{ span: 2 }} md={{ span: 1 }} lg={{ span: 1 }} key={`delete-${id}`}>\r\n                <Button \r\n                    size='large' \r\n                    name=\"trash\" \r\n                    type=\"primary\"\r\n                    block \r\n                    className=\"trash\" \r\n                    onClick={() => this.props.deleteList(item)}\r\n                >  \r\n                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                </Button>\r\n            </Col>\r\n        </div>\r\n        : null\r\n        )};\r\n    render() {\r\n        const listeDeBase = this.props.listeDeBase;\r\n        return (\r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    { \r\n                        listeDeBase.length >= 4 ?\r\n                        null\r\n                        :\r\n                        <form className='form form-titre' onSubmit={e => this.props.addNewListTitre(e)}>\r\n                            <input type='text' id='form-input' placeholder='Ajouter une liste' maxLength={30}/>\r\n                            <button type='submit' id='myButtonSubmit'>+</button>\r\n                        </form>\r\n                    }\r\n                </Col>\r\n                    <>\r\n                        {this.liste()}\r\n                    </>\r\n                    <Col span={6} style={{ marginRight: '1em' }}>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n                <MyLists\r\n                    currentTitre={this.props.currentTitre}\r\n                    createNewItem={this.props.createNewItem}\r\n                    data={this.props.data}\r\n                    isChecked={this.props.isChecked}\r\n                    delete={this.props.delete}\r\n                    toggleComment={this.props.toggleComment}\r\n                    addComment={this.props.addComment}\r\n                    titreListe={this.props.titreListe}\r\n                    returnToApp={this.props.returnToApp}\r\n                    closeComment={this.props.closeComment}\r\n                    goHome={this.props.goHome}\r\n                    indexItem={this.props.indexItem}\r\n                    createNewCategory={this.props.createNewCategory}\r\n                    isCategory={this.props.isCategory}\r\n                    toggleSwitch={this.props.toggleSwitch}\r\n                    numChildCategory={this.props.numChildCategory}\r\n                    deleteCategory={this.props.deleteCategory}\r\n                    getCurrentCategory={this.props.getCurrentCategory}\r\n                    isToggleSwitchType={this.props.isToggleSwitchType}\r\n                    toggleSwitchType={this.props.toggleSwitchType}\r\n                    help={this.props.help}\r\n                />\r\n            </Col>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => (\r\n    <ReactLoading \r\n    type=\"cylon\" \r\n    color=\"#078073\" \r\n    className=\"load\"\r\n    id=\"load\"\r\n    height={200}\r\n    width={200}\r\n    />\r\n)\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, List, Row, Tooltip, Badge, notification  } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Astuce',\r\n        description: \"Lorsque vous faites vos courses, il suffit de cliquer sur un produit pour qu'il soit \\\"barré\\\" et \\\"grisé\\\".\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Astuce',\r\n                description: \"Vous ouvez rajouter un produit de dernière minute en l'ajoutant dans la case \\\"Entrez un produit\\\".\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n              });\r\n            }\r\n      });\r\n  };\r\n\r\nclass EnCourseList extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const currentTitre = this.props.currentTitre;\r\n        const data = this.props.data;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        arrayData.reverse();\r\n        return (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle' style={{height: '2.5em'}}>\r\n                        <Col span={24} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} >\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={item.key}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={20} sm={21} md={21} lg={22} onClick={() => this.props.isChecked(item, id)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Commentaire' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Col span={24} className={item.show ? 'form-comm-container-active' : 'form-comm-container'}>\r\n                                    <form className='form-comm' onSubmit={e => this.props.closeComment(e, item)}>\r\n                                        <input \r\n                                            value={item.comment} \r\n                                            name='comment' \r\n                                            type='text'\r\n                                            id='inputComment'\r\n                                            placeholder='ajouter un commentaire'\r\n                                            onChange={(e) => this.props.addComment(e, item)}\r\n                                            className={item.show ? 'item message-enter-active' : 'item message-leave-active'}\r\n                                            maxLength={50}\r\n                                        />\r\n                                    </form>\r\n                                </Col>\r\n                            </Col>\r\n                    </List.Item>\r\n                    )}\r\n            />\r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n                <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{this.props.currentTitre}</h3>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    <form className='form form-titre enCourse-form-titre' onSubmit={this.props.createNewItemLastMinute}>\r\n                        <input type='text' placeholder='Entrez un produit' maxLength={40} />\r\n                        <button type='submit' id='buttonSubmit'>+</button>\r\n                    </form>\r\n                </Col>\r\n                <Col span={24}>  \r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseList;","import React, { Component } from 'react';\r\nimport { Button, Icon, Col } from 'antd';\r\n\r\n// import MyLists from './MyLists';\r\nimport EnCourseList from './EnCourseList';\r\n\r\nclass EnCourse extends Component {\r\n    liste = () => {\r\n        const listeDeBase = this.props.listeDeBase;\r\n        return listeDeBase.map((item, id) =>\r\n            item !== 'user'?\r\n            <Button \r\n                    size='large' \r\n                    block \r\n                    type=\"primary\" \r\n                    key={id}\r\n                    id={item}\r\n                    onClick={e => this.props.choixListe(e)}\r\n                    className='item-button'\r\n                    >\r\n                {item}\r\n            </Button>\r\n            :\r\n            null\r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                </>\r\n                :\r\n                <Col span={24}>\r\n                    <EnCourseList\r\n                        currentTitre={this.props.currentTitre}\r\n                        createNewItemLastMinute={this.props.createNewItemLastMinute}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titreListe={this.props.titreListe}\r\n                        returnToApp={this.props.returnToApp}\r\n                        closeComment={this.props.closeComment}\r\n                        goHome={this.props.goHome}\r\n                        indexItem={this.props.indexItem}\r\n                        checkCurrentCategory={this.props.checkCurrentCategory}\r\n                        help={this.props.help}\r\n                    />\r\n                </Col>\r\n            }\r\n            \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourse;","import React, { Component } from 'react';\r\n\r\nimport '../NewApp.css';\r\n\r\nimport { Button, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Liste de course interactive',\r\n        description: \"Bienvenue sur votre application de liste de course. Pour commencer, veuillez cliquer sur \\\"créer une liste\\\". Si vous avez déjà créé une liste, cliquez sur \\\"En course\\\" lorsque vous faites vos course.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          }\r\n      });\r\n  };\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                        <Button \r\n                            style={{ margin : '1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='enCourse'\r\n                            onClick={this.props.choixComponent}\r\n                            >En course!\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='mesListes'\r\n                            onClick={this.props.choixComponent}\r\n                        >Créer une liste\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\" \r\n                            className='item-button'\r\n                            name='monProfil'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mon profil\r\n                        </Button>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Row, Col, notification, Switch } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Votre profil',\r\n        description: \"Bientôt vous aurez la possibilité de mofifier votre profil. D'ajouter un autre membre de la famille et bien plus encore!\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        // onClose: () => {\r\n        //   alert('clicked');\r\n        // },\r\n      });\r\n  };\r\n\r\nclass ProfilUser extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const user = this.props.user;\r\n        const help = this.props.help;\r\n        return ( \r\n            <Col span={24}>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col  xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                    <h2>Bienvenue sur votre profile {user}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                        <span>Aide : </span>\r\n                        <Switch checkedChildren=\"On\" unCheckedChildren=\"Off\" checked={help === true ? true : false} onChange={this.props.toggleSwitchHelp} id='switchButtonHelp'/>\r\n                    </Col>\r\n                </Row>\r\n                <Row type='flex' justify='left'>\r\n                    <Col span={6}>\r\n                    <div className='button-anth'>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilUser;","import React, { Component } from 'react';\r\n\r\nimport { Menu, Icon } from 'antd';\r\n\r\nclass HeaderMenu extends Component {\r\n    render() { \r\n        return ( \r\n            <Menu\r\n            onClick={this.props.handleClick}\r\n            selectedKeys={[this.props.choixComponentState]}\r\n            mode=\"horizontal\"\r\n          >\r\n            <Menu.Item key=\"menu\">\r\n                <Icon type=\"home\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"mesListes\">\r\n                <Icon type=\"ordered-list\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"enCourse\">\r\n                <Icon type=\"shopping\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"monProfil\">\r\n                <Icon type=\"user\" />\r\n            </Menu.Item>\r\n          </Menu>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HeaderMenu;","import React, { Component } from 'react';\n// import './App.css';\nimport './NewApp.css';\nimport 'antd/dist/antd.css';\nimport './animations.css';\n\nimport * as firebase from 'firebase';\nimport config from './firebase';\n\n//ANT design\nimport { Row, Col, Layout, Icon } from 'antd';\n\nimport Home from './Components/Home';\nimport Loading from './Components/Loading';\nimport EnCourse from './Components/EnCourse';\nimport Menu from './Components/Menu';\nimport ProfilUser from './Components/ProfilUser';\nimport HeaderMenu from './Components/HeaderMenu';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nconst {\n  Header, Footer, Content,\n} = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    firebase.initializeApp(config);\n        this.state = {\n            listeDeBase: [],\n            data: [],\n            titreListe: [],\n            currentTitre: '',\n            choixComponent: 'menu',\n            currentCategory: '' || 'Ma super catégorie',\n            numChildCategory: 0,\n            isSignedIn: false,\n            clicked: false, \n            loading: true,\n            goHome: false,\n            isCategory: true,\n            clickedText : false,\n            indexItem: null,\n            isToggleSwitchType: false,\n            help: true,\n            userId: '' || 'Mikael',\n            largeur: 0,\n            hauteur: 0,\n            lastMinuteItem: false //verifie si un item a ete ajoute a la derniere minute\n        };\n      this.delete = this.delete.bind(this);\n      this.deleteCategory = this.deleteCategory.bind(this);\n      this.createNewItem = this.createNewItem.bind(this);\n      this.addNewListTitre = this.addNewListTitre.bind(this);\n      this.deconnexion = this.deconnexion.bind(this);\n}\n\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\ncomponentDidMount() {\n  //détection du changement de taille d'écran\n  this.handleResize();\n  window.addEventListener('resize', this.handleResize);\n\n  this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        if(user) {\n          this.setState({isSignedIn: !!user, userId: user.displayName})\n        } else {\n          return null\n        }\n      }\n  );\n  // console.log(this.unregisterAuthObserver());\n  \n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('resize', this.handleResize); //on enlève l'évènement qui regarde la taille de la fenêtre\n  this.unregisterAuthObserver();\n}\n\n  animFormButton = (button) => {\n    button.classList.add('formButton-active');\n    setTimeout(() => {\n        button.classList.remove('formButton-active');\n    }, 500);\n  }\n\n  animFormElt = (elt) => {\n    elt.classList.add('message-enter');\n  }\n\n  getDataBase = () => {\n    setTimeout(() => {\n    const user = this.state.userId;\n    const ref = firebase.database().ref(`${user}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${user}/user/help`).on('value', snapshot => {\n              this.setState({ help: snapshot.val() });\n            });\n            Object.keys(snapshot.val()).map(item =>\n              listItem.push(item)\n            );\n            this.setState({\n              listeDeBase: listItem,\n              data: snapshot.val(),\n              loading: false\n              });\n            } else {\n              firebase.database().ref(`${user}`).set({\n                user: {\n                  userName: user,\n                  help: true\n                }\n              });\n              this.setState({\n                loading: false\n            });\n          }\n        });\n      }, 2000);\n  }\n\n  //détecter la taille de la fenêtre\n  handleResize = () => this.setState({\n    hauteur: window.innerHeight,\n    largeur: window.innerWidth\n  });\n\n  // on ou off de l'aide\n  toggleSwitchHelp = (checked) => {\n    const user = this.state.userId;\n    const help = this.state.help;\n    this.setState({ help : checked === true ? false : true });\n    let updates = {};\n    updates[`${user}/user/help`] = !help;\n    return firebase.database().ref().update(updates);\n  }\n\n  // Regarde si un produit est checked en mode collapse\n  isChecked = (item, id) => {\n    const user = this.state.userId;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    // console.log(collapse);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    // console.log(currentCategory);\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{checked : true} } : product));\n    item.checked = !item.checked;\n\n    this.setState({ data: newData });\n    // A ESSAYER POUR METTRE A JOUR LE STATE\n    // this.setState(state => {\n    //   const data = state.data.map((item, j) => {\n    //     if (j === id) {\n    //       return item.checked = !item.checked;\n    //     } else {\n    //       return item;\n    //     }\n    //   });\n\n    //   return {\n    //     data,\n    //   };\n    // });\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n}\n  // Delete un produit\n  delete(item, id){\n    const user = this.state.userId;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const contentElt = collapse.parentElement;\n    const currentTitre = this.state.currentTitre;\n    \n    this.setState({ \n      indexItem: `elt-${item.item}`,\n      numChildCategory: contentElt.childElementCount\n  });\n  //A ESSAYER POUR METTRE A JOUR LE STATE\n  // this.setState(state => {\n  //   const data = Object.keys(state.data).filter(item => item.id !== id);\n\n  //   return {\n  //     data,\n  //   };\n  // });\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    if(contentElt.childElementCount === 1) {\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n        const indexCat = snapshot.key;\n          setTimeout(() => {\n            firebase.database().ref(`${user}/${currentTitre}/category/${indexCat}`).remove();\n          }, 400);\n      });\n      setTimeout(() => {\n        this.setState({ indexItem: null});\n      }, 410);\n    } else {\n        firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n          snapshot.forEach(function(childSnapshot){\n            setTimeout(() => {\n              const indexItem = childSnapshot.key;\n              firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems/${indexItem}`).remove();\n            }, 400);\n          });\n        });\n        setTimeout(() => {\n          this.setState({ indexItem: null});\n        }, 410);\n    }\n      \n      \n  }\n\n  // delete une catégorie\n  deleteCategory = (item, id) => {\n    const user = this.state.userId;\n    // console.log(item.titreCat);\n    const collapse = document.getElementById(item.titreCat);\n    // console.log(collapse);\n    const currentTitre = this.state.currentTitre;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === collapse.id ? childSnapshot.key : null;\n      });\n    });\n    // console.log(index);\n\n    firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').on('value', snapshot => {\n        setTimeout(() => {\n          firebase.database().ref(`${user}/${currentTitre}/category/${index}`).remove();\n        }, 400);\n    });\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n  }\n\n  deleteList = (item) => {\n    const user = this.state.userId;\n    this.setState({ indexItem: `elt-${item}`});\n\n    setTimeout(() => {\n      firebase.database().ref(`${user}/${item}`).remove();\n    }, 400);\n\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n    \n  }\n\n  //faire apparaitre/disparaitre la commentaire\n  toggleComment = (item) => {\n    const user = this.state.userId;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{show : true} } : product));\n    item.show = !item.show;\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // Ajouter un commentaire à un élément de la liste\n  addComment = (event, item) => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const currentTitre = this.state.currentTitre;\n    let commentName = event.target.value;\n    item.comment = event.target.value;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{comment : commentName} } : product));\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // événement qui ferme le commentaire\n  closeComment = (event, item) => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{show : true} } : product));\n    item.show = !item.show;\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // Créer une catégorie dans la liste de course\n  createNewCategory = (event) => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const currentTitre = this.state.currentTitre;\n    const currentCategory = this.state.currentCategory;\n    const formInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('.form>button');\n    let category = '';\n    if(currentCategory === 'Ajout de dernière minute') {\n      category = 'Ajout de dernière minute';\n    } else {\n      category = formInput.value;\n    }\n    \n    if(formInput.value === '') {\n      return null\n    }\n    //Arriver a insérer une catégorie sans exemple de produit!\n    const data = {\n      titreCat: category\n    }\n\n    this.setState(prevState => ({\n      // listeDeBase: [...prevState.listeDeBase, category],\n      currentCategory: category,\n      isCategory: false\n    }));\n    \n    firebase.database().ref(`${user}/${currentTitre}/category`).push({\n      ...data\n    });\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n\n  }\n\n  //prend la catégorie choisie au clic\n  getCurrentCategory = titreCat => {\n    const currentCategory = titreCat;\n    this.setState({ currentCategory, isCategory: false });\n  }\n\n  // Bouton switch pour choisir entre produit et catégorie\n  toggleSwitch = (checked) => {\n    this.setState({ isCategory : checked === false ? false : true });\n  }\n\n  //bouton switch pour choisir entre collapse et liste\n  toggleSwitchType = (checked) => {\n    this.setState({ isToggleSwitchType : checked === false ? false : true });\n}\n\n  // Créer un élément de liste de course\n  createNewItem = (event) => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const currentCategory = this.state.currentCategory;\n    const currentTitre = this.state.currentTitre;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      show: false,\n    };\n    if(currentCategory === 'Ma super catégorie') {\n      this.createNewCategory(event);\n      return null;\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n  }\n\n  // Ajout d'un titre de liste de course\n  addNewListTitre = event => {\n    event.preventDefault();\n    // const user = this.state.userId;\n    const formInput = document.querySelector('#form-input');\n    const todoFormButton = document.querySelector('#myButtonSubmit');\n    const titre = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n    this.setState(prevState => ({\n      listeDeBase: [...prevState.listeDeBase, titre],\n      currentTitre: titre,\n      isCategory: true\n    }));\n\n    // firebase.database().ref(`${user}`).push({\n    //   titre\n    // });\n\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n  }\n\n  // Détecte quelle liste à été choisie\n  choixListe = (e) => {\n    const user = this.state.userId;\n    const titreListe = e.target.id;\n    const ref = firebase.database().ref(`${user}`);\n    // console.log(titreListe);\n\n    ref.on('value', snapshot => {\n      this.setState({\n        data: snapshot.val(),\n        currentTitre: titreListe,\n        clicked: true\n      });\n    });\n  }\n\n  // En Course --------> Check toute la catégorie\n  checkCurrentCategory = titreCat => {\n    console.log(titreCat);\n  }\n\n  // EN COURSE --------> Crée un item dans la catégorie derniere minute\n  createNewItemLastMinute = event => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const currentCategory = this.state.currentCategory;\n    const currentTitre = this.state.currentTitre;\n    const lastMinuteItem = this.state.lastMinuteItem;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      show: false,\n    };\n\n    //on regarde si la catégorie existe déjà pour ne pas en recréer une identique\n    let hasTitreCat = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n         return hasTitreCat = childSnapshot.val().titreCat === 'Ajout de dernière minute';\n      });\n    });\n\n    if(currentCategory === 'Ajout de dernière minute' && !lastMinuteItem && !hasTitreCat) {\n      this.createNewCategory(event);\n      this.setState({ lastMinuteItem: true });\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n  }\n\n  // utilisé sur bouton pour retour en arrière\n  goHome = () => {\n    this.setState({ clicked: false, isCategory: true });\n  }\n\n  // retour au menu de l'accueil\n  returnToApp = () => {\n    this.setState({ choixComponent: 'menu' });\n  }\n\n  // détecte le composant choisi à l'accueil\n  choixComponent = (event) => {\n    const choixComponent = event.target.name;\n    if(choixComponent !== '') {\n      if(choixComponent === 'enCourse') {\n        this.setState({ choixComponent, currentCategory: 'Ajout de dernière minute' });\n      } else {\n        this.setState({ choixComponent, currentCategory: 'Ma super catégorie' });\n      }\n    }\n  }\n\n  hideText = () => {\n    const clickedText = this.state.clickedText;\n    this.setState({ clickedText : !clickedText });\n}\n\ndeconnexion = event => {\n  event.preventDefault();\n  firebase.auth().signOut();\n  // console.log(firebase.auth().currentUser.displayName);\n}\n\n//choix composant via headermenu\nhandleClick = (e) => {\n  const choixComponent = e.key;\n  if(choixComponent !== '') {\n    if(choixComponent === 'enCourse') {\n      this.setState({ choixComponent, currentCategory: 'Ajout de dernière minute' });\n    } else {\n      this.setState({ choixComponent, currentCategory: 'Ma super catégorie' });\n    }\n  }\n}\n\n  //renvoie dans le render le composent choisit\n  renderChoiseConponent = () => {\n    const name = this.state.choixComponent;\n    switch(name) {\n      case 'enCourse':\n      return <EnCourse\n                returnToApp={this.returnToApp}\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                closeComment={this.closeComment}\n                createNewItemLastMinute={this.createNewItemLastMinute}\n                goHome={this.goHome}\n                currentTitre={this.state.currentTitre}\n                data={this.state.data}\n                checkCurrentCategory={this.checkCurrentCategory}\n              />\n      case 'mesListes':\n      return <Home\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                addNewListTitre={this.addNewListTitre}\n                deleteList={this.deleteList}\n                loading={this.state.loading}\n                data={this.state.data}\n                returnToApp={this.returnToApp}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                closeComment={this.closeComment}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                createNewCategory={this.createNewCategory}\n                isCategory={this.state.isCategory}\n                currentCategory={this.state.currentCategory}\n                toggleSwitch={this.toggleSwitch}\n                numChildCategory={this.state.numChildCategory}\n                deleteCategory={this.deleteCategory}\n                currentTitre={this.state.currentTitre}\n                getCurrentCategory={this.getCurrentCategory}\n                isToggleSwitchType={this.state.isToggleSwitchType}\n                toggleSwitchType={this.toggleSwitchType}\n              />\n      case 'monProfil':\n      return <ProfilUser\n              returnToApp={this.returnToApp}\n              user={this.state.userId}\n              toggleSwitchHelp={this.toggleSwitchHelp}\n              help={this.state.help}\n              />\n      default:\n      return null\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n        {/* {console.log('this state isSignedIn n\\'existe pas')} */}\n          <Col xs={{ span: 16 }} md={{ span: 14}} lg={{ span: 10 }} id='connexion'>\n            <h1>Check-List-Course</h1>\n            <p>Veuillez vous connecter svp:</p>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n          </Col>\n        </Row>\n      );\n    }\n    if(this.state.loading) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n        {this.getDataBase()}\n          <Col xs={{ span: 16 }} md={{ span: 14 }} lg={{ span: 10}} id='load'>\n            <Loading/>\n            <h3>Chargement du caddie</h3>\n          </Col>\n        </Row>\n      )\n    }\n    if(!this.state.loading) {\n        \n    }\n    \n    return (\n      <>\n      <Row type=\"flex\" justify=\"space-around\" id='main'>\n        <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} id='mainCol' >\n        <Layout>\n          <Header style={{ padding : this.state.largeur >= 480 ? '0 50px' : '0'}}>\n            <Col xs={0} lg={4}>\n              {\n                this.state.largeur >= 480 ? \n                <h4><Icon type=\"shopping-cart\" /> Check-Course</h4>\n                :\n                null\n              }\n            </Col>\n            <Col xs={24} lg={20} \n              style={{\n                textAlign : this.state.largeur >= 480 ? 'right' : 'center',\n                fontSize : this.state.largeur >= 480 ? '0.9em' : '0.7em'\n              }}\n            >\n                <HeaderMenu\n                  handleClick={this.handleClick}\n                  choixComponent={this.choixComponent}\n                  choixComponentState={this.state.choixComponent}\n                />\n            </Col>\n          </Header>\n        <Content>\n          \n          {\n            this.state.choixComponent === 'menu' ?\n            <>\n              <Col span={24} id={this.state.largeur >= 480 ? 'bckLogo' : 'bckLogo2'}>\n                <Icon type=\"shopping-cart\" />\n                <h2>CHECK-COURSE</h2>\n              </Col>\n              <Menu\n                choixComponent={this.choixComponent}\n                user={this.state.userId}\n                hideText={this.hideText}\n                clickedText={this.state.clickedText}\n                help={this.state.help}\n              />\n            </>\n            :\n            this.renderChoiseConponent()\n          }\n              {/* <Col span={6}>\n                  <Button \n                    type='primary'\n                    block \n                    onClick={e => this.deconnexion(e)} \n                    className='goBack'\n                    >\n                      Déconnexion\n                  </Button>\n              </Col> */}\n          </Content>\n            <Footer>\n              <p>Created By Mikael</p>\n            </Footer>\n          </Layout>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}