{"version":3,"sources":["firebase.js","Components/ItemList.js","Components/MyLists.js","Components/Home.js","Components/Loading.js","Components/EnCourseList.js","Components/EnCourse.js","Components/Menu.js","Components/ProfilUser.js","Components/HeaderMenu.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ItemList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","liste","_this$props","currentTitre","data","inverseProduit","arrayData","keys","map","item","category","categoryItem","push","reverse","elt","id","react_default","a","createElement","list","key","concat","titreCat","header","row","type","justify","align","col","xs","md","lg","className","onClick","getCurrentCategory","name","deleteCategory","icon","style","color","fontSize","bordered","dataSource","categoryItems","renderItem","Item","checked","span","sm","isChecked","tooltip","placement","title","mouseEnterDelay","es_button","background","block","delete","border","toggleComment","comment","badge","status","show","onSubmit","e","closeComment","value","placeholder","onChange","addComment","maxLength","state","Fragment","Component","MyLists","help","notification","open","message","description","duration","textAlign","onClose","isCategory","padding","createNewCategory","createNewItem","es_switch","checkedChildren","unCheckedChildren","toggleSwitch","Components_ItemList","titre","titreListe","indexItem","currentCategory","numChildCategory","marginRight","goHome","Home","listeDeBase","size","choixListe","deleteList","_this2","clicked","Components_MyLists","returnToApp","isToggleSwitchType","toggleSwitchType","length","addNewListTitre","Loading","react_loading_default","height","width","EnCourseList","checkCurrentCategory","createNewItemLastMinute","EnCourse","Components_EnCourseList","Menu","margin","choixComponent","ProfilUser","user","userUid","newUserUid","choixUserUid","linkName","marginBottom","toggleSwitchHelp","toggleSwitchInverseProduit","choisirUserUid","changeUserUid","valideChangeUserUid","HeaderMenu","menu","handleClick","selectedKeys","choixComponentState","mode","Header","Layout","Footer","Content","App","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","animFormButton","button","classList","add","setTimeout","remove","animFormElt","getDataBase","userId","currentUser","ref","on","snapshot","listItem","val","setState","currentUserUid","loading","set","userName","getOtherDataBase","curentUser","handleResize","hauteur","window","innerHeight","largeur","innerWidth","updates","update","event","target","document","querySelector","parentElement","newData","product","objectSpread","index","forEach","childSnapshot","itemKey","orderByChild","equalTo","collapse","getElementById","preventDefault","commentName","formInput","todoFormButton","prevState","success","timestamp","Date","now","todoFormInput","toConsumableArray","console","log","lastMinuteItem","hasTitreCat","hideText","clickedText","deconnexion","signOut","renderChoiseConponent","Components_EnCourse","Components_Home","Components_ProfilUser","config","isSignedIn","bind","assertThisInitialized","addEventListener","unregisterAuthObserver","onAuthStateChanged","displayName","uid","removeEventListener","_this3","contentElt","childElementCount","indexCat","Components_Loading","layout","Components_HeaderMenu","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f58cb100.chunk.js","sourcesContent":["export default {\r\n    apiKey: \"AIzaSyASNdLHf9itHbMfni5KLun3kcA57LFgkFg\",\r\n    authDomain: \"check-list-course.firebaseapp.com\",\r\n    databaseURL: \"https://check-list-course.firebaseio.com\",\r\n    projectId: \"check-list-course\",\r\n    storageBucket: \"check-list-course.appspot.com\",\r\n    messagingSenderId: \"873680903792\"\r\n}","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport { List, Row, Col, Icon, Tooltip, Button, Badge } from 'antd';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    liste = () => {\r\n        const { currentTitre, data, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        return (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                        <Col xs={18} md={20}  lg={22} className='titreCat' onClick={() => this.props.getCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                        <Col xs={3} md={2} lg={1}>\r\n                            <input type='checkbox' id={elt.titreCat}/>\r\n                        </Col>\r\n                        <Col xs={3} md={2} lg={1}>\r\n                            <button \r\n                            name=\"trash\" \r\n                            className=\"trash\" \r\n                            onClick={() => this.props.deleteCategory(elt, id)}>\r\n                                <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} >\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    // className={item.checked ? '.ant-list-bordered .ant-list-item flip' : '.ant-list-bordered .ant-list-item'} \r\n                                    key={item.key}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={16} sm={18} md={18} lg={20} onClick={() => this.props.isChecked(item, id)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Supprimer' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                style={{ background: 'transparent' }}\r\n                                                name=\"trash\" \r\n                                                className=\"trash\"\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.delete(item, id)}>\r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Commentaire' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Col span={24} className={item.show ? 'form-comm-container-active' : 'form-comm-container'}>\r\n                                    <form className='form-comm' onSubmit={e => this.props.closeComment(e, item)}>\r\n                                        <input \r\n                                            value={item.comment} \r\n                                            name='comment' \r\n                                            type='text'\r\n                                            id='inputComment'\r\n                                            placeholder='ajouter un commentaire'\r\n                                            onChange={(e) => this.props.addComment(e, item)}\r\n                                            className={item.show ? 'item message-enter-active' : 'item message-leave-active'}\r\n                                            maxLength={50}\r\n                                        />\r\n                                    </form>\r\n                                </Col>\r\n                            </Col>\r\n                    </List.Item>\r\n                    )}\r\n            />\r\n    \r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            {this.liste()}\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, notification, Switch } from 'antd';\r\n\r\nimport ItemList from './ItemList';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Ajouter une catégorie',\r\n        description: \"Pour ajouter une catégorie, cliquez sur \\\"Ajouter une catégorie\\\" et écrivez le nom que vous désirez, par exemple \\\"Boissons\\\". Pour finaliser, cliquez sur le +.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Ajouter un produit',\r\n                description: \"Pour ajouter un produit, cliquez sur \\\"Ajouter un produit\\\" et écrivez le nom que vous désirez, par exemple \\\"Eau\\\". Pour finaliser, cliquez sur le +. Vous pouvez ajouter autant de produits que vous le désirez.\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                  onClose: () => {\r\n                    notification.open({\r\n                        message: 'Astuce!',\r\n                        description: \"Pour ajouter un produit dans une catégorie existente, cliquez sur le nom de la catégorie voulue, ensuite il vous suffit d'ajouter un produit.\",\r\n                        duration: 0,\r\n                        style: {\r\n                            textAlign: 'justify'\r\n                          }\r\n                      });\r\n                  }\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass MyLists extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const isCategory = this.props.isCategory;\r\n        return ( \r\n            \r\n            <>\r\n                <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{this.props.currentTitre}</h3>\r\n                </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                        <form className='form form-titre' onSubmit={isCategory === true ? e => this.props.createNewCategory(e) : e => this.props.createNewItem(e)}>\r\n                            <Switch checkedChildren=\"C\" unCheckedChildren=\"P\" checked={isCategory === true ? true : false}  onChange={this.props.toggleSwitch} id='switchButton'/>\r\n                            <input type='text' placeholder={isCategory === true ? 'Ajouter une catégorie' : 'Ajouter un produit'} maxLength={40} />\r\n                            <button type='submit' id='buttonSubmit'>+</button>\r\n                        </form>\r\n                    </Col>\r\n                    <Col span={24}>  \r\n                        <ItemList\r\n                            data={this.props.data}\r\n                            isChecked={this.props.isChecked}\r\n                            delete={this.props.delete}\r\n                            toggleComment={this.props.toggleComment}\r\n                            addComment={this.props.addComment}\r\n                            titre={this.props.titreListe}\r\n                            closeComment={this.props.closeComment}\r\n                            indexItem={this.props.indexItem}\r\n                            currentCategory={this.props.currentCategory}\r\n                            numChildCategory={this.props.numChildCategory}\r\n                            deleteCategory={this.props.deleteCategory}\r\n                            currentTitre={this.props.currentTitre}\r\n                            getCurrentCategory={this.props.getCurrentCategory}\r\n                            inverseProduit={this.props.inverseProduit}\r\n                        />\r\n                    </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyLists;","import React, { Component } from 'react';\r\n\r\nimport MyLists from './MyLists';\r\n\r\nimport { Button, Icon, Col, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Créer une liste de course',\r\n        description: \"Pour créer une liste, il vous suffit simplement d'écrire son nom dans la case \\\"ajouter une liste\\\" et de cliquer sur le +. Ensuite cliquez sur le nom de votre liste qui vient d'apparaitre en dessous. Vous pouvez en créer maximum 3.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        // onClose: () => {\r\n        //   alert('clicked');\r\n        // },\r\n      });\r\n  };\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const indexItem = this.props.indexItem;\r\n        const listeDeBase = this.props.listeDeBase;\r\n        return listeDeBase.map((item, id) => \r\n        item !== 'user'?\r\n        <div key={id}>  \r\n            <Col xs={{ span: 22 }} md={{ span: 23 }} lg={{ span: 23 }} key={`elt-${item}`}>\r\n                <Button \r\n                    size='large' \r\n                    block \r\n                    type=\"primary\"\r\n                    id={item}\r\n                    onClick={e => this.props.choixListe(e)}\r\n                    className={indexItem === `elt-${item}` ? 'item-titre message-leave': 'item-titre'}\r\n                    >\r\n                        {item}\r\n                </Button>\r\n            </Col>\r\n            <Col xs={{ span: 2 }} md={{ span: 1 }} lg={{ span: 1 }} key={`delete-${id}`}>\r\n                <Button \r\n                    size='large' \r\n                    name=\"trash\" \r\n                    type=\"primary\"\r\n                    block \r\n                    className=\"trash\" \r\n                    onClick={() => this.props.deleteList(item)}\r\n                >  \r\n                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                </Button>\r\n            </Col>\r\n        </div>\r\n        : null\r\n        )};\r\n    render() {\r\n        const listeDeBase = this.props.listeDeBase;\r\n        return (\r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    { \r\n                        listeDeBase.length >= 4 ?\r\n                        null\r\n                        :\r\n                        <form className='form form-titre' onSubmit={e => this.props.addNewListTitre(e)}>\r\n                            <input type='text' id='form-input' placeholder='Ajouter une liste' maxLength={30}/>\r\n                            <button type='submit' id='myButtonSubmit'>+</button>\r\n                        </form>\r\n                    }\r\n                </Col>\r\n                    <>\r\n                        {this.liste()}\r\n                    </>\r\n                    <Col span={6} style={{ marginRight: '1em' }}>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n                <MyLists\r\n                    currentTitre={this.props.currentTitre}\r\n                    createNewItem={this.props.createNewItem}\r\n                    data={this.props.data}\r\n                    isChecked={this.props.isChecked}\r\n                    delete={this.props.delete}\r\n                    toggleComment={this.props.toggleComment}\r\n                    addComment={this.props.addComment}\r\n                    titreListe={this.props.titreListe}\r\n                    returnToApp={this.props.returnToApp}\r\n                    closeComment={this.props.closeComment}\r\n                    goHome={this.props.goHome}\r\n                    indexItem={this.props.indexItem}\r\n                    createNewCategory={this.props.createNewCategory}\r\n                    isCategory={this.props.isCategory}\r\n                    toggleSwitch={this.props.toggleSwitch}\r\n                    numChildCategory={this.props.numChildCategory}\r\n                    deleteCategory={this.props.deleteCategory}\r\n                    getCurrentCategory={this.props.getCurrentCategory}\r\n                    isToggleSwitchType={this.props.isToggleSwitchType}\r\n                    toggleSwitchType={this.props.toggleSwitchType}\r\n                    help={this.props.help}\r\n                    inverseProduit={this.props.inverseProduit}\r\n                />\r\n            </Col>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => (\r\n    <ReactLoading \r\n    type=\"cylon\" \r\n    color=\"#078073\" \r\n    className=\"load\"\r\n    id=\"load\"\r\n    height={200}\r\n    width={200}\r\n    />\r\n)\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, List, Row, Tooltip, Badge, notification  } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Astuce',\r\n        description: \"Lorsque vous faites vos courses, il suffit de cliquer sur un produit pour qu'il soit \\\"barré\\\" et \\\"grisé\\\".\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Astuce',\r\n                description: \"Vous ouvez rajouter un produit de dernière minute en l'ajoutant dans la case \\\"Entrez un produit\\\".\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n              });\r\n            }\r\n      });\r\n  };\r\n\r\nclass EnCourseList extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const { currentTitre, data, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        \r\n        return (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle' style={{height: '2.5em'}}>\r\n                        <Col span={24} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} >\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={item.key}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={20} sm={21} md={21} lg={22} onClick={() => this.props.isChecked(item, id)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Commentaire' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Col span={24} className={item.show ? 'form-comm-container-active' : 'form-comm-container'}>\r\n                                    <form className='form-comm' onSubmit={e => this.props.closeComment(e, item)}>\r\n                                        <input \r\n                                            value={item.comment} \r\n                                            name='comment' \r\n                                            type='text'\r\n                                            id='inputComment'\r\n                                            placeholder='ajouter un commentaire'\r\n                                            onChange={(e) => this.props.addComment(e, item)}\r\n                                            className={item.show ? 'item message-enter-active' : 'item message-leave-active'}\r\n                                            maxLength={50}\r\n                                        />\r\n                                    </form>\r\n                                </Col>\r\n                            </Col>\r\n                    </List.Item>\r\n                    )}\r\n            />\r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n                <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{this.props.currentTitre}</h3>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    <form className='form form-titre enCourse-form-titre' onSubmit={this.props.createNewItemLastMinute}>\r\n                        <input type='text' placeholder='Produit de dernière minute' maxLength={40} />\r\n                        <button type='submit' id='buttonSubmit'>+</button>\r\n                    </form>\r\n                </Col>\r\n                <Col span={24}>  \r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseList;","import React, { Component } from 'react';\r\nimport { Button, Icon, Col } from 'antd';\r\n\r\n// import MyLists from './MyLists';\r\nimport EnCourseList from './EnCourseList';\r\n\r\nclass EnCourse extends Component {\r\n    liste = () => {\r\n        const listeDeBase = this.props.listeDeBase;\r\n        return listeDeBase.map((item, id) =>\r\n            item !== 'user'?\r\n            <Button \r\n                    size='large' \r\n                    block \r\n                    type=\"primary\" \r\n                    key={id}\r\n                    id={item}\r\n                    onClick={e => this.props.choixListe(e)}\r\n                    className='item-button'\r\n                    >\r\n                {item}\r\n            </Button>\r\n            :\r\n            null\r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                </>\r\n                :\r\n                <Col span={24}>\r\n                    <EnCourseList\r\n                        currentTitre={this.props.currentTitre}\r\n                        createNewItemLastMinute={this.props.createNewItemLastMinute}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titreListe={this.props.titreListe}\r\n                        returnToApp={this.props.returnToApp}\r\n                        closeComment={this.props.closeComment}\r\n                        goHome={this.props.goHome}\r\n                        indexItem={this.props.indexItem}\r\n                        checkCurrentCategory={this.props.checkCurrentCategory}\r\n                        help={this.props.help}\r\n                        inverseProduit={this.props.inverseProduit}\r\n                    />\r\n                </Col>\r\n            }\r\n            \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourse;","import React, { Component } from 'react';\r\n\r\nimport '../NewApp.css';\r\n\r\nimport { Button, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Liste de course interactive',\r\n        description: \"Bienvenue sur votre application de liste de course. Pour commencer, veuillez cliquer sur \\\"créer une liste\\\". Si vous avez déjà créé une liste, cliquez sur \\\"En course\\\" lorsque vous faites vos course.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          }\r\n      });\r\n  };\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                        <Button \r\n                            style={{ margin : '1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='enCourse'\r\n                            onClick={this.props.choixComponent}\r\n                            >Faire ses courses\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='mesListes'\r\n                            onClick={this.props.choixComponent}\r\n                        >Créer une liste\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\" \r\n                            className='item-button'\r\n                            name='monProfil'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mon profil\r\n                        </Button>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Row, Col, notification, Switch } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Votre profil',\r\n        description: \"Bientôt vous aurez la possibilité de modifier votre profil et bien plus encore!\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Se connecter à un autre profil',\r\n                description: \"Il vous suffit de recopier l'identifiant de la liste que vous souhaitez rejoindre et de valider. Ensuite cliquez sur cette liste pour la rejoindre!\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                // onClose: () => {\r\n                //   alert('clicked');\r\n                // },\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass ProfilUser extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const { user, help, inverseProduit, userUid, newUserUid, choixUserUid, linkName } = this.props;\r\n        return ( \r\n            <Col span={24}>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col  xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                    <h2>Bienvenue sur votre profile {user}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Aide : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={help === true ? true : false} onChange={this.props.toggleSwitchHelp} id='switchButtonHelp'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Inverser l'ordre des produits : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={inverseProduit === true ? true : false} onChange={this.props.toggleSwitchInverseProduit} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Votre identifiant : </b>{userUid}</span>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                        <Button block type={choixUserUid ? \"primary\" : \"default\"} name={userUid}  onClick={!choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                        {choixUserUid ? <span>Votre liste</span>: <span>Rejoindre votre liste</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <Button block type={choixUserUid ? \"default\" : \"primary\"} name={newUserUid} onClick={choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                            {choixUserUid ? <span>Rejoindre la liste de {linkName}</span>: <span>Liste de {linkName}</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Ajouter un identifiant : </b></span>\r\n                        <input type='text' placeholder='Entrez le nouvel identifiant' onChange={this.props.changeUserUid} />\r\n                        <Button type=\"primary\" onClick={this.props.valideChangeUserUid} className='changeUid'>\r\n                            <Icon type=\"check\" />Valider\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row type='flex' justify='left'>\r\n                    <Col span={6}>\r\n                    <div className='button-anth'>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilUser;","import React, { Component } from 'react';\r\n\r\nimport { Menu, Icon } from 'antd';\r\n\r\nclass HeaderMenu extends Component {\r\n    render() { \r\n        return ( \r\n            <Menu\r\n            onClick={this.props.handleClick}\r\n            selectedKeys={[this.props.choixComponentState]}\r\n            mode=\"horizontal\"\r\n          >\r\n            <Menu.Item key=\"menu\">\r\n                <Icon type=\"home\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"mesListes\">\r\n                <Icon type=\"ordered-list\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"enCourse\">\r\n                <Icon type=\"shopping\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"monProfil\">\r\n                <Icon type=\"user\" />\r\n            </Menu.Item>\r\n          </Menu>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HeaderMenu;","import React, { Component } from 'react';\n// import './App.css';\nimport './NewApp.css';\nimport 'antd/dist/antd.css';\nimport './animations.css';\n\nimport * as firebase from 'firebase';\nimport config from './firebase';\n\n//ANT design\nimport { Row, Col, Layout, Icon, message } from 'antd';\n\nimport Home from './Components/Home';\nimport Loading from './Components/Loading';\nimport EnCourse from './Components/EnCourse';\nimport Menu from './Components/Menu';\nimport ProfilUser from './Components/ProfilUser';\nimport HeaderMenu from './Components/HeaderMenu';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nconst {\n  Header, Footer, Content,\n} = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    firebase.initializeApp(config);\n        this.state = {\n            listeDeBase: [],\n            data: [],\n            titreListe: [],\n            currentTitre: '',\n            choixComponent: 'menu',\n            currentCategory: '' || 'Ma super catégorie',\n            numChildCategory: 0,\n            isSignedIn: false,\n            clicked: false, \n            loading: true,\n            goHome: false,\n            isCategory: true,\n            clickedText : false,\n            indexItem: null,\n            isToggleSwitchType: false,\n            help: true,\n            inverseProduit: true,\n            userId: '' || 'Mikael',\n            userUid: '',\n            newUserUid: '',\n            choixUserUid: true,\n            currentUserUid: '',\n            linkName: '',\n            largeur: 0,\n            hauteur: 0,\n            lastMinuteItem: false //verifie si un item a ete ajoute a la derniere minute\n        };\n      this.delete = this.delete.bind(this);\n      this.deleteCategory = this.deleteCategory.bind(this);\n      this.createNewItem = this.createNewItem.bind(this);\n      this.addNewListTitre = this.addNewListTitre.bind(this);\n      this.deconnexion = this.deconnexion.bind(this);\n}\n\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\ncomponentDidMount() {\n  const loading = this.state.loading;\n  if(loading) {\n    this.getDataBase();\n  }\n  //détection du changement de taille d'écran\n  this.handleResize();\n  window.addEventListener('resize', this.handleResize);\n\n  this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        if(user) {\n          this.setState({\n            isSignedIn: !!user, \n            userId: user.displayName,\n            userUid: user.uid\n          });\n        } else {\n          return null\n        }\n      }\n  );\n  // console.log(this.unregisterAuthObserver());\n  \n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('resize', this.handleResize); //on enlève l'évènement qui regarde la taille de la fenêtre\n  this.unregisterAuthObserver();\n}\n\n  animFormButton = (button) => {\n    button.classList.add('formButton-active');\n    setTimeout(() => {\n        button.classList.remove('formButton-active');\n    }, 500);\n  }\n\n  animFormElt = (elt) => {\n    elt.classList.add('message-enter');\n  }\n\n  getDataBase = () => {\n    setTimeout(() => {\n    // alert('getDataBase est appelé!');\n    const user = this.state.userId;\n    const choixUserUid = this.state.choixUserUid;\n    const userUid = this.state.userUid;\n    const newUserUid = this.state.newUserUid;\n    const currentUser = choixUserUid ? userUid : newUserUid;\n    const ref = firebase.database().ref(`${currentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${userUid}/user/`).on('value', snapshot => {\n              this.setState({ \n                help: snapshot.val().help,\n                inverseProduit: snapshot.val().inverseProduit,\n                userUid: snapshot.val().userUid,\n                newUserUid: snapshot.val().newUserUid,\n                choixUserUid: snapshot.val().choixUserUid,\n                currentUserUid: snapshot.val().choixUserUid === true ? snapshot.val().userUid : snapshot.val().newUserUid,\n                linkName: snapshot.val().linkName\n               });\n               if(snapshot.val().choixUserUid) {\n                firebase.database().ref(`${currentUser}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               } else {\n                const newUserUid = snapshot.val().newUserUid;\n                firebase.database().ref(`${newUserUid}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               }\n            });\n            \n            } else {\n              firebase.database().ref(`${userUid}`).set({\n                user: {\n                  userName: user,\n                  userUid: userUid,\n                  newUserUid: '',\n                  help: true,\n                  inverseProduit: true,\n                  choixUserUid: choixUserUid,\n                  linkName: ''\n                }\n              });\n              this.setState({\n                loading: false\n            });\n          }\n        });\n      }, 2000);\n  }\n\n  //charger la database du compte sélectionné\n  getOtherDataBase = (linkName) => {\n    // alert('getOtherDataBase est appelé!');\n    const curentUser = this.state.currentUserUid;\n    const user = this.state.userId;\n    // console.log('getdatabase', linkName);\n    const ref = firebase.database().ref(`${curentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${curentUser}/user`).on('value', snapshot => {\n              this.setState({ \n                linkName: snapshot.val().userName === user ? linkName : snapshot.val().userName  //probleme quand retour sur user d'origine\n               });\n            });\n            firebase.database().ref(`${curentUser}`).on('value', snapshot => {\n              Object.keys(snapshot.val()).map(item =>\n                listItem.push(item)\n              );\n                this.setState({\n                  listeDeBase: listItem,\n                  data: snapshot.val(),\n                  loading: false\n                  });\n              });\n            }\n        });\n        \n  }\n\n  //détecter la taille de la fenêtre\n  handleResize = () => this.setState({\n    hauteur: window.innerHeight,\n    largeur: window.innerWidth\n  });\n\n  // on ou off de l'aide\n  toggleSwitchHelp = (checked) => {\n    const user = this.state.userUid;\n    const help = this.state.help;\n    this.setState({ help : checked === true ? false : true });\n    let updates = {};\n    updates[`${user}/user/help`] = !help;\n    return firebase.database().ref().update(updates);\n  }\n\n  // on ou off pour inverser l'ordre des produits\n  toggleSwitchInverseProduit = (checked) => {\n    const user = this.state.userUid;\n    const inverseProduit = this.state.inverseProduit;\n    this.setState({ inverseProduit : checked === true ? true : false });\n    let updates = {};\n    updates[`${user}/user/inverseProduit`] = !inverseProduit;\n    return firebase.database().ref().update(updates);\n  }\n\n  // changer l'uid pour rejoindre une liste\n  changeUserUid = (event) => {\n    const newUserUid = event.target.value;\n    this.setState({ newUserUid });\n  }\n\n  //valider le changement de l'uid\n  valideChangeUserUid = () => {\n    const newUserUid = this.state.newUserUid;\n    const user = this.state.userUid;\n    let updates = {};\n    firebase.database().ref(`${newUserUid}/user/userName`).on('value', snapshot => {\n      // console.log('récupère le nom', snapshot.val());\n      this.setState({ \n        linkName: snapshot.val()\n      });\n      updates[`${user}/user/linkName`] = snapshot.val();\n      firebase.database().ref().update(updates);\n    });\n    updates[`${user}/user/newUserUid`] = newUserUid;\n    firebase.database().ref().update(updates);\n  }\n\n  choisirUserUid = (event) => {\n    const choixUserUid = this.state.choixUserUid;\n    const user = this.state.userUid;\n    const linkName = this.state.linkName;\n    // console.log( 'choisir la db de', linkName);\n    this.setState({ \n      choixUserUid: !choixUserUid,\n      currentUserUid: event.target.name\n    });\n\n    const choixDB = !choixUserUid;\n    if(choixDB) {\n      setTimeout(() => {\n        this.getDataBase();\n      }, 2000);\n    } else {\n      setTimeout(() => {\n        this.getOtherDataBase(linkName);\n      }, 2000);\n    }\n    \n\n    let updates = {};\n    updates[`${user}/user/choixUserUid`] = !choixUserUid;\n    firebase.database().ref().update(updates);\n  }\n\n  // Regarde si un produit est checked en mode collapse\n  isChecked = (item, id) => {\n    const user = this.state.currentUserUid;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    // console.log(collapse);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    // console.log(currentCategory);\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{checked : true} } : product));\n    item.checked = !item.checked;\n\n    this.setState({ data: newData });\n    // A ESSAYER POUR METTRE A JOUR LE STATE\n    // this.setState(state => {\n    //   const data = state.data.map((item, j) => {\n    //     if (j === id) {\n    //       return item.checked = !item.checked;\n    //     } else {\n    //       return item;\n    //     }\n    //   });\n\n    //   return {\n    //     data,\n    //   };\n    // });\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n}\n  // Delete un produit\n  delete(item, id){\n    const user = this.state.currentUserUid;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const contentElt = collapse.parentElement;\n    const currentTitre = this.state.currentTitre;\n    \n    this.setState({ \n      indexItem: `elt-${item.item}`,\n      numChildCategory: contentElt.childElementCount\n  });\n  //A ESSAYER POUR METTRE A JOUR LE STATE\n  // this.setState(state => {\n  //   const data = Object.keys(state.data).filter(item => item.id !== id);\n\n  //   return {\n  //     data,\n  //   };\n  // });\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    if(contentElt.childElementCount === 1) {\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n        const indexCat = snapshot.key;\n          setTimeout(() => {\n            firebase.database().ref(`${user}/${currentTitre}/category/${indexCat}`).remove();\n          }, 400);\n      });\n      setTimeout(() => {\n        this.setState({ indexItem: null});\n      }, 410);\n    } else {\n        firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n          snapshot.forEach(function(childSnapshot){\n            setTimeout(() => {\n              const indexItem = childSnapshot.key;\n              firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems/${indexItem}`).remove();\n            }, 400);\n          });\n        });\n        setTimeout(() => {\n          this.setState({ indexItem: null});\n        }, 410);\n    }\n      \n      \n  }\n\n  // delete une catégorie\n  deleteCategory = (item, id) => {\n    const user = this.state.currentUserUid;\n    // console.log(item.titreCat);\n    const collapse = document.getElementById(item.titreCat);\n    // console.log(collapse);\n    const currentTitre = this.state.currentTitre;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === collapse.id ? childSnapshot.key : null;\n      });\n    });\n    // console.log(index);\n\n    firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').on('value', snapshot => {\n        setTimeout(() => {\n          firebase.database().ref(`${user}/${currentTitre}/category/${index}`).remove();\n        }, 400);\n    });\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n  }\n\n  deleteList = (item) => {\n    const user = this.state.currentUserUid;\n    this.setState({ indexItem: `elt-${item}`});\n\n    setTimeout(() => {\n      firebase.database().ref(`${user}/${item}`).remove();\n    }, 400);\n\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n    \n  }\n\n  //faire apparaitre/disparaitre la commentaire\n  toggleComment = (item) => {\n    const user = this.state.currentUserUid;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{show : true} } : product));\n    item.show = !item.show;\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // Ajouter un commentaire à un élément de la liste\n  addComment = (event, item) => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const currentTitre = this.state.currentTitre;\n    let commentName = event.target.value;\n    item.comment = event.target.value;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{comment : commentName} } : product));\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // événement qui ferme le commentaire\n  closeComment = (event, item) => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{show : true} } : product));\n    item.show = !item.show;\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // Créer une catégorie dans la liste de course\n  createNewCategory = (event) => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const currentTitre = this.state.currentTitre;\n    const currentCategory = this.state.currentCategory;\n    const formInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('.form>button');\n    let category = '';\n    if(currentCategory === 'Ajout de dernière minute') {\n      category = 'Ajout de dernière minute';\n    } else {\n      category = formInput.value;\n    }\n    \n    if(formInput.value === '') {\n      return null\n    }\n    //Arriver a insérer une catégorie sans exemple de produit!\n    const data = {\n      titreCat: category\n    }\n\n    this.setState(prevState => ({\n      // listeDeBase: [...prevState.listeDeBase, category],\n      currentCategory: category,\n      isCategory: false\n    }));\n    \n    firebase.database().ref(`${user}/${currentTitre}/category`).push({\n      ...data\n    });\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n\n  }\n\n  //message qui annonce la catégorie sélectionnée\n  success = currentTitre => {\n    message.success(`Catégorie sélectionnée: ${currentTitre}`);\n  };\n\n  //prend la catégorie choisie au clic\n  getCurrentCategory = titreCat => {\n    const currentCategory = titreCat;\n    this.setState({ currentCategory, isCategory: false });\n    this.success(titreCat);\n  }\n\n  // Bouton switch pour choisir entre produit et catégorie\n  toggleSwitch = (checked) => {\n    this.setState({ isCategory : checked === false ? false : true });\n  }\n\n  //bouton switch pour choisir entre collapse et liste\n  toggleSwitchType = (checked) => {\n    this.setState({ isToggleSwitchType : checked === false ? false : true });\n}\n\n  // Créer un élément de liste de course\n  createNewItem = (event) => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const currentCategory = this.state.currentCategory;\n    const currentTitre = this.state.currentTitre;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      show: false,\n    };\n    if(currentCategory === 'Ma super catégorie') {\n      this.createNewCategory(event);\n      return null;\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n  }\n\n  // Ajout d'un titre de liste de course\n  addNewListTitre = event => {\n    event.preventDefault();\n    // const user = this.state.userId;\n    const formInput = document.querySelector('#form-input');\n    const todoFormButton = document.querySelector('#myButtonSubmit');\n    const titre = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n    this.setState(prevState => ({\n      listeDeBase: [...prevState.listeDeBase, titre],\n      currentTitre: titre,\n      isCategory: true\n    }));\n\n    // firebase.database().ref(`${user}`).push({\n    //   titre\n    // });\n\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n  }\n\n  // Détecte quelle liste à été choisie\n  choixListe = (e) => {\n    const user = this.state.currentUserUid;\n    const titreListe = e.target.id;\n    const ref = firebase.database().ref(`${user}`);\n    // console.log(titreListe);\n\n    ref.on('value', snapshot => {\n      this.setState({\n        data: snapshot.val(),\n        currentTitre: titreListe,\n        clicked: true\n      });\n    });\n  }\n\n  // En Course --------> Check toute la catégorie\n  checkCurrentCategory = titreCat => {\n    console.log(titreCat);\n  }\n\n  // EN COURSE --------> Crée un item dans la catégorie derniere minute\n  createNewItemLastMinute = event => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const currentCategory = this.state.currentCategory;\n    const currentTitre = this.state.currentTitre;\n    const lastMinuteItem = this.state.lastMinuteItem;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      show: false,\n    };\n\n    //on regarde si la catégorie existe déjà pour ne pas en recréer une identique\n    let hasTitreCat = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n         return hasTitreCat = childSnapshot.val().titreCat === 'Ajout de dernière minute';\n      });\n    });\n\n    if(currentCategory === 'Ajout de dernière minute' && !lastMinuteItem && !hasTitreCat) {\n      this.createNewCategory(event);\n      this.setState({ lastMinuteItem: true });\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n  }\n\n  // utilisé sur bouton pour retour en arrière\n  goHome = () => {\n    this.setState({ clicked: false, isCategory: true });\n  }\n\n  // retour au menu de l'accueil\n  returnToApp = () => {\n    this.setState({ choixComponent: 'menu' });\n  }\n\n  // détecte le composant choisi à l'accueil\n  choixComponent = (event) => {\n    const choixComponent = event.target.name;\n    if(choixComponent !== '') {\n      if(choixComponent === 'enCourse') {\n        this.setState({ choixComponent, currentCategory: 'Ajout de dernière minute' });\n      } else {\n        this.setState({ choixComponent, currentCategory: 'Ma super catégorie' });\n      }\n    }\n  }\n\n  hideText = () => {\n    const clickedText = this.state.clickedText;\n    this.setState({ clickedText : !clickedText });\n}\n\ndeconnexion = event => {\n  event.preventDefault();\n  firebase.auth().signOut();\n  // console.log(firebase.auth().currentUser.displayName);\n}\n\n//choix composant via headermenu\nhandleClick = (e) => {\n  const choixComponent = e.key;\n  if(choixComponent !== '') {\n    if(choixComponent === 'enCourse') {\n      this.setState({ choixComponent, currentCategory: 'Ajout de dernière minute' });\n    } else {\n      this.setState({ choixComponent, currentCategory: 'Ma super catégorie' });\n    }\n  }\n}\n\n  //renvoie dans le render le composent choisit\n  renderChoiseConponent = () => {\n    const name = this.state.choixComponent;\n    switch(name) {\n      case 'enCourse':\n      return <EnCourse\n                returnToApp={this.returnToApp}\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                closeComment={this.closeComment}\n                createNewItemLastMinute={this.createNewItemLastMinute}\n                goHome={this.goHome}\n                currentTitre={this.state.currentTitre}\n                data={this.state.data}\n                checkCurrentCategory={this.checkCurrentCategory}\n                inverseProduit={this.state.inverseProduit}\n              />\n      case 'mesListes':\n      return <Home\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                addNewListTitre={this.addNewListTitre}\n                deleteList={this.deleteList}\n                loading={this.state.loading}\n                data={this.state.data}\n                returnToApp={this.returnToApp}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                closeComment={this.closeComment}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                createNewCategory={this.createNewCategory}\n                isCategory={this.state.isCategory}\n                currentCategory={this.state.currentCategory}\n                toggleSwitch={this.toggleSwitch}\n                numChildCategory={this.state.numChildCategory}\n                deleteCategory={this.deleteCategory}\n                currentTitre={this.state.currentTitre}\n                getCurrentCategory={this.getCurrentCategory}\n                isToggleSwitchType={this.state.isToggleSwitchType}\n                toggleSwitchType={this.toggleSwitchType}\n                inverseProduit={this.state.inverseProduit}\n              />\n      case 'monProfil':\n      return <ProfilUser\n              returnToApp={this.returnToApp}\n              user={this.state.userId}\n              toggleSwitchHelp={this.toggleSwitchHelp}\n              help={this.state.help}\n              toggleSwitchInverseProduit={this.toggleSwitchInverseProduit}\n              inverseProduit={this.state.inverseProduit}\n              userUid={this.state.userUid}\n              changeUserUid={this.changeUserUid}\n              valideChangeUserUid={this.valideChangeUserUid}\n              newUserUid={this.state.newUserUid}\n              choixUserUid={this.state.choixUserUid}\n              choisirUserUid={this.choisirUserUid}\n              linkName={this.state.linkName}\n              />\n      default:\n      return null\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14}} lg={{ span: 10 }} id='connexion'>\n            <h1>Check-List-Course</h1>\n            <p>Veuillez vous connecter svp:</p>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n          </Col>\n        </Row>\n      );\n    }\n    if(this.state.loading) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n        {/* {this.getDataBase()} */}\n          <Col xs={{ span: 16 }} md={{ span: 14 }} lg={{ span: 10}} id='load'>\n            <Loading/>\n            <h3>Chargement du caddie</h3>\n          </Col>\n        </Row>\n      )\n    }\n    \n    return (\n      <>\n      <Row type=\"flex\" justify=\"space-around\" id='main'>\n        <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} id='mainCol' >\n        <Layout>\n          <Header \n            style={{ \n              padding : this.state.largeur >= 480 ? '0 50px' : '0'\n            }}>\n            <Col xs={0} lg={4}>\n              {\n                this.state.largeur >= 480 ? \n                <h4><Icon type=\"shopping-cart\" /> Check-Course</h4>\n                :\n                null\n              }\n            </Col>\n            <Col xs={24} lg={20} \n              style={{\n                textAlign : this.state.largeur >= 480 ? 'right' : 'center',\n                fontSize : this.state.largeur >= 480 ? '0.9em' : '0.7em'\n              }}\n            >\n                <HeaderMenu\n                  handleClick={this.handleClick}\n                  choixComponent={this.choixComponent}\n                  choixComponentState={this.state.choixComponent}\n                />\n            </Col>\n          </Header>\n        <Content>\n          \n          {\n            this.state.choixComponent === 'menu' ?\n            <>\n              <Col span={24} id={this.state.largeur >= 480 ? 'bckLogo' : 'bckLogo2'}>\n                <Icon type=\"shopping-cart\" />\n                <h2>CHECK-COURSE</h2>\n              </Col>\n              <Menu\n                choixComponent={this.choixComponent}\n                user={this.state.userId}\n                hideText={this.hideText}\n                clickedText={this.state.clickedText}\n                help={this.state.help}\n              />\n            </>\n            :\n            this.renderChoiseConponent()\n          }\n              {/* <Col span={6}>\n                  <Button \n                    type='primary'\n                    block \n                    onClick={e => this.deconnexion(e)} \n                    className='goBack'\n                    >\n                      Déconnexion\n                  </Button>\n              </Col> */}\n          </Content>\n            <Footer>\n              <p>Created By Mikael</p>\n            </Footer>\n          </Layout>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}