{"version":3,"sources":["firebase.js","Components/ItemList.js","Components/List.js","Components/MyLists.js","Components/Home.js","Components/Loading.js","Components/EnCourseListItem.js","Components/EnCourseList.js","Components/EnCourse.js","Components/Menu.js","Components/ProfilUser.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ItemList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","currentTitre","data","arrayData","keys","map","item","category","categoryItem","push","reverse","liste","elt","id","react_default","a","createElement","list","key","concat","titreCat","header","row","type","justify","align","col","xs","md","lg","className","onClick","getCurrentCategory","name","deleteCategory","icon","style","color","fontSize","bordered","dataSource","categoryItems","renderItem","Item","checked","span","sm","isChecked","tooltip","placement","title","mouseEnterDelay","es_button","background","block","delete","border","toggleComment","comment","badge","status","show","onSubmit","e","closeComment","value","placeholder","onChange","addComment","maxLength","Fragment","Component","List","isCategory","createNewCategory","createNewItem","es_switch","checkedChildren","unCheckedChildren","toggleSwitch","Components_ItemList","titre","titreListe","indexItem","currentCategory","numChildCategory","MyLists","padding","Components_List","listeDeBase","isToggleSwitchType","toggleSwitchType","marginRight","goHome","Home","notification","open","message","description","duration","textAlign","size","choixListe","deleteList","clicked","Components_MyLists","returnToApp","length","addNewListTitre","Loading","react_loading_default","height","width","EnCourseListItem","checkCurrentCategory","createNewItemLastMinute","EnCourseList","Components_EnCourseListItem","EnCourse","Components_EnCourseList","Menu","clickedText","display","dispay","hideText","margin","choixComponent","ProfilUser","user","Header","Layout","Footer","Content","App","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","animFormButton","button","classList","add","setTimeout","remove","animFormElt","getDataBase","userId","ref","on","snapshot","listItem","val","console","log","setState","loading","collapse","document","querySelector","parentElement","newData","product","objectSpread","index","forEach","childSnapshot","itemKey","orderByChild","equalTo","updates","update","getElementById","event","preventDefault","commentName","target","formInput","todoFormButton","prevState","timestamp","Date","now","todoFormInput","toConsumableArray","lastMinuteItem","deconnexion","signOut","renderChoiseConponent","Components_EnCourse","Components_Home","Components_ProfilUser","config","isSignedIn","bind","assertThisInitialized","unregisterAuthObserver","onAuthStateChanged","displayName","_this3","contentElt","childElementCount","indexCat","_this4","Components_Loading","layout","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.244f924a.chunk.js","sourcesContent":["export default {\r\n    apiKey: \"AIzaSyASNdLHf9itHbMfni5KLun3kcA57LFgkFg\",\r\n    authDomain: \"check-list-course.firebaseapp.com\",\r\n    databaseURL: \"https://check-list-course.firebaseio.com\",\r\n    projectId: \"check-list-course\",\r\n    storageBucket: \"check-list-course.appspot.com\",\r\n    messagingSenderId: \"873680903792\"\r\n}","import React, { Component } from 'react';\r\n\r\nimport { List, Row, Col, Icon, Tooltip, Button, Badge } from 'antd';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        // const indexItem = this.props.indexItem;\r\n        // const numChildCategory = this.props.numChildCategory;\r\n        const currentTitre = this.props.currentTitre;\r\n        const data = this.props.data;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        arrayData.reverse();\r\n        const liste = (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                        <Col xs={18} md={20}  lg={22} className='titreCat' onClick={() => this.props.getCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                        <Col xs={3} md={2} lg={1}>\r\n                            <input type='checkbox' id={elt.titreCat}/>\r\n                        </Col>\r\n                        <Col xs={3} md={2} lg={1}>\r\n                            <button \r\n                            name=\"trash\" \r\n                            className=\"trash\" \r\n                            onClick={() => this.props.deleteCategory(elt, id)}>\r\n                                <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                            </button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                        {/* <Row type=\"flex\" justify=\"space-around\" align=\"middle\" className={indexItem === `elt-${item.item}` && numChildCategory > 1 ? 'message-leave': ''} id={`elt-${item.key}`} key={item.key}> */}\r\n                            <Col span={24} >\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    // className={item.checked ? '.ant-list-bordered .ant-list-item flip' : '.ant-list-bordered .ant-list-item'} \r\n                                    key={item.key}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={16} sm={18} md={18} lg={20} onClick={() => this.props.isChecked(item, id)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Supprimer' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                style={{ background: 'transparent' }}\r\n                                                name=\"trash\" \r\n                                                className=\"trash\"\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.delete(item, id)}>\r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Commentaire' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Col span={24} className={item.show ? 'form-comm-container-active' : 'form-comm-container'}>\r\n                                    <form className='form-comm' onSubmit={e => this.props.closeComment(e, item)}>\r\n                                        <input \r\n                                            value={item.comment} \r\n                                            name='comment' \r\n                                            type='text'\r\n                                            id='inputComment'\r\n                                            placeholder='ajouter un commentaire'\r\n                                            onChange={(e) => this.props.addComment(e, item)}\r\n                                            className={item.show ? 'item message-enter-active' : 'item message-leave-active'}\r\n                                            maxLength={50}\r\n                                        />\r\n                                    </form>\r\n                                </Col>\r\n                            </Col>\r\n                                \r\n                        {/* </Row> */}\r\n                    </List.Item>\r\n                    )}\r\n            />\r\n    \r\n    );\r\n        return ( \r\n            <>\r\n            {liste}\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React, { Component } from 'react';\r\n// import Item from './Item';\r\nimport ItemList from './ItemList';\r\n\r\nimport { Switch, Col, notification  } from 'antd';\r\n\r\nclass List extends Component {\r\n    render() { \r\n        const isCategory = this.props.isCategory;\r\n        return ( \r\n            <>  \r\n                {/* <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    {\r\n                        notification.open({\r\n                            message: 'Notification Title',\r\n                            description: 'This is the content of the notification. This is the content of the notification. This is the content of the notification.',\r\n                            onClick: () => {\r\n                              console.log('Notification Clicked!');\r\n                            },\r\n                          })\r\n                    }\r\n                </Col> */}\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    <form className='form form-titre' onSubmit={isCategory === true ? e => this.props.createNewCategory(e) : e => this.props.createNewItem(e)}>\r\n                        <Switch checkedChildren=\"C\" unCheckedChildren=\"P\" checked={isCategory === true ? true : false}  onChange={this.props.toggleSwitch} id='switchButton'/>\r\n                        <input type='text' placeholder={isCategory === true ? 'Entrez une catégorie' : 'Entrez un produit'} maxLength={40} />\r\n                        <button type='submit' id='buttonSubmit'>+</button>\r\n                    </form>\r\n                </Col>\r\n                <Col span={24}>  \r\n                    <ItemList\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titre={this.props.titreListe}\r\n                        closeComment={this.props.closeComment}\r\n                        indexItem={this.props.indexItem}\r\n                        currentCategory={this.props.currentCategory}\r\n                        numChildCategory={this.props.numChildCategory}\r\n                        deleteCategory={this.props.deleteCategory}\r\n                        currentTitre={this.props.currentTitre}\r\n                        getCurrentCategory={this.props.getCurrentCategory}\r\n                    />\r\n                </Col>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default List;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col } from 'antd';\r\n\r\nimport List from './List';\r\n\r\nclass MyLists extends Component {\r\n    render() { \r\n        return ( \r\n            <>\r\n                <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{this.props.currentTitre}</h3>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <List\r\n                        createNewItem={this.props.createNewItem}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        listeDeBase={this.props.listeDeBase}\r\n                        closeComment={this.props.closeComment}\r\n                        indexItem={this.props.indexItem}\r\n                        createNewCategory={this.props.createNewCategory}\r\n                        isCategory={this.props.isCategory}\r\n                        currentCategory={this.props.currentCategory}\r\n                        toggleSwitch={this.props.toggleSwitch}\r\n                        numChildCategory={this.props.numChildCategory}\r\n                        deleteCategory={this.props.deleteCategory}\r\n                        currentTitre={this.props.currentTitre}\r\n                        getCurrentCategory={this.props.getCurrentCategory}\r\n                        isToggleSwitchType={this.props.isToggleSwitchType}\r\n                        toggleSwitchType={this.props.toggleSwitchType}\r\n                    />\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyLists;","import React, { Component } from 'react';\r\n\r\nimport MyLists from './MyLists';\r\nimport { Button, Icon, Col, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Créer une liste de course',\r\n        description: \"Pour créer une liste, il vous suffit simplement d'écrire son nom ci-dessous et de cliquer sur le +. Ensuite cliquez sur le nom de votre liste qui vient d'apparaitre en dessous. Vous pouvez en créer maximum 3.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        // onClose: () => {\r\n        //   alert('clicked');\r\n        // },\r\n      });\r\n  };\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        openNotification();\r\n    }\r\n    render() {\r\n        const indexItem = this.props.indexItem;\r\n        const listeDeBase = this.props.listeDeBase;\r\n        const liste = listeDeBase.map((item, id) => \r\n        <div key={id}>  \r\n            <Col xs={{ span: 22 }} md={{ span: 23 }} lg={{ span: 23 }} key={`elt-${item}`}>\r\n                <Button \r\n                    size='large' \r\n                    block \r\n                    type=\"primary\"\r\n                    id={item}\r\n                    onClick={e => this.props.choixListe(e)}\r\n                    className={indexItem === `elt-${item}` ? 'item-titre message-leave': 'item-titre'}\r\n                    >\r\n                        {item}\r\n                </Button>\r\n            </Col>\r\n            <Col xs={{ span: 2 }} md={{ span: 1 }} lg={{ span: 1 }} key={`delete-${id}`}>\r\n                <Button \r\n                    size='large' \r\n                    name=\"trash\" \r\n                    type=\"primary\"\r\n                    block \r\n                    className=\"trash\" \r\n                    onClick={() => this.props.deleteList(item)}\r\n                >  \r\n                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                </Button>\r\n            </Col>\r\n        </div>\r\n        );\r\n        return (\r\n            <>\r\n                {/* <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h2>Mes Listes</h2>\r\n                </Col> */}\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    { \r\n                        listeDeBase.length >= 3 ?\r\n                        null\r\n                        :\r\n                        <form className='form form-titre' onSubmit={e => this.props.addNewListTitre(e)}>\r\n                            <input type='text' id='form-input' placeholder='Ajouter un titre' maxLength={30}/>\r\n                            <button type='submit' id='myButtonSubmit'>+</button>\r\n                        </form>\r\n                    }\r\n                </Col>\r\n                    <>\r\n                        {liste}\r\n                    </>\r\n                    <Col span={6} style={{ marginRight: '1em' }}>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n            <MyLists\r\n                currentTitre={this.props.currentTitre}\r\n                createNewItem={this.props.createNewItem}\r\n                data={this.props.data}\r\n                isChecked={this.props.isChecked}\r\n                delete={this.props.delete}\r\n                toggleComment={this.props.toggleComment}\r\n                addComment={this.props.addComment}\r\n                titreListe={this.props.titreListe}\r\n                returnToApp={this.props.returnToApp}\r\n                closeComment={this.props.closeComment}\r\n                goHome={this.props.goHome}\r\n                indexItem={this.props.indexItem}\r\n                createNewCategory={this.props.createNewCategory}\r\n                isCategory={this.props.isCategory}\r\n                toggleSwitch={this.props.toggleSwitch}\r\n                numChildCategory={this.props.numChildCategory}\r\n                deleteCategory={this.props.deleteCategory}\r\n                getCurrentCategory={this.props.getCurrentCategory}\r\n                isToggleSwitchType={this.props.isToggleSwitchType}\r\n                toggleSwitchType={this.props.toggleSwitchType}\r\n            />\r\n            </Col>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => (\r\n    <ReactLoading \r\n    type=\"cylon\" \r\n    color=\"#078073\" \r\n    className=\"load\"\r\n    id=\"load\"\r\n    height={200}\r\n    width={200}\r\n    />\r\n)\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\n\r\nimport { Col, List, Row, Icon, Tooltip, Button, Badge  } from 'antd';\r\n\r\nclass EnCourseListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        const currentTitre = this.props.currentTitre;\r\n        const data = this.props.data;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        arrayData.reverse();\r\n        const liste = (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle' style={{height: '2.5em'}}>\r\n                        <Col span={24} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} >\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={item.key}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={20} sm={21} md={21} lg={22} onClick={() => this.props.isChecked(item, id)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Tooltip placement=\"top\" title='Commentaire' mouseEnterDelay={0.5}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Col span={24} className={item.show ? 'form-comm-container-active' : 'form-comm-container'}>\r\n                                    <form className='form-comm' onSubmit={e => this.props.closeComment(e, item)}>\r\n                                        <input \r\n                                            value={item.comment} \r\n                                            name='comment' \r\n                                            type='text'\r\n                                            id='inputComment'\r\n                                            placeholder='ajouter un commentaire'\r\n                                            onChange={(e) => this.props.addComment(e, item)}\r\n                                            className={item.show ? 'item message-enter-active' : 'item message-leave-active'}\r\n                                            maxLength={50}\r\n                                        />\r\n                                    </form>\r\n                                </Col>\r\n                            </Col>\r\n                    </List.Item>\r\n                    )}\r\n            />\r\n    \r\n    );\r\n        return ( \r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    <form className='form form-titre enCourse-form-titre' onSubmit={this.props.createNewItemLastMinute}>\r\n                        <input type='text' placeholder='Entrez un produit' maxLength={40} />\r\n                        <button type='submit' id='buttonSubmit'>+</button>\r\n                    </form>\r\n                </Col>\r\n                <Col span={24}>  \r\n                    {liste}\r\n                </Col>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseListItem;","import React, { Component } from 'react';\r\n\r\nimport EnCourseListItem from './EnCourseListItem';\r\n\r\nimport { Button, Icon, Col } from 'antd';\r\n\r\nclass EnCourseList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n                <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{this.props.currentTitre}</h3>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <EnCourseListItem\r\n                        createNewItemLastMinute={this.props.createNewItemLastMinute}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        listeDeBase={this.props.listeDeBase}\r\n                        closeComment={this.props.closeComment}\r\n                        indexItem={this.props.indexItem}\r\n                        createNewCategory={this.props.createNewCategory}\r\n                        isCategory={this.props.isCategory}\r\n                        currentCategory={this.props.currentCategory}\r\n                        toggleSwitch={this.props.toggleSwitch}\r\n                        numChildCategory={this.props.numChildCategory}\r\n                        deleteCategory={this.props.deleteCategory}\r\n                        currentTitre={this.props.currentTitre}\r\n                        checkCurrentCategory={this.props.checkCurrentCategory}\r\n                        isToggleSwitchType={this.props.isToggleSwitchType}\r\n                        toggleSwitchType={this.props.toggleSwitchType}\r\n                    />\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseList;","import React, { Component } from 'react';\r\nimport { Button, Icon, Col } from 'antd';\r\n\r\n// import MyLists from './MyLists';\r\nimport EnCourseList from './EnCourseList';\r\n\r\nclass EnCourse extends Component {\r\n    render() { \r\n        const listeDeBase = this.props.listeDeBase;\r\n        const liste = listeDeBase.map((item, id) =>\r\n            <Button \r\n                    size='large' \r\n                    block \r\n                    type=\"primary\" \r\n                    key={id}\r\n                    id={item}\r\n                    onClick={e => this.props.choixListe(e)}\r\n                    className='item-button'\r\n                    >\r\n                {item}\r\n            </Button>\r\n        );\r\n        return ( \r\n            <>\r\n            {/* <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                <h2>En Course</h2>\r\n            </Col> */}\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    {liste}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                </>\r\n                :\r\n                <Col span={24}>\r\n                    <EnCourseList\r\n                        currentTitre={this.props.currentTitre}\r\n                        createNewItemLastMinute={this.props.createNewItemLastMinute}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titreListe={this.props.titreListe}\r\n                        returnToApp={this.props.returnToApp}\r\n                        closeComment={this.props.closeComment}\r\n                        goHome={this.props.goHome}\r\n                        indexItem={this.props.indexItem}\r\n                        checkCurrentCategory={this.props.checkCurrentCategory}\r\n                    />\r\n                </Col>\r\n            }\r\n            \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourse;","import React, { Component } from 'react';\r\n\r\nimport '../NewApp.css';\r\n\r\nimport { Button, Col } from 'antd';\r\n\r\nclass Menu extends Component {\r\n    render() { \r\n        return ( \r\n            <> \r\n                <div className='intro' style={this.props.clickedText ? {display : 'none'} : {dispay : 'block'}}>\r\n                    <p>\r\n                    Bienvenue dans la version 1 de mon application de liste de course interactive!\r\n                    Tout d'abord merci pour le temps que vous me consacrer afin que je puisse l'améliorer!\r\n                    Il s'agit d'une application de liste de course qui permet/permettra de faire ses courses\r\n                    plus rapidement seul ou à plusieurs.\r\n                    </p>\r\n                    <p>\r\n                    On peut y mettre des commentaires, trier par catégorie, et bientôt pleins d'autres options.\r\n                    </p>\r\n                    <p>\r\n                    Le desgin de l'application n'est pas fait...désolé si ce n'est pas encore très beau, je me\r\n                    concentre sur les fonctionnalités.\r\n                    </p>\r\n                    <p>\r\n                    Pour le moment, une personne par compte, \"mon profile\" n'est pas encore fonctionnel,\r\n                    \"mes listes\" et \"en course\" sont quasi identique mais ça va changer.\r\n                    </p>\r\n                    <p>\r\n                    Merci de noter si vous rencontrez des difficultés, ce qui fonctionne et ce qui ne fonctionne\r\n                    pas, ce que vous ne comprennez pas et au contraire ce qui est très clair. Ca m'aidera\r\n                    dans l'amélioration de cette application!\r\n                    </p>\r\n                        <Col span={6} push={18}>\r\n                            <Button block type=\"primary\" onClick={this.props.hideText} className='goBack'>\r\n                                Fermer\r\n                            </Button>\r\n                        </Col>\r\n                </div>\r\n                        <Button \r\n                            style={{ margin : '1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='enCourse'\r\n                            onClick={this.props.choixComponent}\r\n                            >En course!\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='mesListes'\r\n                            onClick={this.props.choixComponent}\r\n                        >Créer une liste\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\" \r\n                            className='item-button'\r\n                            name='monProfile'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mon profile\r\n                        </Button>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Row, Col } from 'antd';\r\n\r\nclass ProfilUser extends Component {\r\n    render() { \r\n        const user = this.props.user;\r\n        return ( \r\n            <div>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col  xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                    <h2>Bienvenue sur votre profile {user}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row type='flex' justify='left'>\r\n                    <Col span={6}>\r\n                    <div className='button-anth'>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilUser;","import React, { Component } from 'react';\n// import './App.css';\nimport './NewApp.css';\nimport 'antd/dist/antd.css';\nimport './animations.css';\n\nimport * as firebase from 'firebase';\nimport config from './firebase';\n\n//ANT design\nimport { Button, Row, Col, Layout, Icon  } from 'antd';\n\nimport Home from './Components/Home';\nimport Loading from './Components/Loading';\nimport EnCourse from './Components/EnCourse';\nimport Menu from './Components/Menu';\nimport ProfilUser from './Components/ProfilUser';\n\n// import data from './data';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nconst {\n  Header, Footer, Content,\n} = Layout;\n\n\n\n// const user = firebase.auth().currentUser.displayName;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    firebase.initializeApp(config);\n        this.state = {\n            listeDeBase: [],\n            data: [],\n            titreListe: [],\n            currentTitre: '',\n            choixComponent: 'menu',\n            currentCategory: '' || 'Ma super catégorie',\n            numChildCategory: 0,\n            isSignedIn: false,\n            clicked: false, \n            loading: true,\n            goHome: false,\n            isCategory: true,\n            clickedText : false,\n            indexItem: null,\n            isToggleSwitchType: false,\n            userId: '' || 'Mikael',\n            lastMinuteItem: false //verifie si un item a ete ajoute a la derniere minute\n        };\n      this.delete = this.delete.bind(this);\n      this.deleteCategory = this.deleteCategory.bind(this);\n      this.createNewItem = this.createNewItem.bind(this);\n      this.addNewListTitre = this.addNewListTitre.bind(this);\n      this.deconnexion = this.deconnexion.bind(this);\n}\n\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\n// componentWillMount() {\n//   //afin de charger correctement je décale d'une seconde\n//   setTimeout(() => {\n    \n//   }, 2000);\n  \n// }\n\ncomponentDidMount() {\n  this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        if(user) {\n          // console.log(user);\n          this.setState({isSignedIn: !!user, userId: user.displayName})\n        } else {\n          console.log(user);\n        }\n      }\n  );\n  // console.log(this.unregisterAuthObserver());\n}\n\ncomponentWillUnmount() {\n  this.unregisterAuthObserver();\n}\n\n  animFormButton = (button) => {\n    button.classList.add('formButton-active');\n    setTimeout(() => {\n        button.classList.remove('formButton-active');\n    }, 500);\n  }\n\n  animFormElt = (elt) => {\n    elt.classList.add('message-enter');\n  }\n\n  getDataBase = () => {\n    setTimeout(() => {\n    const user = this.state.userId;\n    const ref = firebase.database().ref(`${user}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            console.log('entrain de charger la db');\n            Object.keys(snapshot.val()).map(item =>\n              listItem.push(item)\n            );\n            this.setState({\n              listeDeBase: listItem,\n              data: snapshot.val(),\n              loading: false\n            });\n            } else {\n              this.setState({\n                loading: false\n            });\n          }\n        });\n      }, 2000);\n  }\n\n  // Regarde si un produit est checked en mode collapse\n  isChecked = (item, id) => {\n    const user = this.state.userId;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    console.log(collapse);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    console.log(currentCategory);\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{checked : true} } : product));\n    item.checked = !item.checked;\n\n    this.setState({ data: newData });\n    // A ESSAYER POUR METTRE A JOUR LE STATE\n    // this.setState(state => {\n    //   const data = state.data.map((item, j) => {\n    //     if (j === id) {\n    //       return item.checked = !item.checked;\n    //     } else {\n    //       return item;\n    //     }\n    //   });\n\n    //   return {\n    //     data,\n    //   };\n    // });\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n}\n  // Delete un produit\n  delete(item, id){\n    const user = this.state.userId;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const contentElt = collapse.parentElement;\n    const currentTitre = this.state.currentTitre;\n    \n    this.setState({ \n      indexItem: `elt-${item.item}`,\n      numChildCategory: contentElt.childElementCount\n  });\n  //A ESSAYER POUR METTRE A JOUR LE STATE\n  // this.setState(state => {\n  //   const data = Object.keys(state.data).filter(item => item.id !== id);\n\n  //   return {\n  //     data,\n  //   };\n  // });\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    if(contentElt.childElementCount === 1) {\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n        const indexCat = snapshot.key;\n          setTimeout(() => {\n            firebase.database().ref(`${user}/${currentTitre}/category/${indexCat}`).remove();\n          }, 400);\n      });\n      setTimeout(() => {\n        this.setState({ indexItem: null});\n      }, 410);\n    } else {\n        firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n          snapshot.forEach(function(childSnapshot){\n            setTimeout(() => {\n              const indexItem = childSnapshot.key;\n              firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems/${indexItem}`).remove();\n            }, 400);\n          });\n        });\n        setTimeout(() => {\n          this.setState({ indexItem: null});\n        }, 410);\n    }\n      \n      \n  }\n\n  // delete une catégorie\n  deleteCategory = (item, id) => {\n    const user = this.state.userId;\n    // console.log(item.titreCat);\n    const collapse = document.getElementById(item.titreCat);\n    // console.log(collapse);\n    const currentTitre = this.state.currentTitre;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === collapse.id ? childSnapshot.key : null;\n      });\n    });\n    // console.log(index);\n\n    firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').on('value', snapshot => {\n        setTimeout(() => {\n          firebase.database().ref(`${user}/${currentTitre}/category/${index}`).remove();\n        }, 400);\n    });\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n  }\n\n  //PROBLEME QUAND ON SUPPRIME TOUTES LES LISTES ===> la derniere ne disparait pas\n  deleteList = (item) => {\n    const user = this.state.userId;\n    this.setState({ indexItem: `elt-${item}`});\n\n    setTimeout(() => {\n      firebase.database().ref(`${user}/${item}`).remove();\n    }, 400);\n\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n    \n  }\n\n  toggleComment = (item) => {\n    const user = this.state.userId;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{show : true} } : product));\n    item.show = !item.show;\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // Ajouter un commentaire à un élément de la liste\n  addComment = (event, item) => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const currentTitre = this.state.currentTitre;\n    let commentName = event.target.value;\n    item.comment = event.target.value;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{comment : commentName} } : product));\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // événement qui ferme le commentaire\n  closeComment = (event, item) => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{show : true} } : product));\n    item.show = !item.show;\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // Créer une catégorie dans la liste de course\n  createNewCategory = (event) => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const currentTitre = this.state.currentTitre;\n    const currentCategory = this.state.currentCategory;\n    const formInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('.form>button');\n    let category = '';\n    if(currentCategory === 'Ajout de dernière minute') {\n      category = 'Ajout de dernière minute';\n    } else {\n      category = formInput.value;\n    }\n    \n    if(formInput.value === '') {\n      return null\n    }\n    //Arriver a insérer une catégorie sans exemple de produit!\n    const data = {\n      titreCat: category\n    }\n\n    this.setState(prevState => ({\n      // listeDeBase: [...prevState.listeDeBase, category],\n      currentCategory: category,\n      isCategory: false\n    }));\n    \n    firebase.database().ref(`${user}/${currentTitre}/category`).push({\n      ...data\n    });\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n\n  }\n\n  //prend la catégorie choisie au clic\n  getCurrentCategory = titreCat => {\n    const currentCategory = titreCat;\n    this.setState({ currentCategory, isCategory: false });\n  }\n\n  // Bouton switch pour choisir entre produit et catégorie\n  toggleSwitch = (checked) => {\n    this.setState({ isCategory : checked === false ? false : true });\n  }\n\n  //bouton switch pour choisir entre collapse et liste\n  toggleSwitchType = (checked) => {\n    this.setState({ isToggleSwitchType : checked === false ? false : true });\n}\n\n  // Créer un élément de liste de course\n  createNewItem = (event) => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const currentCategory = this.state.currentCategory;\n    const currentTitre = this.state.currentTitre;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      show: false,\n    };\n    if(currentCategory === 'Ma super catégorie') {\n      this.createNewCategory(event);\n      return null;\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n  }\n\n  // Ajout d'un titre de liste de course\n  addNewListTitre = event => {\n    event.preventDefault();\n    // const user = this.state.userId;\n    const formInput = document.querySelector('#form-input');\n    const todoFormButton = document.querySelector('#myButtonSubmit');\n    const titre = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n    this.setState(prevState => ({\n      listeDeBase: [...prevState.listeDeBase, titre],\n      currentTitre: titre,\n      isCategory: true\n    }));\n\n    // firebase.database().ref(`${user}`).push({\n    //   titre\n    // });\n\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n  }\n\n  // Détecte quelle liste à été choisie\n  choixListe = (e) => {\n    const user = this.state.userId;\n    const titreListe = e.target.id;\n    const ref = firebase.database().ref(`${user}`);\n    // console.log(titreListe);\n\n    ref.on('value', snapshot => {\n      this.setState({\n        data: snapshot.val(),\n        currentTitre: titreListe,\n        clicked: true\n      });\n    });\n  }\n\n  // En Course --------> Check toute la catégorie\n  checkCurrentCategory = titreCat => {\n    console.log(titreCat);\n  }\n\n  // EN COURSE --------> Crée un item dans la catégorie derniere minute\n  createNewItemLastMinute = event => {\n    event.preventDefault();\n    const user = this.state.userId;\n    const currentCategory = this.state.currentCategory;\n    const currentTitre = this.state.currentTitre;\n    const lastMinuteItem = this.state.lastMinuteItem;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      show: false,\n    };\n\n    if(currentCategory === 'Ajout de dernière minute' && !lastMinuteItem) {\n      this.createNewCategory(event);\n      this.setState({ lastMinuteItem: true });\n      // return null;\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n  }\n\n  // utilisé sur bouton pour retour en arrière\n  goHome = () => {\n    this.setState({ clicked: false, isCategory: true });\n  }\n\n  // retour au menu de l'accueil\n  returnToApp = () => {\n    this.setState({ choixComponent: 'menu' });\n  }\n\n  // détecte le composant choisi à l'accueil\n  choixComponent = (event) => {\n    const choixComponent = event.target.name;\n    if(choixComponent !== '') {\n      if(choixComponent === 'enCourse') {\n        this.setState({ choixComponent, currentCategory: 'Ajout de dernière minute' });\n      } else {\n        this.setState({ choixComponent, currentCategory: 'Ma super catégorie' });\n      }\n    }\n  }\n\n  hideText = () => {\n    const clickedText = this.state.clickedText;\n    this.setState({ clickedText : !clickedText });\n}\n\ndeconnexion = event => {\n  event.preventDefault();\n  firebase.auth().signOut();\n  // console.log(firebase.auth().currentUser.displayName);\n}\n\n  //renvoie dans le render le composent choisit\n  renderChoiseConponent = () => {\n    const name = this.state.choixComponent;\n    switch(name) {\n      case 'enCourse':\n      return <EnCourse\n                returnToApp={this.returnToApp}\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                closeComment={this.closeComment}\n                createNewItemLastMinute={this.createNewItemLastMinute}\n                goHome={this.goHome}\n                currentTitre={this.state.currentTitre}\n                data={this.state.data}\n                checkCurrentCategory={this.checkCurrentCategory}\n              />\n      case 'mesListes':\n      return <Home\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                addNewListTitre={this.addNewListTitre}\n                deleteList={this.deleteList}\n                loading={this.state.loading}\n                data={this.state.data}\n                returnToApp={this.returnToApp}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                closeComment={this.closeComment}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                createNewCategory={this.createNewCategory}\n                isCategory={this.state.isCategory}\n                currentCategory={this.state.currentCategory}\n                toggleSwitch={this.toggleSwitch}\n                numChildCategory={this.state.numChildCategory}\n                deleteCategory={this.deleteCategory}\n                currentTitre={this.state.currentTitre}\n                getCurrentCategory={this.getCurrentCategory}\n                isToggleSwitchType={this.state.isToggleSwitchType}\n                toggleSwitchType={this.toggleSwitchType}\n              />\n      case 'monProfile':\n      return <ProfilUser\n              returnToApp={this.returnToApp}\n              user={this.state.userId}\n              />\n      default:\n      return null\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n        {/* {console.log('this state isSignedIn n\\'existe pas')} */}\n          <Col xs={{ span: 16 }} md={{ span: 14}} lg={{ span: 10 }} id='connexion'>\n            <h1>Check-List-Course</h1>\n            <p>Veuillez vous connecter svp:</p>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n          </Col>\n        </Row>\n      );\n    }\n    if(this.state.loading) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n        {this.getDataBase()}\n          <Col xs={{ span: 16 }} md={{ span: 14 }} lg={{ span: 10}} id='load'>\n            <Loading/>\n          </Col>\n        </Row>\n      )\n    }\n    return (\n      <>\n      <Row type=\"flex\" justify=\"space-around\" id='main'>\n        <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} id='mainCol' >\n        <Layout>\n          <Header>\n              <span><Icon type=\"shopping-cart\" /></span>\n              <h4>Check-Course</h4>\n          </Header>\n        <Content>\n          {\n            this.state.choixComponent === 'menu' ?\n            <Menu\n              choixComponent={this.choixComponent}\n              user={this.state.userId}\n              hideText={this.hideText}\n              clickedText={this.state.clickedText}\n            />\n            :\n            this.renderChoiseConponent()\n          }\n              <Col span={6}>\n                  <Button \n                    type='primary'\n                    block \n                    onClick={e => this.deconnexion(e)} \n                    className='goBack'\n                    >\n                      Déconnexion\n                  </Button>\n              </Col>\n          </Content>\n            <Footer>\n              <p>Created By Mikael</p>\n            </Footer>\n          </Layout>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}