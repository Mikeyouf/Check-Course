{"version":3,"sources":["img/prochainement2.png","firebase.js","Components/ItemList.js","Components/MyLists.js","Components/Home.js","Components/Loading.js","Components/EnCourseList.js","Components/EnCourse.js","Components/Menu.js","Components/ProfilUser.js","Components/HeaderMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ItemList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","liste","_this$props","currentTitre","data","inverseProduit","arrayData","keys","map","item","category","categoryItem","push","reverse","elt","id","react_default","a","createElement","list","key","concat","titreCat","header","row","type","justify","align","col","xs","md","lg","className","onClick","getCurrentCategory","sm","es_button","style","background","name","block","categoryVisible","categoryIsVisible","color","deleteCategory","icon","fontSize","bordered","dataSource","categoryItems","renderItem","Item","span","isChecked","border","toggleComment","comment","count","badge","status","itemVisible","itemIsVisible","delete","state","_this2","_this$props2","largeur","visible","drawerWidth","Fragment","drawer","placement","width","onClose","e","modalContent","Component","MyLists","help","notification","open","message","description","duration","textAlign","window","addEventListener","handleScroll","removeEventListener","isCategory","showForm","currentCategory","positionY","scrollY","onScroll","padding","onSubmit","createNewCategory","createNewItem","es_switch","checkedChildren","unCheckedChildren","checked","onChange","toggleSwitch","placeholder","maxLength","showFormulaire","Components_ItemList","addComment","titre","titreListe","closeComment","indexItem","numChildCategory","marginRight","goHome","Home","newListe","listeDeBase","filter","choixListe","size","deleteList","clicked","Components_MyLists","returnToApp","isToggleSwitchType","toggleSwitchType","followWindow","length","addNewListTitre","Loading","react_loading_default","height","EnCourseList","checkCurrentCategory","countItem","createNewItemLastMinute","modalContentCourse","EnCourse","Components_EnCourseList","handleScrollButton","Menu","margin","choixComponent","ProfilUser","user","userUid","newUserUid","choixUserUid","linkName","marginBottom","toggleSwitchHelp","toggleSwitchInverseProduit","toggleSwitchFollowWindow","choisirUserUid","changeUserUid","required","valideChangeUserUid","HeaderMenu","menu","handleClick","selectedKeys","choixComponentState","mode","Header","Layout","Footer","Content","Meta","Card","TextArea","Input","Option","Select","App","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","animFormButton","button","classList","add","setTimeout","remove","animFormElt","getDataBase","myUser","userId","currentUser","ref","on","snapshot","listItem","val","setState","currentUserUid","followers","loading","set","userName","getOtherDataBase","curentUser","handleResize","hauteur","innerHeight","innerWidth","event","isScroll","formElt","document","getElementById","lastPositionY","updates","update","target","value","changeUserInput","error","text","success","_this$state","collapse","querySelector","parentElement","toggle","product","objectSpread","index","forEach","childSnapshot","itemKey","orderByChild","equalTo","onChangeComment","newComment","items","onChangeCount","newCount","addCount","onChangeTypeCount","newTypeCount","typeCount","_this$state2","gutter","slider","min","max","input_number","marginLeft","es_select","defaultValue","autosize","minRows","maxRows","rows","cols","autoFocus","autoComplete","marginTop","_this$state3","image","skeleton","paragraph","title","alt","src","prochainement","card","paddingTop","cover","avatar","backgroundColor","preventDefault","_this$state4","_this$state5","newData","show","_this$state6","formInput","todoFormButton","timestamp","Date","now","todoFormInput","prevState","toConsumableArray","console","log","lastMinuteItem","hasTitreCat","hideText","clickedText","deconnexion","signOut","renderChoiseConponent","Components_EnCourse","Components_Home","Components_ProfilUser","config","isSignedIn","totalItem","bind","assertThisInitialized","unregisterAuthObserver","onAuthStateChanged","uid","displayName","_this3","contentElt","childNodes","indexCat","Components_Loading","layout","Components_HeaderMenu","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.537bb1a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/prochainement2.cbd80974.png\";","export default {\r\n    apiKey: \"AIzaSyASNdLHf9itHbMfni5KLun3kcA57LFgkFg\",\r\n    authDomain: \"check-list-course.firebaseapp.com\",\r\n    databaseURL: \"https://check-list-course.firebaseio.com\",\r\n    projectId: \"check-list-course\",\r\n    storageBucket: \"check-list-course.appspot.com\",\r\n    messagingSenderId: \"873680903792\"\r\n}","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport { List, Row, Col, Icon, Button, Badge, Drawer } from 'antd';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n         }\r\n    }\r\n    liste = () => {\r\n        const { currentTitre, data, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        return (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                        <Col xs={16} md={18} lg={20} className='titreCat' onClick={() => this.props.getCurrentCategory(elt.titreCat, elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                        <Col xs={4} sm={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"isVisible\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={() => this.props.categoryVisible(elt, id)}>\r\n                                    {\r\n                                        elt.categoryIsVisible ?\r\n                                        <i className=\"far fa-eye\" style={{ color: 'aliceblue' }}/>\r\n                                        :\r\n                                        <i className=\"far fa-eye-slash\" style={{ color: 'aliceblue' }}/>\r\n                                    }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col xs={4} md={3} lg={2}>\r\n                            <Button \r\n                                name=\"trash\" \r\n                                className=\"trash\"\r\n                                block\r\n                                type='primary'\r\n                                onClick={() => this.props.deleteCategory(elt, id)}>\r\n                                <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat}>\r\n                            <Col span={24} >\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={item.key}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={12} sm={15} md={15} lg={18} onClick={() => this.props.isChecked(item, id)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Button \r\n                                            name=\"comment\" \r\n                                            className='comment' \r\n                                            style={{ background: 'transparent', border: 'none' }}\r\n                                            type='primary'\r\n                                            block\r\n                                            onClick={() => this.props.toggleComment(item)}>\r\n                                            >\r\n                                            {\r\n                                                item.comment === '' && item.count === 0 ?\r\n                                                <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                :\r\n                                                <Badge status=\"success\">\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                </Badge>\r\n                                            }\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                        <Button \r\n                                            style={{ background: 'transparent' }}\r\n                                            name=\"isVisible\" \r\n                                            className=\"trash\"\r\n                                            type='primary'\r\n                                            block\r\n                                            onClick={() => this.props.itemVisible(item, id)}>\r\n                                                {\r\n                                                    item.itemIsVisible ?\r\n                                                    <i className=\"far fa-eye\"></i>\r\n                                                    :\r\n                                                    <i className=\"far fa-eye-slash\"></i>\r\n                                                }\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                            <Button \r\n                                                style={{ background: 'transparent' }}\r\n                                                name=\"trash\" \r\n                                                className=\"trash\"\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.delete(item, id)}>\r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                    </List.Item>\r\n                    )}\r\n            />\r\n    \r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible } = this.props;\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        return ( \r\n            <>\r\n            {this.liste()}\r\n                <Drawer\r\n                    // title='commentaire'\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={this.props.visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContent(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, notification, Switch } from 'antd';\r\n\r\nimport ItemList from './ItemList';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Ajouter une catégorie',\r\n        description: \"Pour ajouter une catégorie, cliquez sur \\\"Ajouter une catégorie\\\" et écrivez le nom que vous désirez, par exemple \\\"Boissons\\\". Pour finaliser, cliquez sur le +.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Ajouter un produit',\r\n                description: \"Pour ajouter un produit, cliquez sur \\\"Ajouter un produit\\\" et écrivez le nom que vous désirez, par exemple \\\"Eau\\\". Pour finaliser, cliquez sur le +. Vous pouvez ajouter autant de produits que vous le désirez.\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                  onClose: () => {\r\n                    notification.open({\r\n                        message: 'Astuce!',\r\n                        description: \"Pour ajouter un produit dans une catégorie existente, cliquez sur le nom de la catégorie voulue, ensuite il vous suffit d'ajouter un produit.\",\r\n                        duration: 0,\r\n                        style: {\r\n                            textAlign: 'justify'\r\n                          }\r\n                      });\r\n                  }\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass MyLists extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n    \r\n    render() { \r\n        const { isCategory, showForm, currentCategory } = this.props;\r\n        const positionY = window.scrollY;\r\n        return ( \r\n            <Col onScroll={e => this.props.handleScroll(e)} className='containerList'>\r\n                <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{this.props.currentTitre}</h3>\r\n                </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                        { showForm ?\r\n                        <form className={showForm && positionY <= 80 ? 'form form-titre' : 'form form-titre fixedPosition'} id='myForm' onSubmit={isCategory === true ? e => this.props.createNewCategory(e) : e => this.props.createNewItem(e)}>\r\n                            <Switch checkedChildren=\"C\" unCheckedChildren=\"P\" checked={isCategory === true ? true : false}  onChange={this.props.toggleSwitch} id='switchButton'/>\r\n                            <input \r\n                                id='myInput' \r\n                                type='text' \r\n                                placeholder={isCategory === true ? 'Ajouter une catégorie' : currentCategory === 'Ma super catégorie' ? 'Ajouter une catégorie' : `Ajouter à ${currentCategory}` } \r\n                                maxLength={40} \r\n                            />\r\n                            <button type='submit' id='buttonSubmit' >\r\n                                <Icon type=\"plus\" />\r\n                            </button>\r\n                        </form>\r\n                        :\r\n                        <button type='button' className={!showForm && positionY <= 80 ? '' : 'fixedPosition'} id='buttonSubmit2' onClick={this.props.showFormulaire} >\r\n                            <Icon type=\"edit\" style={{ fontSize: '2.5em' }}/>\r\n                        </button>\r\n                        }\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <ItemList\r\n                            data={this.props.data}\r\n                            isChecked={this.props.isChecked}\r\n                            delete={this.props.delete}\r\n                            toggleComment={this.props.toggleComment}\r\n                            addComment={this.props.addComment}\r\n                            titre={this.props.titreListe}\r\n                            closeComment={this.props.closeComment}\r\n                            indexItem={this.props.indexItem}\r\n                            currentCategory={this.props.currentCategory}\r\n                            numChildCategory={this.props.numChildCategory}\r\n                            deleteCategory={this.props.deleteCategory}\r\n                            currentTitre={this.props.currentTitre}\r\n                            getCurrentCategory={this.props.getCurrentCategory}\r\n                            inverseProduit={this.props.inverseProduit}\r\n                            visible={this.props.visible}\r\n                            onClose={this.props.onClose}\r\n                            item={this.props.item}\r\n                            modalContent={this.props.modalContent}\r\n                            largeur={this.props.largeur}\r\n                            itemIsVisible={this.props.itemIsVisible}\r\n                            itemVisible={this.props.itemVisible}\r\n                            categoryVisible={this.props.categoryVisible}\r\n                            categoryIsVisible={this.props.categoryIsVisible}\r\n                        />\r\n                    </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyLists;","import React, { Component } from 'react';\r\n\r\nimport MyLists from './MyLists';\r\n\r\nimport { Button, Icon, Col, notification, List } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Créer une liste de course',\r\n        description: \"Pour créer une liste, il vous suffit simplement d'écrire son nom dans la case \\\"ajouter une liste\\\" et de cliquer sur le +. Ensuite cliquez sur le nom de votre liste qui vient d'apparaitre en dessous. Vous pouvez en créer maximum 3.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        // onClose: () => {\r\n        //   alert('clicked');\r\n        // },\r\n      });\r\n  };\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const { listeDeBase } = this.props;\r\n        const newListe = listeDeBase.filter(listeDeBase => listeDeBase !== 'user');\r\n            return (\r\n                <List\r\n                    bordered\r\n                    dataSource={newListe}\r\n                    renderItem={ (item, id) =>\r\n                        <List.Item >\r\n                            <Col span={24} key={id} className='listeDeBase'>  \r\n                                <Col xs={{ span: 20 }} md={{ span: 21 }} lg={{ span: 22 }} key={`elt-${item}`} id={item} onClick={e => this.props.choixListe(e)}>\r\n                                    {item}\r\n                                </Col>\r\n                                <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                    <Button \r\n                                        size='large' \r\n                                        name=\"trash\" \r\n                                        type=\"primary\"\r\n                                        block \r\n                                        className=\"trash\" \r\n                                        onClick={() => this.props.deleteList(item)}\r\n                                    >  \r\n                                        <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                    </Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </List.Item>\r\n                    }\r\n                />\r\n            )};\r\n        \r\n    render() {\r\n        const {listeDeBase} = this.props;\r\n        return (\r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    { \r\n                        listeDeBase.length >= 4 ?\r\n                        null\r\n                        :\r\n                        <form className='formulaire form-titre' onSubmit={e => this.props.addNewListTitre(e)}>\r\n                            <input type='text' id='form-input' placeholder='Ajouter une liste' maxLength={30}/>\r\n                            <button type='submit' id='myButtonSubmit'>+</button>\r\n                        </form>\r\n                    }\r\n                \r\n                    <Col>\r\n                        {this.liste()}\r\n                    </Col>\r\n                    <Col span={6} style={{ marginRight: '1em' }}>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </Col>\r\n                </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n                <MyLists\r\n                    currentTitre={this.props.currentTitre}\r\n                    createNewItem={this.props.createNewItem}\r\n                    data={this.props.data}\r\n                    isChecked={this.props.isChecked}\r\n                    delete={this.props.delete}\r\n                    toggleComment={this.props.toggleComment}\r\n                    addComment={this.props.addComment}\r\n                    titreListe={this.props.titreListe}\r\n                    returnToApp={this.props.returnToApp}\r\n                    closeComment={this.props.closeComment}\r\n                    goHome={this.props.goHome}\r\n                    indexItem={this.props.indexItem}\r\n                    createNewCategory={this.props.createNewCategory}\r\n                    isCategory={this.props.isCategory}\r\n                    toggleSwitch={this.props.toggleSwitch}\r\n                    numChildCategory={this.props.numChildCategory}\r\n                    deleteCategory={this.props.deleteCategory}\r\n                    getCurrentCategory={this.props.getCurrentCategory}\r\n                    isToggleSwitchType={this.props.isToggleSwitchType}\r\n                    toggleSwitchType={this.props.toggleSwitchType}\r\n                    help={this.props.help}\r\n                    inverseProduit={this.props.inverseProduit}\r\n                    visible={this.props.visible}\r\n                    onClose={this.props.onClose}\r\n                    item={this.props.item}\r\n                    modalContent={this.props.modalContent}\r\n                    largeur={this.props.largeur}\r\n                    itemIsVisible={this.props.itemIsVisible}\r\n                    itemVisible={this.props.itemVisible}\r\n                    handleScroll={this.props.handleScroll}\r\n                    followWindow={this.props.followWindow}\r\n                    showForm={this.props.showForm}\r\n                    showFormulaire={this.props.showFormulaire}\r\n                    currentCategory={this.props.currentCategory}\r\n                    categoryVisible={this.props.categoryVisible}\r\n                    categoryIsVisible={this.props.categoryIsVisible}\r\n                />\r\n            </Col>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => (\r\n    <ReactLoading \r\n    type=\"cylon\" \r\n    color=\"#078073\" \r\n    className=\"load\"\r\n    id=\"load\"\r\n    height={200}\r\n    width={200}\r\n    />\r\n)\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, List, Row, Badge, notification, Drawer  } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Astuce',\r\n        description: \"Lorsque vous faites vos courses, il suffit de cliquer sur un produit pour qu'il soit \\\"barré\\\" et \\\"grisé\\\".\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Astuce',\r\n                description: \"Vous ouvez rajouter un produit de dernière minute en l'ajoutant dans la case \\\"Entrez un produit\\\".\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n              });\r\n            }\r\n      });\r\n  };\r\n\r\nclass EnCourseList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            countItem: 0\r\n         }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n        // window.addEventListener('scroll', this.props.handleScrollButton);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n        // window.removeEventListener('scroll', this.props.handleScrollButton);\r\n    }\r\n\r\n    // countProduit = (arrayData) => {\r\n    //     // const { data, currentTitre } = this.props;\r\n    //     let countItemPos = [];\r\n    //     let countItemMin = [];\r\n    //     // const arrayData = [];\r\n    //     // Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n    //     Object.keys(arrayData).map(elt => Object.keys(arrayData[elt].categoryItems).map((item) => arrayData[elt].categoryItems[item].checked ? countItemPos.push(item) : countItemMin.push(item) ));\r\n    //     const countItem = countItemMin.length - countItemPos.length;\r\n    //     this.setState({ countItem });\r\n    // }\r\n\r\n    liste = () => {\r\n        const { currentTitre, data, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        \r\n        return (arrayData || []).map((elt, id) =>\r\n        <>\r\n        {\r\n            elt.categoryIsVisible ?\r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle' style={{height: '2.5em'}}>\r\n                        <Col span={24} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <>\r\n                    {\r\n                    item.itemIsVisible ?\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} >\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={item.key}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={20} sm={21} md={21} lg={22} onClick={() => this.props.isChecked(item, id)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                // size='large'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' && item.count === 0 ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                    </List.Item>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                    )}\r\n            />\r\n            :\r\n            null\r\n        }\r\n        </>\r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible, showForm } = this.props;\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        const positionY = window.scrollY;\r\n        return ( \r\n            <Col onScroll={ e => this.props.handleScroll(e) } className='containerList'>\r\n                <Col xs={{ span: 12, push: 6 }} sm={{ span: 10, push: 6 }} md={{ span: 8, push: 8 }} lg={{ span: 6, push: 9}}>\r\n                    <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{this.props.currentTitre}</h3>\r\n                </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                    {\r\n                        showForm ?\r\n                        <form id='myForm' className={showForm && positionY <= 80 ? 'formu formu-titre enCourse-formu-titre' : 'formu formu-titre enCourse-formu-titre fixedPosition'} onSubmit={this.props.createNewItemLastMinute}>\r\n                            <input type='text' placeholder='Produit de dernière minute' maxLength={40} />\r\n                            <button type='submit' id='buttonSubmit' onClick={this.props.showFormulaire}>\r\n                                <Icon type=\"plus\" />\r\n                            </button>\r\n                        </form>\r\n                        :\r\n                        <button type='button' className={!showForm && positionY <= 80 ? '' : 'fixedPosition'} id='buttonSubmit2' onClick={this.props.showFormulaire} >\r\n                            <Icon type=\"edit\" style={{ fontSize: '2.5em' }}/>\r\n                        </button>\r\n                    }\r\n                    </Col>\r\n               <Col span={24}>\r\n                {/* <Row gutter={16}>  */}\r\n                    {this.liste()}\r\n                {/* </Row> */}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={this.props.visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContentCourse(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseList;","import React, { Component } from 'react';\r\nimport { Button, Icon, Col, List } from 'antd';\r\n\r\n// import MyLists from './MyLists';\r\nimport EnCourseList from './EnCourseList';\r\n\r\nclass EnCourse extends Component {\r\n    liste = () => {\r\n        const {listeDeBase} = this.props;\r\n        const newListe = listeDeBase.filter(listeDeBase => listeDeBase !== 'user');\r\n        return ( \r\n            <List\r\n                bordered\r\n                dataSource={newListe}\r\n                renderItem={ (item, id) =>\r\n                    <List.Item >\r\n                        <Col span={24} key={id} className='listeDeBaseEnCourse'>  \r\n                            <Col xs={{ span: 20 }} md={{ span: 21 }} lg={{ span: 22 }} key={`elt-${item}`} id={item} onClick={e => this.props.choixListe(e)}>\r\n                                {item}\r\n                            </Col>\r\n                        </Col>\r\n                    </List.Item>\r\n                }\r\n            />\r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                </>\r\n                :\r\n                <Col span={24}>\r\n                    <EnCourseList\r\n                        currentTitre={this.props.currentTitre}\r\n                        createNewItemLastMinute={this.props.createNewItemLastMinute}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titreListe={this.props.titreListe}\r\n                        returnToApp={this.props.returnToApp}\r\n                        closeComment={this.props.closeComment}\r\n                        goHome={this.props.goHome}\r\n                        indexItem={this.props.indexItem}\r\n                        checkCurrentCategory={this.props.checkCurrentCategory}\r\n                        help={this.props.help}\r\n                        inverseProduit={this.props.inverseProduit}\r\n                        visible={this.props.visible}\r\n                        onClose={this.props.onClose}\r\n                        item={this.props.item}\r\n                        largeur={this.props.largeur}\r\n                        modalContentCourse={this.props.modalContentCourse}\r\n                        showFormulaire={this.props.showFormulaire}\r\n                        showForm={this.props.showForm}\r\n                        handleScroll={this.props.handleScroll}\r\n                        handleScrollButton={this.props.handleScrollButton}\r\n                    />\r\n                </Col>\r\n            }\r\n            \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourse;","import React, { Component } from 'react';\r\n\r\nimport '../NewApp.css';\r\n\r\nimport { Button, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Liste de course interactive',\r\n        description: \"Bienvenue sur votre application de liste de course. Pour commencer, veuillez cliquer sur \\\"créer une liste\\\". Si vous avez déjà créé une liste, cliquez sur \\\"En course\\\" lorsque vous faites vos course.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          }\r\n      });\r\n  };\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                        <Button \r\n                            style={{ margin : '1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='enCourse'\r\n                            onClick={this.props.choixComponent}\r\n                            >Faire ses courses\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='mesListes'\r\n                            onClick={this.props.choixComponent}\r\n                        >Créer une liste\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\" \r\n                            className='item-button'\r\n                            name='monProfil'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mon profil\r\n                        </Button>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Row, Col, notification, Switch } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Votre profil',\r\n        description: \"Bientôt vous aurez la possibilité de modifier votre profil et bien plus encore!\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Se connecter à un autre profil',\r\n                description: \"Il vous suffit de recopier l'identifiant de la liste que vous souhaitez rejoindre et de valider. Ensuite cliquez sur cette liste pour la rejoindre!\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                // onClose: () => {\r\n                //   alert('clicked');\r\n                // },\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass ProfilUser extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const { user, help, inverseProduit, userUid, newUserUid, choixUserUid, linkName, followWindow } = this.props;\r\n        return ( \r\n            <Col span={24}>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col  xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                    <h2>Bienvenue sur votre profil {user}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Aide : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={help === true ? true : false} onChange={this.props.toggleSwitchHelp} id='switchButtonHelp'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Inverser l'ordre des produits : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={inverseProduit === true ? true : false} onChange={this.props.toggleSwitchInverseProduit} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Case d'ajout de produit qui suit l'écran : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={followWindow === true ? true : false} onChange={this.props.toggleSwitchFollowWindow} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Votre identifiant : </b>{userUid}</span>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                        <Button block type={choixUserUid ? \"primary\" : \"default\"} name={userUid}  onClick={!choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                        {choixUserUid ? <span>Votre liste</span>: <span>Rejoindre votre liste</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <Button block type={choixUserUid ? \"default\" : \"primary\"} name={newUserUid} onClick={choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                            {choixUserUid ? <span>Rejoindre la liste de {linkName}</span>: <span>Liste de {linkName}</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Ajouter un identifiant : </b></span>\r\n                        <input type='text' placeholder='Entrez le nouvel identifiant' onChange={this.props.changeUserUid} required={true}/>\r\n                        <Button type=\"primary\" onClick={this.props.valideChangeUserUid} className='changeUid'>\r\n                            <Icon type=\"check\" />Valider\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row type='flex' justify='left'>\r\n                    <Col span={6}>\r\n                    <div className='button-anth'>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilUser;","import React, { Component } from 'react';\r\n\r\nimport { Menu, Icon } from 'antd';\r\n\r\nclass HeaderMenu extends Component {\r\n    render() { \r\n        return ( \r\n            <Menu\r\n            onClick={this.props.handleClick}\r\n            selectedKeys={[this.props.choixComponentState]}\r\n            mode=\"horizontal\"\r\n          >\r\n            <Menu.Item key=\"menu\">\r\n                <Icon type=\"home\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"mesListes\">\r\n                <Icon type=\"ordered-list\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"enCourse\">\r\n                <Icon type=\"shopping\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"monProfil\">\r\n                <Icon type=\"user\" />\r\n            </Menu.Item>\r\n          </Menu>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HeaderMenu;","import React, { Component } from 'react';\n// import './App.css';\nimport './NewApp.css';\nimport 'antd/dist/antd.css';\nimport './animations.css';\n\nimport * as firebase from 'firebase';\nimport config from './firebase';\n\n//ANT design\nimport { \n  Row, Col, Layout, Icon, message, Input, Slider, InputNumber, Select, Card, Avatar, Skeleton \n} from 'antd';\n\nimport Home from './Components/Home';\nimport Loading from './Components/Loading';\nimport EnCourse from './Components/EnCourse';\nimport Menu from './Components/Menu';\nimport ProfilUser from './Components/ProfilUser';\nimport HeaderMenu from './Components/HeaderMenu';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport prochainement from './img/prochainement2.png';\n\nconst {\n  Header, Footer, Content,\n} = Layout;\nconst { Meta } = Card;\n\nconst {TextArea} = Input;\nconst Option = Select.Option;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    firebase.initializeApp(config);\n        this.state = {\n            listeDeBase: [],\n            data: [],\n            item: null,\n            titreListe: [],\n            currentTitre: '',\n            choixComponent: 'menu',\n            currentCategory: '' || 'Ma super catégorie',\n            numChildCategory: 0,\n            isSignedIn: false,\n            clicked: false, \n            loading: true,\n            goHome: false,\n            isCategory: true,\n            clickedText : false,\n            indexItem: null,\n            isToggleSwitchType: false,\n            help: true,\n            inverseProduit: true,\n            userId: '' || 'Mikael',\n            userUid: '',\n            newUserUid: '',\n            choixUserUid: true,\n            changeUserInput: false,\n            currentUserUid: '',\n            linkName: '',\n            followers: [],\n            count: 0,\n            countItem: 0,\n            typeCount: 'unité',\n            newComment: '',\n            showForm: false, //affiche ou non le form dans faire ses courses\n            visible: false, //affiche le drawer\n            itemIsVisible: true, //affiche ou non l'item dans la liste de course\n            categoryIsVisible: true, //affiche ou non la catégorie dans la liste de course\n            totalItem: 0,\n            isScroll: 0,\n            followWindow: true,\n            largeur: 0,\n            hauteur: 0,\n            lastMinuteItem: false //verifie si un item a ete ajoute a la derniere minute\n        };\n      this.delete = this.delete.bind(this);\n      this.deleteCategory = this.deleteCategory.bind(this);\n      this.createNewItem = this.createNewItem.bind(this);\n      this.addNewListTitre = this.addNewListTitre.bind(this);\n      this.deconnexion = this.deconnexion.bind(this);\n}\n\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\ncomponentDidMount() {\n  const loading = this.state.loading;\n  this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n    (user) => {\n      if(user) {\n        if(loading) {\n          this.getDataBase(user.uid);\n        }\n        this.setState({\n          isSignedIn: !!user, \n          userId: user.displayName,\n          userUid: user.uid\n        });\n      } else {\n        return null\n      }\n    }\n);\n\n  //détection du changement de taille d'écran\n  this.handleResize();\n  window.addEventListener('resize', this.handleResize);\n  // window.addEventListener('scroll', this.handleScroll);\n\n  \n  // console.log(this.unregisterAuthObserver());\n  \n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('resize', this.handleResize); //on enlève l'évènement qui regarde la taille de la fenêtre\n  // window.removeEventListener('scroll', this.handleScroll);\n  this.unregisterAuthObserver();\n}\n\n  animFormButton = (button) => {\n    button.classList.add('formButton-active');\n    setTimeout(() => {\n        button.classList.remove('formButton-active');\n    }, 500);\n  }\n\n  animFormElt = (elt) => {\n    elt.classList.add('message-enter');\n  }\n\n  getDataBase = (myUser) => {\n    setTimeout(() => {\n    const user = this.state.userId;\n    const choixUserUid = this.state.choixUserUid;\n    const userUid = myUser || this.state.userUid;\n    const newUserUid = this.state.newUserUid;\n    const currentUser = choixUserUid ? userUid : newUserUid;\n    const ref = firebase.database().ref(`${currentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${userUid}/user/`).on('value', snapshot => {\n              this.setState({ \n                help: snapshot.val().help,\n                inverseProduit: snapshot.val().inverseProduit,\n                userUid: snapshot.val().userUid,\n                newUserUid: snapshot.val().newUserUid,\n                choixUserUid: snapshot.val().choixUserUid,\n                currentUserUid: snapshot.val().choixUserUid === true ? snapshot.val().userUid : snapshot.val().newUserUid,\n                linkName: snapshot.val().linkName,\n                followers: snapshot.val().followers,\n                followWindow: snapshot.val().followWindow\n               });\n               if(snapshot.val().choixUserUid) {\n                firebase.database().ref(`${currentUser}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               } else {\n                const newUserUid = snapshot.val().newUserUid;\n                firebase.database().ref(`${newUserUid}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               }\n            });\n            \n            } else {\n              firebase.database().ref(`${userUid}`).set({\n                user: {\n                  userName: user,\n                  userUid: userUid,\n                  newUserUid: '',\n                  help: true,\n                  inverseProduit: true,\n                  choixUserUid: true,\n                  linkName: '',\n                  followers: [],\n                  followWindow: true\n                }\n              });\n              this.setState({\n                loading: false\n            });\n          }\n        });\n      }, 2000);\n  }\n\n  //charger la database du compte sélectionné\n  getOtherDataBase = (linkName) => {\n    const curentUser = this.state.currentUserUid;\n    const user = this.state.userId;\n    const ref = firebase.database().ref(`${curentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${curentUser}/user`).on('value', snapshot => {\n              this.setState({ \n                linkName: snapshot.val().userName === user ? linkName : snapshot.val().userName  //probleme quand retour sur user d'origine\n               });\n            });\n            firebase.database().ref(`${curentUser}`).on('value', snapshot => {\n              Object.keys(snapshot.val()).map(item =>\n                listItem.push(item)\n              );\n                this.setState({\n                  listeDeBase: listItem,\n                  data: snapshot.val(),\n                  loading: false\n                  });\n              });\n            }\n        });\n        \n  }\n\n  showFormulaire = (e) => {\n    const showForm = this.state.showForm;\n    // const valueInput = document.getElementById('myInput');\n    // console.log(valueInput);\n    \n    setTimeout(() => {\n      this.setState({ showForm: !showForm });\n    }, 300);\n  }\n\n  //détecter la taille de la fenêtre\n  handleResize = () => this.setState({\n    hauteur: window.innerHeight,\n    largeur: window.innerWidth\n  });\n\n  // detection du scroll\n  handleScroll = event => {\n    const followWindow = this.state.followWindow;\n    const showForm = this.state.showForm;\n    let isScroll = 0;\n    const formElt = showForm ? document.getElementById('myForm') : document.getElementById('buttonSubmit2');\n    let lastPositionY = window.scrollY;\n    if(formElt && followWindow) {\n      if(isScroll !== lastPositionY && lastPositionY > 80) {\n        formElt.classList.add('opacity');\n        if(lastPositionY > 80) {\n          formElt.classList.add('fixedPosition');\n        }\n        setTimeout(() => {\n          isScroll = lastPositionY;\n          formElt.classList.remove('opacity');\n        }, 600);\n      }\n      if(lastPositionY <= 80) {\n        formElt.classList.remove('fixedPosition');\n      }\n    }\n}\n\n  // on ou off de l'aide\n  toggleSwitchHelp = (checked) => {\n    const user = this.state.userUid;\n    const help = this.state.help;\n    this.setState({ help : checked === true ? false : true });\n    let updates = {};\n    updates[`${user}/user/help`] = !help;\n    return firebase.database().ref().update(updates);\n  }\n\n  // on ou off pour inverser l'ordre des produits\n  toggleSwitchInverseProduit = (checked) => {\n    const user = this.state.userUid;\n    const inverseProduit = this.state.inverseProduit;\n    this.setState({ inverseProduit : checked === true ? true : false });\n    let updates = {};\n    updates[`${user}/user/inverseProduit`] = !inverseProduit;\n    return firebase.database().ref().update(updates);\n  }\n\n  toggleSwitchFollowWindow = checked => {\n    const user = this.state.userUid;\n    const followWindow = this.state.followWindow;\n    this.setState({ followWindow : checked === true ? true : false });\n    let updates = {};\n    updates[`${user}/user/followWindow`] = !followWindow;\n    return firebase.database().ref().update(updates);\n  }\n\n  // changer l'uid pour rejoindre une liste\n  changeUserUid = (event) => {\n    const newUserUid = event.target.value;\n    if(newUserUid.length > 20) {\n      this.setState({ newUserUid, changeUserInput: true });\n    }\n  }\n\n  error = text => {\n    message.error(`${text}`);\n  };\n\n  //valider le changement de l'uid\n  valideChangeUserUid = () => {\n    const newUserUid = this.state.newUserUid;\n    const changeUserInput = this.state.changeUserInput;\n    const user = this.state.userUid;\n    const userId = this.state.userId;\n    const followers = [];\n    const message = 'Utilisateur trouvé!'\n    //on rajoute le nom du followers\n    followers.push(userId);\n    let updates = {};\n    if(newUserUid !== '' && changeUserInput) {\n      firebase.database().ref(`${newUserUid}/user/userName`).on('value', snapshot => {\n        if(snapshot.val()) {\n          this.setState({ \n            linkName: snapshot.val(),\n            followers,\n            changeUserInput: false\n          });\n          updates[`${user}/user/linkName`] = snapshot.val();\n          firebase.database().ref().update(updates);\n\n          updates[`${user}/user/newUserUid`] = newUserUid;\n          firebase.database().ref().update(updates);\n      \n          // console.log(followers);\n          updates[`${newUserUid}/user/followers`] = followers;\n          firebase.database().ref().update(updates);\n\n          this.success(message);\n        } else {\n          this.error('Cet utilisateur n\\'existe pas');\n          return;\n        }\n      });\n    } else {\n      this.error('Erreur de saisie');\n    }\n  }\n\n  choisirUserUid = (event) => {\n    const choixUserUid = this.state.choixUserUid;\n    const user = this.state.userUid;\n    const linkName = this.state.linkName;\n    // console.log( 'choisir la db de', linkName);\n    this.setState({ \n      choixUserUid: !choixUserUid,\n      currentUserUid: event.target.name\n    });\n\n    const choixDB = !choixUserUid;\n    if(choixDB) {\n      setTimeout(() => {\n        this.getDataBase();\n        this.success('Liste chargée!');\n        this.setState({ \n          currentTitre: '',\n          clicked: false,\n          choixComponent: 'menu'\n        });\n      }, 2000);\n    } else {\n      setTimeout(() => {\n        this.getOtherDataBase(linkName);\n        this.success('Liste chargée!');\n        this.setState({ \n          currentTitre: '',\n          clicked: false,\n          choixComponent: 'menu'\n        });\n      }, 2000);\n    }\n    \n\n    let updates = {};\n    updates[`${user}/user/choixUserUid`] = !choixUserUid;\n    firebase.database().ref().update(updates);\n  }\n\n  // Regarde si un produit est checked en mode collapse\n  isChecked = (item, id) => {\n    const { currentUserUid, currentTitre, data } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const divElt = collapse.parentElement.parentElement.parentElement;\n    divElt.classList.toggle('flip');\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    Object.keys(data).map(elt => Object.keys(data[elt]).map(product => data[elt][product].key === item.key ? {...product, ...{checked : true} } : product));\n    item.checked = !item.checked;\n\n    this.setState({ \n      data\n    });\n    // A ESSAYER POUR METTRE A JOUR LE STATE\n    // this.setState(state => {\n    //   const data = state.data.map((item, j) => {\n    //     if (j === id) {\n    //       return item.checked = !item.checked;\n    //     } else {\n    //       return item;\n    //     }\n    //   });\n\n    //   return {\n    //     data,\n    //   };\n    // });\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n}\n  // Delete un produit\n  delete(item, id){\n    const user = this.state.currentUserUid;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const contentElt = collapse.parentElement.parentElement.parentElement.parentElement.childNodes;\n    const currentTitre = this.state.currentTitre;\n    \n    this.setState({ \n      indexItem: `elt-${item.item}`,\n      numChildCategory: contentElt.length\n  });\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    if(contentElt.length === 1) {\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n        const indexCat = snapshot.key;\n          setTimeout(() => {\n            firebase.database().ref(`${user}/${currentTitre}/category/${indexCat}`).remove();\n          }, 200);\n      });\n      setTimeout(() => {\n        this.setState({ indexItem: null});\n      }, 410);\n    } else {\n        firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n          snapshot.forEach(function(childSnapshot){\n            setTimeout(() => {\n              const indexItem = childSnapshot.key;\n              firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems/${indexItem}`).remove();\n            }, 400);\n          });\n        });\n        setTimeout(() => {\n          this.setState({ indexItem: null});\n        }, 210);\n    }\n  }\n\n  // delete une catégorie\n  deleteCategory = (item, id) => {\n    const user = this.state.currentUserUid;\n    const collapse = document.getElementById(item.titreCat);\n    const currentTitre = this.state.currentTitre;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === collapse.id ? childSnapshot.key : null;\n      });\n    });\n\n    firebase.database().ref(`${user}/${currentTitre}/category/${index}`).orderByChild('key').on('value', snapshot => {\n        setTimeout(() => {\n          firebase.database().ref(`${user}/${currentTitre}/category/${index}`).remove();\n        }, 400);\n    });\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n  }\n\n  deleteList = (item) => {\n    const user = this.state.currentUserUid;\n    this.setState({ indexItem: `elt-${item}`});\n\n    setTimeout(() => {\n      firebase.database().ref(`${user}/${item}`).remove();\n    }, 400);\n\n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 410);\n    \n  }\n\n  onChangeComment = (event, item) => {\n    const newComment = event.target.value;\n    const currentTitre = this.state.currentTitre;\n    const data = this.state.data;\n    Object.keys(data)\n      .map(elt => elt === currentTitre ? Object.keys(data[elt])\n        .map(product => Object.keys(data[elt][product])\n          .map(items => Object.keys(data[elt][product][items].categoryItems)\n            .map(keys => data[elt][product][items].categoryItems[keys].key === item.key ?\n              data[elt][product][items].categoryItems[keys].comment = newComment\n              :\n              keys\n              )\n            )\n              ) : null);\n              \n    this.setState({\n      data,\n      item,\n      newComment\n    });\n  }\n\n  onChangeCount = (value, item) => {\n    const newCount = value;\n    const currentTitre = this.state.currentTitre;\n    const data = this.state.data;\n    Object.keys(data)\n    .map(elt => elt === currentTitre ? Object.keys(data[elt])\n      .map(product => Object.keys(data[elt][product])\n        .map(items => Object.keys(data[elt][product][items].categoryItems)\n          .map(keys => data[elt][product][items].categoryItems[keys].key === item.key ?\n            data[elt][product][items].categoryItems[keys].count = newCount\n            :\n            keys\n            )\n          )\n            ) : null);\n    this.setState({\n      count: newCount,\n      data,\n      item\n    });\n  }\n\n  addCount = item => {\n    const currentTitre = this.state.currentTitre;\n    const data = this.state.data;\n    const newCount = this.state.count;\n    // console.log(\"count\", newCount);\n    Object.keys(data)\n    .map(elt => elt === currentTitre ? Object.keys(data[elt])\n      .map(product => Object.keys(data[elt][product])\n        .map(items => Object.keys(data[elt][product][items].categoryItems)\n          .map(keys => data[elt][product][items].categoryItems[keys].key === item.key ?\n            data[elt][product][items].categoryItems[keys].count = newCount\n            :\n            keys\n            )\n          )\n            ) : null);\n              \n    this.setState({\n      count: newCount\n    });\n  }\n\n  onChangeTypeCount = (value, item) => {\n    const newTypeCount = value;\n    const currentTitre = this.state.currentTitre;\n    const data = this.state.data;\n    Object.keys(data)\n    .map(elt => elt === currentTitre ? Object.keys(data[elt])\n      .map(product => Object.keys(data[elt][product])\n        .map(items => Object.keys(data[elt][product][items].categoryItems)\n          .map(keys => data[elt][product][items].categoryItems[keys].key === item.key ?\n            data[elt][product][items].categoryItems[keys].typeCount = newTypeCount\n            :\n            keys\n            )\n          )\n            ) : null);\n    this.setState({\n      typeCount: newTypeCount,\n      data,\n      item\n    });\n  }\n\n  modalContent = (item) => {\n    const { count, largeur, typeCount } = this.state;\n    return (\n      <>\n        <Row gutter={largeur > 720 ? 12 : 8}>\n          <Col span={ largeur > 720 ? 14 : 24 }>\n            <Slider\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              onChange={e => this.onChangeCount(e, item)}\n              value={typeof count === 'number' ? count : 0}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <InputNumber\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              style={{ marginLeft: 16, width: '90%' }}\n              value={count}\n              onChange={e => this.onChangeCount(e, item)}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <Select defaultValue={typeCount} onChange={e => this.onChangeTypeCount(e, item)} style={{ width: '90%' }}>\n              <Option value='unité'>{count <= 1 ? 'unité' : 'unités'}</Option>\n              <Option value='boite'>{count <= 1 ? 'boite' : 'boites'}</Option>\n              <Option value='litre'>{count <= 1 ? 'litre' : 'litres'}</Option>\n              <Option value='ml'>ml</Option>\n              <Option value='cl'>cl</Option>\n              <Option value='Kilo'>{count <= 1 ? 'kilo' : 'kilos'}</Option>\n              <Option value='Gramme'>{count <= 1 ? 'gramme' : 'grammes'}</Option>\n            </Select>\n          </Col>\n        </Row>\n        <TextArea \n          placeholder='ajouter un commentaire' \n          autosize={{ minRows: 5, maxRows: 10 }} \n          onChange={(e) => this.onChangeComment(e, item)}\n          value={item.comment} \n          rows={10}\n          cols={largeur > 720 ? 50 : 30}\n          autoFocus\n          autoComplete='on'\n          style={{ marginTop: '1em' }}\n        />\n      </>\n    )\n  }\n\n  modalContentCourse = item => {\n    const { count, largeur } = this.state;\n    const image = (\n        <Skeleton paragraph={{ rows: 4, width: ['90%', '90%','90%','90%'] }} title={false}>\n          <img alt=\"prochainement\" src={prochainement} />\n        </Skeleton>\n    )\n    return(\n        <Card\n          style={{ width: largeur > 720 ? '70%' : '90%', paddingTop: '1em'}}\n          cover={image}\n        >\n          <Meta\n            avatar={<Avatar style={{ backgroundColor: '#009688' }} icon=\"user\" />}\n            title={item.item}\n          />\n            <br/>\n            {\n              count ?\n              <>\n              <h4>Quantité</h4>\n              <p>{item.count} {item.typeCount}{count <= 1 ? '': 's'}</p>\n              </>\n              :\n              null\n            }\n            {\n              item.comment ?\n              <>\n                <h4>Commentaire</h4>\n                <p>{item.comment}</p>\n              </>\n              :\n              <>\n                <h4>Commentaire</h4>\n                <p>Rien ici!</p>\n              </>\n            }\n        </Card>\n    )\n  }\n\n  //faire apparaitre/disparaitre la commentaire\n  toggleComment = (item) => {\n    this.setState({ \n      visible: true,\n      item,\n      count: item.count,\n      typeCount: item.typeCount,\n    });\n  }\n\n  onClose = (event, item) => {\n    // this.addCount(item);\n    this.addComment(event, item);\n    this.setState({\n      visible: false,\n      count: 0,\n      typeCount: 'unité',\n    });\n  };\n\n  // Ajouter un commentaire à un élément de la liste\n  addComment = (event, items) => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const currentTitre = this.state.currentTitre;\n    const collapse = document.querySelector(`#elt-${items.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const item = this.state.item;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(items.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  //cache ou non une catégorie\n  categoryVisible = (elt, id) => {\n  const { currentUserUid, currentTitre } = this.state;\n  const currentCategory = elt.titreCat;\n\n  elt.categoryIsVisible = !elt.categoryIsVisible;\n\n  let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/`] = elt;\n          \n  return firebase.database().ref().update(updates);\n  }\n\n  itemVisible = (items, id) => {\n    const { currentUserUid, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${items.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    items.itemIsVisible = !items.itemIsVisible;\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(items.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = items;\n          \n  return firebase.database().ref().update(updates);\n  }\n\n  // événement qui ferme le commentaire\n  closeComment = (event, item) => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const currentTitre = this.state.currentTitre;\n    const newData = this.state.data;\n    Object.keys(newData).map(elt => Object.keys(newData[elt]).map(product => newData[elt][product].key === item.key ? {...product, ...{show : true} } : product));\n    item.show = !item.show;\n\n    this.setState({data : newData});\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${user}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  // Créer une catégorie dans la liste de course\n  createNewCategory = (event) => {\n    event.preventDefault();\n    const { currentUserUid, currentTitre, currentCategory, choixComponent } = this.state;\n    const formInput = document.querySelector('#myForm>input');\n    const todoFormButton = document.querySelector('#myForm>button');\n    let category = '';\n    if(currentCategory === 'Ajout de dernière minute' && choixComponent === 'enCourse') {\n      category = 'Ajout de dernière minute';\n    } else {\n      category = formInput.value;\n    }\n    \n    if(formInput.value === '') {\n      this.setState({ \n        showForm: false\n      });\n      return null\n    }\n    //Arriver a insérer une catégorie sans exemple de produit!\n    const data = {\n      titreCat: category,\n      categoryIsVisible: true\n    }\n\n    this.setState({\n      currentCategory: category,\n      isCategory: false,\n      showForm: true\n    });\n    \n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).push({\n      ...data\n    });\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n\n  }\n\n  //message qui annonce la catégorie sélectionnée\n  success = text => {\n    message.success(`${text}`);\n  };\n\n  //prend la catégorie choisie au clic\n  getCurrentCategory = (titreCat, elt) => {\n    const currentCategory = titreCat;\n    this.setState({ currentCategory, isCategory: false });\n    this.success(titreCat);\n  }\n\n  // Bouton switch pour choisir entre produit et catégorie\n  toggleSwitch = (checked) => {\n    this.setState({ isCategory : checked === false ? false : true });\n  }\n\n  //bouton switch pour choisir entre collapse et liste\n  toggleSwitchType = (checked) => {\n    this.setState({ isToggleSwitchType : checked === false ? false : true });\n}\n\n  // Créer un élément de liste de course\n  createNewItem = (event) => {\n    event.preventDefault();\n    const user = this.state.currentUserUid;\n    const currentCategory = this.state.currentCategory;\n    const currentTitre = this.state.currentTitre;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n\n    if(todoFormInput.value === '') {\n      this.setState({ \n        showForm: false\n      });\n      return null\n    }\n\n    if(currentCategory === 'Ma super catégorie') {\n      this.createNewCategory(event);\n      return null;\n    }\n\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n  }\n\n  // Ajout d'un titre de liste de course\n  addNewListTitre = event => {\n    event.preventDefault();\n    // const user = this.state.userId;\n    const formInput = document.querySelector('#form-input');\n    const todoFormButton = document.querySelector('#myButtonSubmit');\n    const titre = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n    this.setState(prevState => ({\n      listeDeBase: [...prevState.listeDeBase, titre],\n      currentTitre: titre,\n      isCategory: true\n    }));\n\n    // firebase.database().ref(`${user}`).push({\n    //   titre\n    // });\n\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n  }\n\n  // Détecte quelle liste à été choisie\n  choixListe = (e) => {\n    const user = this.state.currentUserUid;\n    const titreListe = e.target.id;\n    const ref = firebase.database().ref(`${user}`);\n    // console.log(titreListe);\n\n    ref.on('value', snapshot => {\n      this.setState({\n        data: snapshot.val(),\n        currentTitre: titreListe,\n        clicked: true\n      });\n    });\n  }\n\n  // En Course --------> Check toute la catégorie\n  checkCurrentCategory = titreCat => {\n    console.log(titreCat);\n  }\n\n  // EN COURSE --------> Crée un item dans la catégorie derniere minute\n  createNewItemLastMinute = event => {\n    event.preventDefault();\n    const todoFormInput = document.querySelector('.formu>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    if(!newData) {\n      return\n    }\n    const user = this.state.currentUserUid;\n    const currentCategory = this.state.currentCategory;\n    const currentTitre = this.state.currentTitre;\n    const lastMinuteItem = this.state.lastMinuteItem;\n    const timestamp = Date.now();\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    //on regarde si la catégorie existe déjà pour ne pas en recréer une identique\n    let hasTitreCat = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n         return hasTitreCat = childSnapshot.val().titreCat === 'Ajout de dernière minute';\n      });\n    });\n\n    if(currentCategory === 'Ajout de dernière minute' && !lastMinuteItem && !hasTitreCat) {\n      this.createNewCategory(event);\n      this.setState({ lastMinuteItem: true });\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${user}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n    this.setState({ showForm: false });\n  }\n\n  // utilisé sur bouton pour retour en arrière\n  goHome = () => {\n    this.setState({ clicked: false, isCategory: true });\n  }\n\n  // retour au menu de l'accueil\n  returnToApp = () => {\n    this.setState({ choixComponent: 'menu' });\n  }\n\n  // détecte le composant choisi à l'accueil\n  choixComponent = (event) => {\n    const choixComponent = event.target.name;\n    if(choixComponent !== '') {\n      if(choixComponent === 'enCourse') {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ajout de dernière minute',\n          showForm: false\n        });\n      } else {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ma super catégorie',\n          showForm: false\n        });\n      }\n    }\n  }\n\n  hideText = () => {\n    const clickedText = this.state.clickedText;\n    this.setState({ clickedText : !clickedText });\n}\n\ndeconnexion = event => {\n  event.preventDefault();\n  firebase.auth().signOut();\n  // console.log(firebase.auth().currentUser.displayName);\n}\n\n//choix composant via headermenu\nhandleClick = (e) => {\n  const choixComponent = e.key;\n  if(choixComponent !== '') {\n    if(choixComponent === 'enCourse') {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ajout de dernière minute',\n        clicked: false,\n        currentTitre: '',\n        showForm: false\n      });\n    } else {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ma super catégorie',\n        clicked: false,\n        currentTitre: '',\n        showForm: false,\n        isCategory: true\n      });\n    }\n  }\n}\n\n  //renvoie dans le render le composent choisit\n  renderChoiseConponent = () => {\n    const name = this.state.choixComponent;\n    switch(name) {\n      case 'enCourse':\n      return <EnCourse\n                returnToApp={this.returnToApp}\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                closeComment={this.closeComment}\n                createNewItemLastMinute={this.createNewItemLastMinute}\n                goHome={this.goHome}\n                currentTitre={this.state.currentTitre}\n                data={this.state.data}\n                checkCurrentCategory={this.checkCurrentCategory}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                largeur={this.state.largeur}\n                modalContentCourse={this.modalContentCourse}\n                showFormulaire={this.showFormulaire}\n                showForm={this.state.showForm}\n                handleScroll={this.handleScroll}\n              />\n      case 'mesListes':\n      return <Home\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                addNewListTitre={this.addNewListTitre}\n                deleteList={this.deleteList}\n                loading={this.state.loading}\n                data={this.state.data}\n                returnToApp={this.returnToApp}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                closeComment={this.closeComment}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                createNewCategory={this.createNewCategory}\n                isCategory={this.state.isCategory}\n                currentCategory={this.state.currentCategory}\n                toggleSwitch={this.toggleSwitch}\n                numChildCategory={this.state.numChildCategory}\n                deleteCategory={this.deleteCategory}\n                currentTitre={this.state.currentTitre}\n                getCurrentCategory={this.getCurrentCategory}\n                isToggleSwitchType={this.state.isToggleSwitchType}\n                toggleSwitchType={this.toggleSwitchType}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                modalContent={this.modalContent}\n                largeur={this.state.largeur}\n                itemIsVisible={this.state.itemIsVisible}\n                itemVisible={this.itemVisible}\n                handleScroll={this.handleScroll}\n                showForm={this.state.showForm}\n                showFormulaire={this.showFormulaire}\n                categoryVisible={this.categoryVisible}\n                categoryIsVisible={this.state.categoryIsVisible}\n              />\n      case 'monProfil':\n      return <ProfilUser\n              returnToApp={this.returnToApp}\n              user={this.state.userId}\n              toggleSwitchHelp={this.toggleSwitchHelp}\n              help={this.state.help}\n              toggleSwitchInverseProduit={this.toggleSwitchInverseProduit}\n              inverseProduit={this.state.inverseProduit}\n              userUid={this.state.userUid}\n              changeUserUid={this.changeUserUid}\n              valideChangeUserUid={this.valideChangeUserUid}\n              newUserUid={this.state.newUserUid}\n              choixUserUid={this.state.choixUserUid}\n              choisirUserUid={this.choisirUserUid}\n              linkName={this.state.linkName}\n              followWindow={this.state.followWindow}\n              toggleSwitchFollowWindow={this.toggleSwitchFollowWindow}\n              />\n      default:\n      return null\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14}} lg={{ span: 10 }} id='connexion'>\n            <h1>Check-List-Course</h1>\n            <p>Veuillez vous connecter svp:</p>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n          </Col>\n        </Row>\n      );\n    }\n    if(this.state.loading) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n        {/* {this.getDataBase()} */}\n          <Col xs={{ span: 16 }} md={{ span: 14 }} lg={{ span: 10}} id='load'>\n            <Loading/>\n            <h3>Chargement du caddie</h3>\n          </Col>\n        </Row>\n      )\n    }\n    \n    return (\n      <>\n      <Row type=\"flex\" justify=\"space-around\" id='main'>\n        <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} id='mainCol' >\n        <Layout>\n          <Header \n            style={{ \n              padding : this.state.largeur >= 480 ? '0 50px' : '0'\n            }}>\n            <Col xs={0} lg={4}>\n              {\n                this.state.largeur >= 480 ? \n                <h4><Icon type=\"shopping-cart\" /> Check-Course</h4>\n                :\n                null\n              }\n            </Col>\n            <Col xs={24} lg={20} \n              style={{\n                textAlign : this.state.largeur >= 480 ? 'right' : 'center',\n                fontSize : this.state.largeur >= 480 ? '0.9em' : '0.7em'\n              }}\n            >\n                <HeaderMenu\n                  handleClick={this.handleClick}\n                  choixComponent={this.choixComponent}\n                  choixComponentState={this.state.choixComponent}\n                />\n            </Col>\n          </Header>\n        <Content>\n          \n          {\n            this.state.choixComponent === 'menu' ?\n            <>\n              <Col span={24} id={this.state.largeur >= 480 ? 'bckLogo' : 'bckLogo2'}>\n                <Icon type=\"shopping-cart\" />\n                <h2>CHECK-COURSE</h2>\n              </Col>\n              <Menu\n                choixComponent={this.choixComponent}\n                user={this.state.userId}\n                hideText={this.hideText}\n                clickedText={this.state.clickedText}\n                help={this.state.help}\n              />\n            </>\n            :\n            this.renderChoiseConponent()\n          }\n              {/* <Col span={6}>\n                  <Button \n                    type='primary'\n                    block \n                    onClick={e => this.deconnexion(e)} \n                    className='goBack'\n                    >\n                      Déconnexion\n                  </Button>\n              </Col> */}\n          </Content>\n            <Footer>\n              <p>Created By Mikael</p>\n            </Footer>\n          </Layout>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}