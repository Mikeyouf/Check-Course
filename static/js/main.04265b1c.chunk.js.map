{"version":3,"sources":["img/prochainement2.png","firebase.js","Components/Item.js","Components/ItemList.js","Components/MyLists.js","Components/Home.js","Components/Loading.js","Components/EnCourseList.js","Components/EnCourseItem.js","Components/EnCourse.js","Components/Menu.js","Components/ProfilUser.js","Components/HeaderMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Item","_this$props","this","props","item","itemKey","comment","count","itemIsVisible","itemVisible","deleteItem","toggleComment","changeItem","itemIsChanged","handleChangeItem","valideChangeItem","itemSelected","react_default","a","createElement","col","span","row","type","justify","align","key","id","concat","xs","sm","md","lg","onClick","className","input","value","placeholder","onChange","onKeyUp","es_button","name","style","background","border","block","icon","color","fontSize","badge","status","Component","ItemList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderData","data","currentTitre","inverseProduit","arrayData","keys","map","category","categoryItem","push","reverse","setState","liste","state","_this$props2","inputOpen","currentCategory","elt","list","titreCat","locale","emptyText","header","checkCurrentCategory","categoryVisible","categoryIsVisible","deleteCategory","footer","Fragment","onSubmit","e","createNewItem","maxLength","autoFocus","ref","nameInput2","openInput","bordered","dataSource","categoryItems","renderItem","checked","Components_Item","delete","prevProps","prevState","nameInput","focus","_this2","_this$props3","largeur","visible","showForm","drawerWidth","createNewCategory","showFormulaire","length","loadListExemple","drawer","placement","width","onClose","modalContent","MyLists","help","notification","open","message","description","duration","textAlign","window","addEventListener","handleScroll","removeEventListener","onScroll","padding","reloadList","Components_ItemList","addComment","titre","titreListe","indexItem","numChildCategory","marginRight","goHome","Home","choixUserUid","newData","choixListe","size","changeLocked","locked","popconfirm","title","onConfirm","confirmDelete","onCancel","cancel","okText","cancelText","listeDeBase","clicked","Components_MyLists","returnToApp","isCategory","toggleSwitchType","followWindow","addNewListTitre","Loading","react_loading_default","height","countItem","EnCourseList","countProduit","countItemPos","countItemNeg","countTotal","isChecked","positionY","scrollY","createNewItemLastMinute","offset","backgroundColor","boxShadow","modalContentCourse","EnCourseItem","EnCourse","Components_EnCourseItem","Components_EnCourseList","closeComment","handleScrollButton","Menu","margin","choixComponent","ProfilUser","user","userUid","newUserUid","linkName","toggleSwitchHelp","toggleSwitchInverseProduit","marginBottom","es_switch","checkedChildren","unCheckedChildren","toggleSwitchFollowWindow","choisirUserUid","changeUserUid","required","valideChangeUserUid","pull","deconnexion","borderRadius","marginLeft","HeaderMenu","menu","handleClick","selectedKeys","choixComponentState","mode","Header","Layout","Footer","Content","Meta","Card","TextArea","Input","Option","Select","App","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","animFormButton","button","classList","add","setTimeout","remove","animFormElt","getDataBase","myUser","_this$state","userId","currentUser","on","snapshot","listItem","val","currentUserUid","followers","loading","set","userName","getOtherDataBase","curentUser","handleResize","hauteur","innerHeight","innerWidth","_this$state2","isScroll","formElt","document","getElementById","lastPositionY","updates","update","event","target","changeUserInput","error","text","_this$state3","success","_this$state4","_this$state5","collapse","querySelector","parentElement","toggle","index","forEach","childSnapshot","orderByChild","equalTo","_this$state6","contentElt","childNodes","indexCat","deleteList","onChangeComment","newComment","onChangeCount","onChangeTypeCount","typeCount","_this$state7","gutter","slider","min","max","input_number","es_select","defaultValue","autosize","minRows","maxRows","rows","cols","autoComplete","marginTop","ontSize","onPressEnter","_this$state8","image","skeleton","paragraph","alt","src","prochainement","card","paddingTop","cover","avatar","items","preventDefault","_this$state9","_this$state10","_this$state11","_this$state12","_this$state13","formInput","todoFormButton","cat","charAt","toUpperCase","substring","toLowerCase","categoryExist","objectSpread","config","top","_this$state14","timestamp","Date","now","todoFormInput","dataElt","show","toConsumableArray","lastChild","firstChild","children","_this$state15","lastMinuteItem","hasTitreCat","_this$state16","hideText","clickedText","_this$state17","signOut","then","isSignedIn","catch","console","log","renderChoiseConponent","Components_EnCourse","Components_Home","isToggleSwitchType","Components_ProfilUser","totalItem","bind","assertThisInitialized","unregisterAuthObserver","onAuthStateChanged","uid","displayName","Components_Loading","layout","Components_HeaderMenu","Components_Menu","StyledFirebaseAuth_default","firebaseAuth","Boolean","location","hostname","match","ReactDOM","render","locale_provider","fr_FR","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04265b1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/prochainement2.cbd80974.png\";","export default {\r\n    apiKey: \"AIzaSyASNdLHf9itHbMfni5KLun3kcA57LFgkFg\",\r\n    authDomain: \"check-list-course.firebaseapp.com\",\r\n    databaseURL: \"https://check-list-course.firebaseio.com\",\r\n    projectId: \"check-list-course\",\r\n    storageBucket: \"check-list-course.appspot.com\",\r\n    messagingSenderId: \"873680903792\"\r\n}","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport { Row, Col, Button, Icon, Badge, Input  } from 'antd';\r\n\r\nclass Item extends Component {\r\n    render() { \r\n        const { \r\n            item, itemKey, comment, count, \r\n            itemIsVisible, itemVisible, deleteItem, \r\n            toggleComment, changeItem, itemIsChanged, \r\n            handleChangeItem, valideChangeItem, itemSelected\r\n        } = this.props;\r\n        return ( \r\n            <Col span={24} >\r\n                <Row \r\n                    type=\"flex\" \r\n                    justify=\"space-between\" \r\n                    align=\"middle\"\r\n                    key={itemKey}\r\n                    id={`elt-${itemKey}`}\r\n                >\r\n                {\r\n                    itemIsChanged && itemSelected === itemKey ?\r\n                    <Col xs={12} sm={15} md={15} lg={18} onClick={changeItem} className={'ant-list-items-item'}>\r\n                        <Input type='text' value={item} placeholder='Modifier le produit' onChange={handleChangeItem} onKeyUp={valideChangeItem}/>\r\n                    </Col>\r\n                    :\r\n                    <Col xs={12} sm={15} md={15} lg={18} onClick={changeItem} className={'ant-list-items-item'}>\r\n                        {item}\r\n                    </Col>\r\n                }\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                        <Button \r\n                            name=\"comment\" \r\n                            className='comment' \r\n                            style={{ background: 'transparent', border: 'none' }}\r\n                            type='primary'\r\n                            block\r\n                            onClick={toggleComment}>\r\n                            >\r\n                            {\r\n                                comment === '' && count === 0 ?\r\n                                <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                :\r\n                                <Badge status=\"success\">\r\n                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                </Badge>\r\n                            }\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                        <Button \r\n                            style={{ background: 'transparent' }}\r\n                            name=\"isVisible\" \r\n                            className=\"trash\"\r\n                            type='primary'\r\n                            block\r\n                            onClick={itemVisible}>\r\n                                {\r\n                                    itemIsVisible ?\r\n                                    <i className=\"far fa-eye\"></i>\r\n                                    :\r\n                                    <i className=\"far fa-eye-slash\"></i>\r\n                                }\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={4} sm={3} md={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"trash\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={deleteItem}>\r\n                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                            </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Item;","import React, { Component } from 'react';\r\n\r\nimport '../animations.css';\r\nimport '../NewApp.css';\r\n\r\nimport Item from './Item'\r\n\r\nimport { List, Row, Col, Icon, Button, Drawer } from 'antd';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrayData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.data !== this.props.data) {\r\n            this.renderData();\r\n        }\r\n        if(this.nameInput) {\r\n            this.nameInput.focus();\r\n        }\r\n        if(this.nameInput2) {\r\n            this.nameInput2.focus();\r\n        }\r\n    }\r\n\r\n    renderData = () => {\r\n        const { data, currentTitre, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? \r\n                Object.keys(data[item])\r\n                    .map(category => Object.keys(data[item][category])\r\n                        .map(categoryItem => arrayData.push(data[item][category][categoryItem])))\r\n                : null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        this.setState({ arrayData });\r\n    }\r\n\r\n    liste = () => {\r\n        const { arrayData } = this.state;\r\n        const { inputOpen, currentCategory, itemIsChanged } = this.props;\r\n        if(!arrayData) {\r\n            return null\r\n        }\r\n        return (arrayData || []).map((elt, id) => \r\n            <List\r\n                key={`listId-${id}`}\r\n                id={elt.titreCat}\r\n                locale={{ emptyText: 'Veuillez ajouter un produit' }}\r\n                header={\r\n                    <Row type=\"flex\" justify=\"space-between\" align='middle'>\r\n                        <Col xs={16} md={18} lg={20} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                        <Col xs={4} sm={3} lg={2}>\r\n                            <Button \r\n                                style={{ background: 'transparent' }}\r\n                                name=\"isVisible\" \r\n                                className=\"trash\"\r\n                                type='primary'\r\n                                block\r\n                                onClick={() => this.props.categoryVisible(elt)}>\r\n                                    {\r\n                                        elt.categoryIsVisible ?\r\n                                        <i className=\"far fa-eye\" style={{ color: 'aliceblue' }}/>\r\n                                        :\r\n                                        <i className=\"far fa-eye-slash\" style={{ color: 'aliceblue' }}/>\r\n                                    }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col xs={4} md={3} lg={2}>\r\n                            <Button \r\n                                name=\"trash\" \r\n                                className=\"trash\"\r\n                                block\r\n                                type='primary'\r\n                                onClick={() => this.props.deleteCategory(elt, id)}>\r\n                                <Icon type='delete' style={{ color : '#FFF', fontSize: '1.4em' }}/>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                footer={\r\n                    <>\r\n                    {\r\n                        inputOpen && currentCategory === elt.titreCat ? \r\n                        <Row type=\"flex\" justify=\"center\" align='middle'>\r\n                            <form className='form form-titre' id='myForm' onSubmit={ e => this.props.createNewItem(e)}>\r\n                                <input \r\n                                    id='myInput' \r\n                                    type='text' \r\n                                    placeholder='Ajouter un produit'\r\n                                    maxLength={40} \r\n                                    autoFocus={true} \r\n                                    ref={input => { this.nameInput2 = input }} \r\n                                />\r\n                                <button type='submit' id='buttonSubmit'>\r\n                                    <Icon type=\"plus\" />\r\n                                </button>\r\n                            </form>\r\n                        </Row>\r\n                        :\r\n                        <Row \r\n                            type=\"flex\" \r\n                            justify=\"center\" \r\n                            align='middle' \r\n                            onClick={() => this.props.openInput(elt.titreCat)}\r\n                            >\r\n                            <p>Ajouter un produit</p>\r\n                        </Row>\r\n                    }\r\n                    </>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <List.Item key={`listItemId-${id}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                        <Item\r\n                            item={item.item}\r\n                            itemKey={item.key}\r\n                            comment={item.comment}\r\n                            count={item.count}\r\n                            itemIsVisible={item.itemIsVisible}\r\n                            itemIsChanged={this.props.itemIsChanged}\r\n                            itemSelected={this.props.itemSelected}\r\n\r\n                            handleChangeItem={e => this.props.handleChangeItem(e, item)}\r\n                            valideChangeItem={e => this.props.valideChangeItem(e, item)}\r\n                            changeItem={() => this.props.changeItem(item)}\r\n                            toggleComment={() => this.props.toggleComment(item)}\r\n                            itemVisible={() => this.props.itemVisible(item)}\r\n                            deleteItem={() => this.props.delete(item)}\r\n                        />\r\n                    </List.Item>\r\n                    )}\r\n            />\r\n    \r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible, showForm } = this.props;\r\n        const { arrayData } = this.state;\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        return ( \r\n            <>\r\n            {\r\n                showForm ?\r\n                    <form className='form form-titre' id='myForm' onSubmit={ e => this.props.createNewCategory(e)}>\r\n                        <input \r\n                            id='myInput2'\r\n                            type='text' \r\n                            placeholder='Ajouter une catégorie'\r\n                            maxLength={40} \r\n                            autoFocus={true} \r\n                            ref={input => { this.nameInput = input }} \r\n                        />\r\n                        <button type='submit' id='buttonSubmit'>\r\n                            <Icon type=\"plus\" />\r\n                        </button>\r\n                    </form>\r\n                :\r\n                <>\r\n                <Row \r\n                    className='ant-list-footer addCategory' \r\n                    type=\"flex\" \r\n                    justify=\"center\" \r\n                    align='middle'\r\n                    onClick={this.props.showFormulaire}\r\n                    >\r\n                    <p>Ajouter une catégorie</p>\r\n                </Row>\r\n                {\r\n                    arrayData.length === 0 ?\r\n                    <Col xs={{ span: 6}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                        <Button block type=\"primary\" className='reload' onClick={this.props.loadListExemple}>\r\n                            <Icon type=\"download\" />\r\n                            Charger un exemple\r\n                        </Button>\r\n                    </Col>\r\n                    :\r\n                    null\r\n                }\r\n                </>\r\n            }\r\n            {this.liste()}\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContent(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, notification } from 'antd';\r\n\r\nimport ItemList from './ItemList';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Ajouter une catégorie',\r\n        description: \"Pour ajouter une catégorie, cliquez sur \\\"Ajouter une catégorie\\\" et écrivez le nom que vous désirez, par exemple \\\"Boissons\\\". Pour finaliser, cliquez sur le +.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Ajouter un produit',\r\n                description: \"Pour ajouter un produit, cliquez sur \\\"Ajouter un produit\\\" et écrivez le nom que vous désirez, par exemple \\\"Eau\\\". Pour finaliser, cliquez sur le +. Vous pouvez ajouter autant de produits que vous le désirez.\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                  onClose: () => {\r\n                    notification.open({\r\n                        message: 'Astuce!',\r\n                        description: \"Pour ajouter un produit dans une catégorie existente, cliquez sur le nom de la catégorie voulue, ensuite il vous suffit d'ajouter un produit.\",\r\n                        duration: 0,\r\n                        style: {\r\n                            textAlign: 'justify'\r\n                          }\r\n                      });\r\n                  }\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass MyLists extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n    \r\n    render() { \r\n        const { currentTitre } = this.props;\r\n        return ( \r\n            <Col onScroll={e => this.props.handleScroll(e)} className='containerList'>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                                <h3 className='titreListe'>\r\n                                    <i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>\r\n                                    {currentTitre}\r\n                                </h3>\r\n                            </Col>\r\n                            <Col xs={{ span: 6}} sm={{ span: 5}} md={{ span: 4}} lg={{ span: 6}}>\r\n                                <Button block type=\"primary\" className='reload' onClick={this.props.reloadList}>\r\n                                    <Icon type=\"reload\" />\r\n                                </Button>\r\n                            </Col>\r\n                        </>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <ItemList\r\n                            data={this.props.data}\r\n                            changeItem={this.props.changeItem}\r\n                            itemIsChanged={this.props.itemIsChanged}\r\n                            handleChangeItem={this.props.handleChangeItem}\r\n                            valideChangeItem={this.props.valideChangeItem}\r\n                            itemSelected={this.props.itemSelected}\r\n                            delete={this.props.delete}\r\n                            toggleComment={this.props.toggleComment}\r\n                            addComment={this.props.addComment}\r\n                            titre={this.props.titreListe}\r\n                            indexItem={this.props.indexItem}\r\n                            numChildCategory={this.props.numChildCategory}\r\n                            deleteCategory={this.props.deleteCategory}\r\n                            currentTitre={this.props.currentTitre}\r\n                            inverseProduit={this.props.inverseProduit}\r\n                            visible={this.props.visible}\r\n                            onClose={this.props.onClose}\r\n                            item={this.props.item}\r\n                            modalContent={this.props.modalContent}\r\n                            largeur={this.props.largeur}\r\n                            itemIsVisible={this.props.itemIsVisible}\r\n                            itemVisible={this.props.itemVisible}\r\n                            categoryVisible={this.props.categoryVisible}\r\n                            categoryIsVisible={this.props.categoryIsVisible}\r\n                            createNewItem={this.props.createNewItem}\r\n                            inputOpen={this.props.inputOpen}\r\n                            openInput={this.props.openInput}\r\n                            currentCategory={this.props.currentCategory}\r\n                            showForm={this.props.showForm}\r\n                            createNewCategory={this.props.createNewCategory}\r\n                            showFormulaire={this.props.showFormulaire}\r\n                            checkCurrentCategory={this.props.checkCurrentCategory}\r\n                            loadListExemple={this.props.loadListExemple}\r\n                        />\r\n                    </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyLists;","import React, { Component } from 'react';\r\n\r\nimport MyLists from './MyLists';\r\n\r\nimport { Button, Icon, Col, notification, List, Popconfirm } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Créer une liste de course',\r\n        description: \"Pour créer une liste, il vous suffit simplement d'écrire son nom dans la case \\\"ajouter une liste\\\" et de cliquer sur le +. Ensuite cliquez sur le nom de votre liste qui vient d'apparaitre en dessous. Vous pouvez en créer maximum 3.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        // onClose: () => {\r\n        //   alert('clicked');\r\n        // },\r\n      });\r\n  };\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    liste = () => {\r\n        const { data, choixUserUid } = this.props;\r\n        const newData = [];\r\n        Object.keys(data).map(item => item !== 'user' ? newData.push(item) : null); //on enlève user des items\r\n            return (\r\n                <List\r\n                    bordered\r\n                    locale={{ emptyText: 'Veuillez créer une liste' }}\r\n                    dataSource={newData}\r\n                    renderItem={ (item, id) => (\r\n                        <>\r\n                        {\r\n                        item ?\r\n                            <>\r\n                            {\r\n                                choixUserUid ?\r\n                                <List.Item >\r\n                                    <Col span={24} key={id} className='listeDeBase'>  \r\n                                        <Col xs={{ span: 16 }} md={{ span: 18 }} lg={{ span: 20 }} key={`elt-${item}`} id={`id-${item}`} onClick={() => this.props.choixListe(item)}>\r\n                                            {item}\r\n                                        </Col>\r\n                                        <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                            <Button\r\n                                                size='large'\r\n                                                name=\"trash\" \r\n                                                type=\"primary\"\r\n                                                block \r\n                                                className=\"trash\"\r\n                                                onClick={() => this.props.changeLocked(data[item], item)}\r\n                                            >  \r\n                                            {\r\n                                                !data[item].locked ?\r\n                                                <Icon type=\"unlock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                :\r\n                                                <Icon type=\"lock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                            }\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                            <Popconfirm title=\"Confirmer pour effacer\" onConfirm={() => this.props.confirmDelete(item)} onCancel={this.props.cancel} okText=\"Oui\" cancelText=\"Non\">\r\n                                                <Button\r\n                                                    size='large' \r\n                                                    name=\"trash\" \r\n                                                    type=\"primary\"\r\n                                                    block \r\n                                                    className=\"trash\"\r\n                                                >  \r\n                                                    <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                </Button>\r\n                                            </Popconfirm>\r\n                                        </Col>\r\n                                    </Col>\r\n                                </List.Item>\r\n                                :\r\n                                <>\r\n                                    {\r\n                                        data[item].locked === false ?\r\n                                        <List.Item >\r\n                                            <Col span={24} key={id} className='listeDeBase'>  \r\n                                                <Col xs={{ span: 16 }} md={{ span: 18 }} lg={{ span: 20 }} key={`elt-${item}`} id={item} onClick={() => this.props.choixListe(item)}>\r\n                                                    {item}\r\n                                                </Col>\r\n                                                <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                                    <Button\r\n                                                        size='large' \r\n                                                        name=\"trash\" \r\n                                                        type=\"primary\"\r\n                                                        block \r\n                                                        className=\"trash\"\r\n                                                        // onClick={() => this.props.changeLocked(data[item], item)}\r\n                                                    >  \r\n                                                    {\r\n                                                        !data[item].locked ?\r\n                                                        <Icon type=\"unlock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                        :\r\n                                                        <Icon type=\"lock\" style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                    }\r\n                                                    </Button>\r\n                                                </Col>\r\n                                                <Col xs={{ span: 4 }} md={{ span: 3 }} lg={{ span: 2 }}>\r\n                                                    <Popconfirm title=\"Confirmer pour effacer\" onConfirm={() => this.props.confirmDelete(item)} onCancel={this.props.cancel} okText=\"Oui\" cancelText=\"Non\">\r\n                                                        <Button\r\n                                                            size='large' \r\n                                                            name=\"trash\" \r\n                                                            type=\"primary\"\r\n                                                            block \r\n                                                            className=\"trash\"\r\n                                                        >  \r\n                                                            <Icon type='delete' style={{ color : '#009688', fontSize: '1.4em' }}/>\r\n                                                        </Button>\r\n                                                    </Popconfirm>\r\n                                                </Col>\r\n                                            </Col>\r\n                                        </List.Item>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </>\r\n                            }\r\n                            </>\r\n                        \r\n                        :\r\n                        null\r\n                        }\r\n                        </>\r\n                    )}\r\n                />\r\n            )};\r\n        \r\n    render() {\r\n        const { listeDeBase, clicked } = this.props;\r\n        return (\r\n            <>\r\n            {\r\n            !clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    { \r\n                        listeDeBase.length >= 4 ?\r\n                        null\r\n                        :\r\n                        <form className='formulaire form-titre' onSubmit={e => this.props.addNewListTitre(e)}>\r\n                            <input type='text' id='form-input' placeholder='Ajouter une liste' maxLength={30}/>\r\n                            <button type='submit' id='myButtonSubmit'>+</button>\r\n                        </form>\r\n                    }\r\n                \r\n                    <Col>\r\n                        {this.liste()}\r\n                    </Col>\r\n                    <Col span={6} style={{ marginRight: '1em' }}>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </Col>\r\n                </Col>\r\n            </>\r\n            :\r\n            <Col span={24}>\r\n                <MyLists\r\n                    currentTitre={this.props.currentTitre}\r\n                    createNewItem={this.props.createNewItem}\r\n                    data={this.props.data}\r\n                    changeItem={this.props.changeItem}\r\n                    itemIsChanged={this.props.itemIsChanged}\r\n                    handleChangeItem={this.props.handleChangeItem}\r\n                    valideChangeItem={this.props.valideChangeItem}\r\n                    itemSelected={this.props.itemSelected}\r\n                    delete={this.props.delete}\r\n                    toggleComment={this.props.toggleComment}\r\n                    addComment={this.props.addComment}\r\n                    titreListe={this.props.titreListe}\r\n                    returnToApp={this.props.returnToApp}\r\n                    goHome={this.props.goHome}\r\n                    indexItem={this.props.indexItem}\r\n                    createNewCategory={this.props.createNewCategory}\r\n                    isCategory={this.props.isCategory}\r\n                    numChildCategory={this.props.numChildCategory}\r\n                    deleteCategory={this.props.deleteCategory}\r\n                    toggleSwitchType={this.props.toggleSwitchType}\r\n                    help={this.props.help}\r\n                    inverseProduit={this.props.inverseProduit}\r\n                    visible={this.props.visible}\r\n                    onClose={this.props.onClose}\r\n                    item={this.props.item}\r\n                    modalContent={this.props.modalContent}\r\n                    largeur={this.props.largeur}\r\n                    itemIsVisible={this.props.itemIsVisible}\r\n                    itemVisible={this.props.itemVisible}\r\n                    handleScroll={this.props.handleScroll}\r\n                    followWindow={this.props.followWindow}\r\n                    showForm={this.props.showForm}\r\n                    showFormulaire={this.props.showFormulaire}\r\n                    currentCategory={this.props.currentCategory}\r\n                    categoryVisible={this.props.categoryVisible}\r\n                    categoryIsVisible={this.props.categoryIsVisible}\r\n                    reloadList={this.props.reloadList}\r\n                    inputOpen={this.props.inputOpen}\r\n                    openInput={this.props.openInput}\r\n                    checkCurrentCategory={this.props.checkCurrentCategory}\r\n                    loadListExemple={this.props.loadListExemple}\r\n                />\r\n            </Col>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => (\r\n    <ReactLoading \r\n    type=\"cylon\" \r\n    color=\"#078073\" \r\n    className=\"load\"\r\n    id=\"load\"\r\n    height={200}\r\n    width={200}\r\n    />\r\n)\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Col, List, Row, Badge, notification, Drawer  } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Astuce',\r\n        description: \"Lorsque vous faites vos courses, il suffit de cliquer sur un produit pour qu'il soit \\\"barré\\\" et \\\"grisé\\\".\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Astuce',\r\n                description: \"Vous ouvez rajouter un produit de dernière minute en l'ajoutant dans la case \\\"Entrez un produit\\\".\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n              });\r\n            }\r\n      });\r\n  };\r\nlet countItem = 0;\r\n\r\nclass EnCourseList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            count: 0,\r\n            arrayData: []\r\n         }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n        this.renderData();\r\n        window.addEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.data !== this.props.data) {\r\n            this.renderData();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.props.handleScroll);\r\n    }\r\n\r\n    //compteur de produits\r\n    countProduit = ( data, currentTitre ) => {\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? Object.keys(data[item])\r\n                .map(category => Object.keys(data[item][category])\r\n                    .map(categoryItem => data[item][category][categoryItem].categoryItems && data[item][category][categoryItem].categoryIsVisible ? arrayData.push(data[item][category][categoryItem]): null))\r\n            : null);\r\n        let countItemPos = [];\r\n        let countItemNeg = [];\r\n        let countTotal = [];\r\n        arrayData.map(elt => Object.keys(elt.categoryItems).map(item => countTotal.push(elt.categoryItems[item].checked)));\r\n        arrayData.map(elt => Object.keys(elt.categoryItems).map(item => elt.categoryItems[item].checked === false && elt.categoryItems[item].itemIsVisible ? countItemNeg.push(elt.categoryItems[item].checked): countItemPos.push(elt.categoryItems[item].checked)));\r\n        countItem = countTotal.length - countItemPos.length;\r\n    }\r\n\r\n    renderData = () => {\r\n        const { data, currentTitre, inverseProduit } = this.props;\r\n        const arrayData = [];\r\n        if(!data) {\r\n            return null\r\n        }\r\n        Object.keys(data)\r\n            .map(item => item === currentTitre ? \r\n                Object.keys(data[item])\r\n                    .map(category => Object.keys(data[item][category])\r\n                        .map(categoryItem => arrayData.push(data[item][category][categoryItem])))\r\n                : null);\r\n        if(inverseProduit) {\r\n            arrayData.reverse();\r\n        }\r\n        this.setState({ arrayData });\r\n    }\r\n\r\n    // création de la liste de produit et des catégories\r\n    liste = () => {\r\n        const { arrayData } = this.state;\r\n        if(!arrayData) {\r\n            return null\r\n        }\r\n        \r\n        return (arrayData || []).map((elt, id) =>\r\n        <div key={`key-${id}`}>\r\n        {\r\n            elt.categoryIsVisible ? // cache ou affiche une catégorie\r\n            <List\r\n                key={`titreCat-${elt.titreCat}`}\r\n                id={elt.titreCat}\r\n                header={\r\n                    <Row id={`titreCat-${id}`} type=\"flex\" justify=\"space-between\" align='middle' style={{height: '2.5em'}}>\r\n                        <Col span={24} className='titreCat' onClick={() => this.props.checkCurrentCategory(elt.titreCat)}>\r\n                            {elt.titreCat}\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                bordered\r\n                dataSource={Object.keys(elt.categoryItems || []).map(item => elt.categoryItems[item]).reverse()}\r\n                renderItem={(item, id) => (\r\n                    <>\r\n                    {\r\n                    item.itemIsVisible ? //cache ou affiche un produit\r\n                    <List.Item key={`listItemId-${item.key}`} id={elt.titreCat} className={item.checked ? '.ant-list-item flip' : '.ant-list-item'}>\r\n                            <Col span={24} key={`col24-${item.key}`}>\r\n                                <Row \r\n                                    type=\"flex\" \r\n                                    justify=\"space-between\" \r\n                                    align=\"middle\"\r\n                                    key={`elt-${item.key}`}\r\n                                    id={`elt-${item.key}`}\r\n                                >\r\n                                    <Col xs={20} sm={21} md={21} lg={22} key={`col20-${item.key}`} onClick={() => this.props.isChecked(item, arrayData)} className={'ant-list-items-item'}>\r\n                                        {item.item}\r\n                                    </Col>\r\n                                    <Col xs={4} sm={3} md={3} lg={2} key={`col4-${item.key}`}>\r\n                                            <Button \r\n                                                name=\"comment\" \r\n                                                className='comment' \r\n                                                style={{ background: 'transparent', border: 'none' }}\r\n                                                type='primary'\r\n                                                block\r\n                                                onClick={() => this.props.toggleComment(item)}>\r\n                                                {\r\n                                                    item.comment === '' && item.count === 0 ?\r\n                                                    <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    :\r\n                                                    <Badge status=\"success\">\r\n                                                        <Icon type='message' style={{color: '#009688' , fontSize: '1.4em' }}/>\r\n                                                    </Badge>\r\n                                                }\r\n                                            </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                    </List.Item>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                    )}\r\n            />\r\n            :\r\n            null\r\n        }\r\n        </div>\r\n        );\r\n    }\r\n    render() { \r\n        const { item, largeur, visible, showForm, currentTitre, data } = this.props;\r\n        // width du drawer en fonction de la taille de l'écran\r\n        const drawerWidth = largeur > 720 ? '50%' : '90%';\r\n        const positionY = window.scrollY;\r\n        this.countProduit(data, currentTitre);\r\n        return ( \r\n            <Col onScroll={ e => this.props.handleScroll(e) } className='containerList'>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }} id='containerForm'>\r\n                    {\r\n                        showForm ?\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                            </Col>\r\n                            \r\n                            <form id='myForm' className={showForm && positionY <= 80 ? 'formu formu-titre enCourse-formu-titre' : 'formu formu-titre enCourse-formu-titre fixedPosition'} onSubmit={this.props.createNewItemLastMinute}>\r\n                                <input type='text' placeholder='Produit de dernière minute' maxLength={40} />\r\n                                <button type='submit' id='buttonSubmit' onClick={this.props.showFormulaire}>\r\n                                    <Badge count={countItem} offset={[11, -30]} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}>\r\n                                        <Icon type=\"plus\" />\r\n                                    </Badge>\r\n                                </button>\r\n                            </form>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Col xs={{ span: 12}} sm={{ span: 10}} md={{ span: 8}} lg={{ span: 6}}>\r\n                                <h3><i className=\"far fa-list-alt\" style={{ color: '#078073', padding: '0.5em'}}></i>{currentTitre}</h3>\r\n                            </Col>\r\n                            <Col xs={{ span: 12}} sm={{ span: 14}} md={{ span: 16}} lg={{ span: 18}}>\r\n                                <button type='button' className={!showForm && positionY <= 80 ? '' : 'fixedPosition'} id='buttonSubmit2' onClick={this.props.showFormulaire} >\r\n                                    <Badge count={countItem} offset={[5, -5]} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}>\r\n                                        <Icon type=\"edit\" style={{ fontSize: '2.5em' }}/>\r\n                                    </Badge>\r\n                                </button>\r\n                            </Col>\r\n                        </>\r\n                    }\r\n                    </Col>\r\n               <Col span={24}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.goHome} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                <Drawer\r\n                    placement=\"right\"\r\n                    width={drawerWidth}\r\n                    onClose={(e) => this.props.onClose(e, item)}\r\n                    visible={this.props.visible}\r\n                    >\r\n                    {\r\n                        visible ?\r\n                        this.props.modalContentCourse(item)\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseList;","import React, { Component } from 'react';\r\n\r\nimport { Col } from 'antd';\r\n\r\nclass EnCourseItem extends Component {\r\n    render() { \r\n        const { item, choixListe } = this.props;\r\n        return ( \r\n            <Col span={24} key={`key-${item}`} className='listeDeBaseEnCourse'>  \r\n                <Col xs={{ span: 20 }} md={{ span: 21 }} lg={{ span: 22 }} key={`elt-${item}`} id={`id-${item}`} onClick={choixListe}>\r\n                    {item}\r\n                </Col>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourseItem;","import React, { Component } from 'react';\r\nimport { Button, Icon, Col, List } from 'antd';\r\n\r\nimport EnCourseList from './EnCourseList';\r\nimport EnCourseItem from './EnCourseItem';\r\n\r\nclass EnCourse extends Component {\r\n    liste = () => {\r\n        const { data, choixUserUid } = this.props;\r\n        const newData = [];\r\n        Object.keys(data).map(item => item !== 'user' ? newData.push(item) : null); //on enlève user des items\r\n        return ( \r\n            <List\r\n                bordered\r\n                locale={{ emptyText: 'Vous devez d\\'abord créer une liste avant de faire vos courses' }}\r\n                dataSource={newData}\r\n                renderItem={ (item, id) => (\r\n                    <>\r\n                    {\r\n                    item ?\r\n                    <>\r\n                    {\r\n                        choixUserUid ?\r\n                        <List.Item>\r\n                            <EnCourseItem\r\n                                item={item}\r\n                                choixListe={() => this.props.choixListe(item)}\r\n                            />\r\n                        </List.Item>\r\n                        :\r\n                        <>\r\n                        {\r\n                            data[item].locked === false ?\r\n                            <List.Item >\r\n                                <EnCourseItem\r\n                                    item={item}\r\n                                    choixListe={() => this.props.choixListe(item)}\r\n                                />\r\n                            </List.Item>\r\n                            :\r\n                            null\r\n                        }\r\n                        </>\r\n\r\n                    }\r\n                    </>\r\n                    :\r\n                    null\r\n                    }\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            {\r\n            !this.props.clicked ?\r\n            <>\r\n                <Col xs={{ span: 24 }} md={{ span: 22, push: 1 }} lg={{ span: 20, push: 2 }}>\r\n                    {this.liste()}\r\n                </Col>\r\n                <Col span={6} style={{ marginRight: '1em' }}>\r\n                    <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                        <Icon type=\"left\" />Retour\r\n                    </Button>\r\n                </Col>\r\n                </>\r\n                :\r\n                <Col span={24}>\r\n                    <EnCourseList\r\n                        currentTitre={this.props.currentTitre}\r\n                        createNewItemLastMinute={this.props.createNewItemLastMinute}\r\n                        data={this.props.data}\r\n                        isChecked={this.props.isChecked}\r\n                        delete={this.props.delete}\r\n                        toggleComment={this.props.toggleComment}\r\n                        addComment={this.props.addComment}\r\n                        titreListe={this.props.titreListe}\r\n                        returnToApp={this.props.returnToApp}\r\n                        closeComment={this.props.closeComment}\r\n                        goHome={this.props.goHome}\r\n                        indexItem={this.props.indexItem}\r\n                        checkCurrentCategory={this.props.checkCurrentCategory}\r\n                        help={this.props.help}\r\n                        inverseProduit={this.props.inverseProduit}\r\n                        visible={this.props.visible}\r\n                        onClose={this.props.onClose}\r\n                        item={this.props.item}\r\n                        largeur={this.props.largeur}\r\n                        modalContentCourse={this.props.modalContentCourse}\r\n                        showFormulaire={this.props.showFormulaire}\r\n                        showForm={this.props.showForm}\r\n                        handleScroll={this.props.handleScroll}\r\n                        handleScrollButton={this.props.handleScrollButton}\r\n                    />\r\n                </Col>\r\n            }\r\n            \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default EnCourse;","import React, { Component } from 'react';\r\n\r\nimport '../NewApp.css';\r\n\r\nimport { Button, notification } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Liste de course interactive',\r\n        description: \"Bienvenue sur votre application de liste de course. Pour commencer, veuillez cliquer sur \\\"créer une liste\\\". Si vous avez déjà créé une liste, cliquez sur \\\"En course\\\" lorsque vous faites vos course.\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          }\r\n      });\r\n  };\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <>\r\n                        <Button \r\n                            style={{ margin : '1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='enCourse'\r\n                            onClick={this.props.choixComponent}\r\n                            >Faire ses courses\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\"\r\n                            className='item-button'\r\n                            name='mesListes'\r\n                            onClick={this.props.choixComponent}\r\n                        >Créer une liste\r\n                        </Button>\r\n                        <Button \r\n                            style={{ margin : '0 0 1em 0'}}\r\n                            size='large'\r\n                            block \r\n                            type=\"primary\" \r\n                            className='item-button'\r\n                            name='monProfil'\r\n                            onClick={this.props.choixComponent}\r\n                        >Mon profil\r\n                        </Button>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nimport { Button, Icon, Row, Col, notification, Switch } from 'antd';\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: 'Votre profil',\r\n        description: \"Bientôt vous aurez la possibilité de modifier votre profil et bien plus encore!\",\r\n        duration: 0,\r\n        style: {\r\n            textAlign: 'justify'\r\n          },\r\n        onClose: () => {\r\n            notification.open({\r\n                message: 'Se connecter à un autre profil',\r\n                description: \"Il vous suffit de recopier l'identifiant de la liste que vous souhaitez rejoindre et de valider. Ensuite cliquez sur cette liste pour la rejoindre!\",\r\n                duration: 0,\r\n                style: {\r\n                    textAlign: 'justify'\r\n                  },\r\n                // onClose: () => {\r\n                //   alert('clicked');\r\n                // },\r\n              });\r\n        },\r\n      });\r\n  };\r\n\r\nclass ProfilUser extends Component {\r\n    componentDidMount() {\r\n        if(this.props.help) {\r\n            openNotification();\r\n        }\r\n    }\r\n    render() { \r\n        const { \r\n            user, help, inverseProduit, userUid, newUserUid, choixUserUid, linkName, followWindow,\r\n                toggleSwitchHelp, toggleSwitchInverseProduit \r\n            } = this.props;\r\n        return ( \r\n            <Col span={24}>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col  xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                    <h2>Bienvenue sur votre profil {user}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Aide : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={help === true ? true : false} onChange={toggleSwitchHelp} id='switchButtonHelp'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Inverser l'ordre des produits : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={inverseProduit === true ? true : false} onChange={toggleSwitchInverseProduit} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Case d'ajout de produit qui suit l'écran : </b></span>\r\n                        <Switch checkedChildren=\"oui\" unCheckedChildren=\"non\" checked={followWindow === true ? true : false} onChange={this.props.toggleSwitchFollowWindow} id='switchButtonInverseProduit'/>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Votre identifiant : </b>{userUid}</span>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }}>\r\n                        <Button block type={choixUserUid ? \"primary\" : \"default\"} name={userUid}  onClick={!choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                        {choixUserUid ? <span>Votre liste</span>: <span>Rejoindre votre liste</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <Button block type={choixUserUid ? \"default\" : \"primary\"} name={newUserUid} onClick={choixUserUid ? this.props.choisirUserUid : null} className='choisirUid'>\r\n                            {choixUserUid ? <span>Rejoindre la liste de {linkName}</span>: <span>Liste de {linkName}</span>}\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} style={{ marginBottom : '1em'}}>\r\n                        <span><b>Ajouter un identifiant : </b></span>\r\n                        <input type='text' placeholder='Entrez le nouvel identifiant' onChange={this.props.changeUserUid} required={true}/>\r\n                        <Button type=\"primary\" onClick={this.props.valideChangeUserUid} className='changeUid'>\r\n                            <Icon type=\"check\" />Valider\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={{ span: 3, pull: 10 }} md={{ span: 3, pull: 10 }} lg={{ span: 3, pull: 10 }}>\r\n                        <Button type='primary' onClick={() => this.props.deconnexion()} style={{ borderRadius: '50px', width: '35px', height: '35px', marginLeft: '10px' }}>\r\n                            <Icon type=\"logout\" />\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row type='flex' justify='left'>\r\n                    <Col span={6}>\r\n                    <div className='button-anth'>\r\n                        <Button block type=\"primary\" onClick={this.props.returnToApp} className='goBack'>\r\n                            <Icon type=\"left\" />Retour\r\n                        </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilUser;","import React, { Component } from 'react';\r\n\r\nimport { Menu, Icon } from 'antd';\r\n\r\nclass HeaderMenu extends Component {\r\n    render() { \r\n        return ( \r\n            <Menu\r\n            onClick={this.props.handleClick}\r\n            selectedKeys={[this.props.choixComponentState]}\r\n            mode=\"horizontal\"\r\n          >\r\n            <Menu.Item key=\"menu\">\r\n                <Icon type=\"home\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"mesListes\">\r\n                <Icon type=\"ordered-list\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"enCourse\">\r\n                <Icon type=\"shopping\" />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"monProfil\">\r\n                <Icon type=\"user\" />\r\n            </Menu.Item>\r\n          </Menu>\r\n        );\r\n    }\r\n}\r\n \r\nexport default HeaderMenu;","import React, { Component } from 'react';\n// import './App.css';\nimport './NewApp.css';\nimport 'antd/dist/antd.css';\nimport './animations.css';\n\nimport * as firebase from 'firebase';\nimport config from './firebase';\n\n//ANT design\nimport { \n  Row, Col, Layout, Icon, message, Input, Slider, InputNumber, Select, Card, Avatar, Skeleton \n} from 'antd';\n\nimport Home from './Components/Home';\nimport Loading from './Components/Loading';\nimport EnCourse from './Components/EnCourse';\nimport Menu from './Components/Menu';\nimport ProfilUser from './Components/ProfilUser';\nimport HeaderMenu from './Components/HeaderMenu';\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport prochainement from './img/prochainement2.png';\n\nconst {\n  Header, Footer, Content,\n} = Layout;\nconst { Meta } = Card;\n\nconst {TextArea} = Input;\nconst Option = Select.Option;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    firebase.initializeApp(config);\n        this.state = {\n            listeDeBase: [],\n            data: '',\n            item: null,\n            itemSelected: '',\n            titreListe: [],\n            currentTitre: '',\n            choixComponent: 'menu',\n            currentCategory: '' || 'Ma super catégorie',\n            numChildCategory: 0,\n            isSignedIn: false,\n            clicked: false,\n            itemIsChanged: false,\n            loading: true,\n            goHome: false,\n            isCategory: true,\n            clickedText : false,\n            indexItem: null,\n            isToggleSwitchType: false,\n            help: true,\n            inverseProduit: true,\n            userId: '' || 'Mikael',\n            userUid: '',\n            newUserUid: '',\n            choixUserUid: true,\n            changeUserInput: false,\n            currentUserUid: '',\n            linkName: '',\n            followers: [],\n            count: 0,\n            countItem: 0,\n            typeCount: 'unité',\n            newComment: '',\n            showForm: false, //affiche ou non le form dans faire ses courses\n            inputOpen: false, // rend visible l'input du form\n            visible: false, //affiche le drawer\n            itemIsVisible: true, //affiche ou non l'item dans la liste de course\n            categoryIsVisible: true, //affiche ou non la catégorie dans la liste de course\n            totalItem: 0,\n            isScroll: 0,\n            followWindow: true,\n            largeur: 0,\n            hauteur: 0,\n            lastMinuteItem: false //verifie si un item a ete ajoute a la derniere minute\n        };\n      this.delete = this.delete.bind(this);\n      this.deleteCategory = this.deleteCategory.bind(this);\n      this.createNewItem = this.createNewItem.bind(this);\n      this.addNewListTitre = this.addNewListTitre.bind(this);\n      this.deconnexion = this.deconnexion.bind(this);\n}\n\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\ncomponentDidMount() {\n  const { loading } = this.state;\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        if(user) {\n          if(loading) {\n            this.getDataBase(user.uid);\n          }\n          this.setState({\n            isSignedIn: !!user, \n            userId: user.displayName,\n            userUid: user.uid\n          });\n        } else {\n          return null\n        }\n      }\n    );\n  \n  //détection du changement de taille d'écran\n  this.handleResize();\n  window.addEventListener('resize', this.handleResize);\n}\n\ncomponentWillUnmount() {\n  window.removeEventListener('resize', this.handleResize); //on enlève l'évènement qui regarde la taille de la fenêtre\n  this.unregisterAuthObserver();\n}\n\n  animFormButton = button => {\n    button.classList.add('formButton-active');\n    setTimeout(() => {\n        button.classList.remove('formButton-active');\n    }, 500);\n  }\n\n  animFormElt = elt => {\n    elt.classList.add('message-enter');\n  }\n\n  getDataBase = myUser => {\n    const { userId, choixUserUid, newUserUid } = this.state;\n    const userUid = myUser || this.state.userUid;\n    const currentUser = choixUserUid ? userUid : newUserUid;\n    const ref = firebase.database().ref(`${currentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${userUid}/user/`).on('value', snapshot => {\n              this.setState({ \n                help: snapshot.val().help,\n                inverseProduit: snapshot.val().inverseProduit,\n                userUid: snapshot.val().userUid,\n                newUserUid: snapshot.val().newUserUid,\n                choixUserUid: snapshot.val().choixUserUid,\n                currentUserUid: snapshot.val().choixUserUid === true ? snapshot.val().userUid : snapshot.val().newUserUid,\n                linkName: snapshot.val().linkName,\n                followers: snapshot.val().followers,\n                followWindow: snapshot.val().followWindow\n               });\n               if(snapshot.val().choixUserUid) {\n                firebase.database().ref(`${currentUser}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               } else {\n                const newUserUid = snapshot.val().newUserUid;\n                firebase.database().ref(`${newUserUid}`).on('value', snapshot => {\n                  Object.keys(snapshot.val()).map(item =>\n                    listItem.push(item)\n                  );\n                  this.setState({\n                    listeDeBase: listItem,\n                    data: snapshot.val(),\n                    loading: false\n                    });\n                });\n               }\n            });\n            \n            } else {\n              firebase.database().ref(`${userUid}`).set({\n                user: {\n                  userName: userId,\n                  userUid: userUid,\n                  newUserUid: '',\n                  help: true,\n                  inverseProduit: true,\n                  choixUserUid: true,\n                  linkName: '',\n                  followers: [],\n                  followWindow: true\n                }\n              });\n              this.setState({\n                loading: false\n            });\n          }\n        });\n  }\n\n  //charger la database du compte sélectionné\n  getOtherDataBase = (linkName) => {\n    const curentUser = this.state.currentUserUid;\n    const user = this.state.userId;\n    const ref = firebase.database().ref(`${curentUser}`);\n        ref.on('value', snapshot => {\n          const listItem = [];\n          if(snapshot.val() !== null) {\n            firebase.database().ref(`${curentUser}/user`).on('value', snapshot => {\n              this.setState({ \n                linkName: snapshot.val().userName === user ? linkName : snapshot.val().userName  //probleme quand retour sur user d'origine\n               });\n            });\n            firebase.database().ref(`${curentUser}`).on('value', snapshot => {\n              Object.keys(snapshot.val()).map(item =>\n                listItem.push(item)\n              );\n                this.setState({\n                  listeDeBase: listItem,\n                  data: snapshot.val(),\n                  loading: false\n                  });\n              });\n            }\n        });\n        \n  }\n\n  // adminAddList = () => {\n  //   const { data } = this.state;\n  //   const listeExemple = [];\n  //   Object.keys(data).map(item => item === 'Liste d\\'exemple' ? listeExemple.push(data[item]) : null);\n  //   firebase.database().ref('Liste-Exemple/').push(listeExemple);\n  // }\n\n  showFormulaire = () => {\n    const showForm = !this.state.showForm;\n    \n    setTimeout(() => {\n      this.setState({ showForm });\n    }, 300);\n  }\n\n  //détecter la taille de la fenêtre\n  handleResize = () => this.setState({\n    hauteur: window.innerHeight,\n    largeur: window.innerWidth\n  });\n\n  // detection du scroll\n  handleScroll = () => {\n    const { followWindow, showForm } = this.state;\n    let isScroll = 0;\n    const formElt = showForm ? document.getElementById('myForm2') : document.getElementById('buttonSubmit2');\n    let lastPositionY = window.scrollY;\n    if(formElt && followWindow) {\n      if(isScroll !== lastPositionY && lastPositionY > 80) {\n        formElt.classList.add('opacity');\n        if(lastPositionY > 80) {\n          formElt.classList.add('fixedPosition');\n        }\n        setTimeout(() => {\n          isScroll = lastPositionY;\n          formElt.classList.remove('opacity');\n        }, 600);\n      }\n      if(lastPositionY <= 80) {\n        formElt.classList.remove('fixedPosition');\n      }\n    }\n}\n\n  // on ou off de l'aide\n  toggleSwitchHelp = checked => {\n    const { userUid } = this.state;\n    const help = checked;\n    this.setState({ help });\n    let updates = {};\n    updates[`${userUid}/user/help`] = !help;\n    return firebase.database().ref().update(updates);\n  }\n\n  // on ou off pour inverser l'ordre des produits\n  toggleSwitchInverseProduit = checked => {\n    const { userUid } = this.state;\n    const inverseProduit = checked;\n    this.setState({ inverseProduit });\n    let updates = {};\n    updates[`${userUid}/user/inverseProduit`] = !inverseProduit;\n    return firebase.database().ref().update(updates);\n  }\n\n  toggleSwitchFollowWindow = checked => {\n    const followWindow = checked;\n    this.setState({ followWindow });\n  }\n\n  // changer l'uid pour rejoindre une liste\n  changeUserUid = event => {\n    const newUserUid = event.target.value;\n    if(newUserUid.length > 20) {\n      this.setState({ \n        newUserUid, \n        changeUserInput: true \n      });\n    }\n  }\n\n  error = text => {\n    message.error(`${text}`);\n  };\n\n  //valider le changement de l'uid\n  valideChangeUserUid = () => {\n    const { newUserUid, changeUserInput, userUid, userId } = this.state;\n    const followers = [];\n    const message = 'Utilisateur trouvé!'\n    //on rajoute le nom du followers\n    followers.push(userId);\n    let updates = {};\n    if(newUserUid !== '' && changeUserInput) {\n      firebase.database().ref(`${newUserUid}/user/userName`).on('value', snapshot => {\n        if(snapshot.val()) {\n          this.setState({ \n            linkName: snapshot.val(),\n            followers,\n            changeUserInput: false\n          });\n          updates[`${userUid}/user/linkName`] = snapshot.val();\n          firebase.database().ref().update(updates);\n\n          updates[`${userUid}/user/newUserUid`] = newUserUid;\n          firebase.database().ref().update(updates);\n      \n          updates[`${newUserUid}/user/followers`] = followers;\n          firebase.database().ref().update(updates);\n\n          this.success(message);\n        } else {\n          this.error('Cet utilisateur n\\'existe pas');\n          return;\n        }\n      });\n    } else {\n      this.error('Erreur de saisie');\n    }\n  }\n\n  choisirUserUid = event => {\n    const { choixUserUid, userUid, linkName} = this.state;\n    this.setState({ \n      choixUserUid: !choixUserUid,\n      currentUserUid: event.target.name\n    });\n\n    const choixDB = !choixUserUid;\n    if(choixDB) {\n        this.getDataBase();\n    } else {\n        this.getOtherDataBase(linkName);\n    }\n\n    this.success('Liste chargée!');\n        this.setState({ \n          currentTitre: '',\n          clicked: false,\n          choixComponent: 'menu'\n        });\n\n    let updates = {};\n    updates[`${userUid}/user/choixUserUid`] = !choixUserUid;\n    firebase.database().ref().update(updates);\n  }\n\n  // compteur de produits dans une liste\n  countProduit = arrayData => {\n    let countItemPos = [];\n    let countItemNeg = [];\n    arrayData.map(elt => Object.keys(elt.categoryItems)\n      .map(item => elt.categoryItems[item].checked === false ? \n          countItemNeg.push(elt.categoryItems[item].checked)\n          : \n          countItemPos.push(elt.categoryItems[item].checked)));\n    this.setState({\n        countItem : countItemNeg.length - countItemPos.length\n    });\n}\n\n  // Regarde si un produit est checked\n  isChecked = item => {\n    const { currentUserUid, currentTitre, data } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const divElt = collapse.parentElement.parentElement.parentElement;\n    divElt.classList.toggle('flip');\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    item.checked = !item.checked;\n\n    this.setState({ data });\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n}\n  // Delete un produit\n  delete = item => {\n    const { currentUserUid, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n    const contentElt = collapse.parentElement.parentElement.parentElement.parentElement.childNodes;\n    \n    this.setState({ \n      indexItem: `elt-${item.item}`,\n      numChildCategory: contentElt.length\n  });\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n    if(contentElt.length === 1) {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n        const indexCat = snapshot.key;\n          firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${indexCat}`).remove();\n      });\n      setTimeout(() => {\n        this.setState({ indexItem: null});\n      }, 50);\n    } else {\n        firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n          snapshot.forEach(function(childSnapshot){\n            const indexItem = childSnapshot.key;\n              firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${indexItem}`).remove();\n          });\n        });\n        setTimeout(() => {\n          this.setState({ indexItem: null});\n        }, 50);\n    }\n  }\n\n  // delete une catégorie\n  deleteCategory = (item, id) => {\n    const user = this.state.currentUserUid;\n    const collapse = document.getElementById(item.titreCat);\n    const currentTitre = this.state.currentTitre;\n\n    let index = '';\n    firebase.database().ref(`${user}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === collapse.id ? childSnapshot.key : null;\n      });\n    });\n\n    firebase.database().ref(`${user}/${currentTitre}/category/${index}`).remove();\n    \n    setTimeout(() => {\n      this.setState({ indexItem: null});\n    }, 50);\n  }\n\n  deleteList = (item) => {\n    const { currentUserUid } = this.state;\n    this.setState({ indexItem: `elt-${item}` });\n\n    firebase.database().ref(`${currentUserUid}/${item}`).remove();\n\n    setTimeout(() => {\n      this.setState({ indexItem: null });\n    }, 50);\n    \n  }\n\n  confirmDelete = item => {\n    this.setState({ clicked: false });\n    this.deleteList(item);\n    message.success('Liste effacée');\n  }\n\n  cancel = e => {\n      message.error('Action annulée');\n    }\n\n  onChangeComment = (event, item) => {\n    const newComment = event.target.value;\n    item.comment = newComment;\n    this.setState({\n      item,\n      newComment\n    });\n  }\n\n  onChangeCount = (value, item) => {\n    const count = value;\n    item.count = value;\n    this.setState({\n      count,\n      item\n    });\n  }\n\n  onChangeTypeCount = (value, item) => {\n    const typeCount = value;\n    item.typeCount = value;\n    this.setState({\n      typeCount,\n      item\n    });\n  }\n\n  modalContent = item => {\n    const { count, largeur, typeCount } = this.state;\n    return (\n      <>\n        <Row gutter={largeur > 720 ? 12 : 8}>\n          <Col span={ largeur > 720 ? 14 : 24 }>\n            <Slider\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              onChange={e => this.onChangeCount(e, item)}\n              value={typeof count === 'number' ? count : 0}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <InputNumber\n              min={0}\n              max={typeCount === 'Gramme' || typeCount === 'ml' || typeCount === 'cl' ? 1000 : 25 }\n              style={{ marginLeft: 16, width: '90%', fontSize: '16px' }}\n              value={count}\n              onChange={e => this.onChangeCount(e, item)}\n            />\n          </Col>\n          <Col span={ largeur > 720 ? 5 : 12 }>\n            <Select defaultValue={typeCount} onChange={e => this.onChangeTypeCount(e, item)} style={{ width: '90%' }}>\n              <Option value='unité'>{count <= 1 ? 'unité' : 'unités'}</Option>\n              <Option value='boite'>{count <= 1 ? 'boite' : 'boites'}</Option>\n              <Option value='litre'>{count <= 1 ? 'litre' : 'litres'}</Option>\n              <Option value='ml'>ml</Option>\n              <Option value='cl'>cl</Option>\n              <Option value='Kilo'>{count <= 1 ? 'kilo' : 'kilos'}</Option>\n              <Option value='Gramme'>{count <= 1 ? 'gramme' : 'grammes'}</Option>\n            </Select>\n          </Col>\n        </Row>\n        <TextArea \n          placeholder='ajouter un commentaire' \n          autosize={{ minRows: 5, maxRows: 10 }} \n          onChange={e => this.onChangeComment(e, item)}\n          value={item.comment} \n          rows={10}\n          cols={largeur > 720 ? 50 : 30}\n          autoFocus\n          autoComplete='on'\n          style={{ marginTop: '1em', ontSize: '16px' }}\n          onPressEnter={event => this.onClose(event, item)}\n        />\n      </>\n    )\n  }\n\n  modalContentCourse = item => {\n    const { count, largeur } = this.state;\n    const image = (\n        <Skeleton paragraph={{ rows: 4, width: ['90%', '90%','90%','90%'] }} title={false}>\n          <img alt=\"prochainement\" src={prochainement} />\n        </Skeleton>\n    )\n    return(\n        <Card\n          style={{ width: largeur > 720 ? '70%' : '90%', paddingTop: '1em'}}\n          cover={image}\n        >\n          <Meta\n            avatar={<Avatar style={{ backgroundColor: '#009688' }} icon=\"user\" />}\n            title={item.item}\n          />\n            <br/>\n            {\n              count ?\n              <>\n              <h4>Quantité</h4>\n              <p>{item.count} {item.typeCount}{count <= 1 ? '': 's'}</p>\n              </>\n              :\n              null\n            }\n            {\n              item.comment ?\n              <>\n                <h4>Commentaire</h4>\n                <p>{item.comment}</p>\n              </>\n              :\n              <>\n                <h4>Commentaire</h4>\n                <p>Rien ici!</p>\n              </>\n            }\n        </Card>\n    )\n  }\n\n  //faire apparaitre/disparaitre la commentaire\n  toggleComment = item => {\n    this.setState({ \n      visible: true,\n      item,\n      count: item.count,\n      typeCount: item.typeCount,\n    });\n  }\n\n  onClose = (event, item) => {\n    this.addComment(event, item);\n    this.setState({\n      visible: false,\n      count: 0,\n      typeCount: 'unité',\n    });\n  };\n\n  // Ajouter un commentaire à un élément de la liste\n  addComment = (event, items) => {\n    event.preventDefault();\n    const { currentUserUid, item, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${items.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n\n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(items.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n\n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n\n  return firebase.database().ref().update(updates);\n  }\n\n  //remettre la liste a zéro (check)\n  reloadList = () => {\n    const { currentTitre, data, currentUserUid } = this.state;\n    const arrayData = [];\n    Object.keys(data).map(item => item === currentTitre ? Object.keys(data[item]).map(category => Object.keys(data[item][category]).map(categoryItem => arrayData.push(data[item][category][categoryItem]))): null);\n    arrayData.map(elt => Object.keys(elt.categoryItems)\n      .map(item => elt.categoryItems[item].checked === true ? \n        elt.categoryItems[item].checked = false : null));\n\n    this.setState({ data });\n\n    let updates = {};\n    updates[`/${currentUserUid}`] = data;\n  \n    return firebase.database().ref().update(updates);\n  }\n\n  //rendre une liste privée\n  changeLocked = (item, title) => {\n    const { currentUserUid } = this.state;\n    item.locked = !item.locked;\n\n    let updates = {};\n    updates[`/${currentUserUid}/${title}/`] = item;      \n    return firebase.database().ref().update(updates);\n  }\n\n  //cache ou non une catégorie\n  categoryVisible = elt => {\n  const { currentUserUid, currentTitre } = this.state;\n  const currentCategory = elt.titreCat;\n\n  elt.categoryIsVisible = !elt.categoryIsVisible;\n\n  let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/`] = elt;\n          \n  return firebase.database().ref().update(updates);\n  }\n\n  itemVisible = item => {\n    const { currentUserUid, currentTitre } = this.state;\n    const collapse = document.querySelector(`#elt-${item.key}`);\n    const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n    item.itemIsVisible = !item.itemIsVisible;\n\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n          \n  return firebase.database().ref().update(updates);\n  }\n\n  // Créer une catégorie dans la liste de course\n  createNewCategory = event => {\n    event.preventDefault();\n    const { currentUserUid, currentTitre, currentCategory, choixComponent } = this.state;\n    const formInput = document.querySelector('#myForm>input');\n    const todoFormButton = document.querySelector('#myForm>button');\n    let category = '';\n    if(currentCategory === 'Ajout de dernière minute' && choixComponent === 'enCourse') {\n      category = 'Ajout de dernière minute';\n    } else {\n      const cat = formInput.value;\n      category = cat.charAt(0).toUpperCase() + cat.substring(1).toLowerCase();\n    }\n    \n    if(formInput.value === '') {\n      this.setState({ \n        showForm: false\n      });\n      return null\n    }\n    //insérer une catégorie sans exemple de produit!\n    const data = {\n      titreCat: category,\n      categoryIsVisible: true\n    }\n    //on regarde si la catégorie existe déjà\n    let categoryExist = false;\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot) {\n        return categoryExist = childSnapshot.val().titreCat === category ? true : false;\n      });\n    });\n    //si la catégorie n'existe pas, on la push dans la bdd\n    if(!categoryExist) {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).push({\n        ...data\n      });\n      this.setState({\n        currentCategory: category,\n        isCategory: false,\n        showForm: false\n      });\n      this.animFormButton(todoFormButton);\n    } else { // si elle existe message d'alerte\n      this.error('Cette catégorie existe déjà!');\n    }\n    formInput.value = '';\n  }\n\n  //message qui annonce la catégorie sélectionnée\n  success = text => {\n    message.config({\n      top: 90,\n      duration: 2\n    });\n    message.success(`${text}`);\n  };\n\n  // on ouvre le formulaire\n  openInput = titre => {\n    const currentCategory = titre;\n    this.setState({ \n      inputOpen: true,\n      currentCategory\n    });\n  }\n\n  // Créer un élément de liste de course\n  createNewItem = event => {\n    event.preventDefault();\n    const { currentUserUid, currentCategory, currentTitre } = this.state;\n    const timestamp = Date.now();\n    const todoFormInput = document.querySelector('.form>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const dataElt = todoFormInput.value;\n    const newData = dataElt.charAt(0).toUpperCase() + dataElt.substring(1).toLowerCase();\n\n    if(todoFormInput.value === '') {\n      this.setState({ \n        inputOpen: false\n      });\n      return null\n    }\n\n    if(currentCategory === 'Ma super catégorie') {\n      this.createNewCategory(event);\n      return null;\n    }\n\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n    this.setState({ inputOpen: false });\n  }\n\n  // Ajout d'un titre de liste de course\n  addNewListTitre = event => {\n    event.preventDefault();\n    const { currentUserUid } = this.state;\n    const formInput = document.querySelector('#form-input');\n    const todoFormButton = document.querySelector('#myButtonSubmit');\n    const titre = formInput.value;\n    if(formInput.value === '') {\n      return null\n    }\n\n    this.setState(prevState => ({\n      listeDeBase: [...prevState.listeDeBase, titre],\n      isCategory: true\n    }));\n\n    firebase.database().ref(`${currentUserUid}/${titre}`).set({\n      locked: false\n    });\n\n    this.animFormButton(todoFormButton);\n    formInput.value = '';\n  }\n\n  // Détecte quelle liste à été choisie\n  choixListe = title => {\n    this.setState({\n      currentTitre: title,\n      clicked: true\n    });\n  }\n\n  // En Course --------> Check toute la catégorie\n  checkCurrentCategory = titreCat => {\n    const { choixComponent } = this.state;\n    const titre = document.getElementById(titreCat);\n    if(choixComponent === 'enCourse') {\n      titre.lastChild.firstChild.classList.toggle('hidden');\n    } else {\n      titre.lastChild.firstChild.classList.toggle('hidden');\n      titre.children[1].classList.toggle('hidden');\n    }\n  }\n\n  // EN COURSE --------> Crée un item dans la catégorie derniere minute\n  createNewItemLastMinute = event => {\n    event.preventDefault();\n    const todoFormInput = document.querySelector('.formu>input');\n    const todoFormButton = document.querySelector('#buttonSubmit');\n    const newData = todoFormInput.value;\n    if(!newData) {\n      return\n    }\n    const { currentUserUid, currentCategory, currentTitre, lastMinuteItem } = this.state;\n    const timestamp = Date.now();\n    const data = {\n      item: newData,\n      checked: false,\n      key: timestamp,\n      comment: '',\n      count: 0,\n      typeCount: 'unité',\n      show: false,\n      itemIsVisible: true\n    };\n    \n    //on regarde si la catégorie existe déjà pour ne pas en recréer une identique\n    let hasTitreCat = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n         return hasTitreCat = childSnapshot.val().titreCat === 'Ajout de dernière minute';\n      });\n    });\n\n    if(currentCategory === 'Ajout de dernière minute' && !lastMinuteItem && !hasTitreCat) {\n      this.createNewCategory(event);\n      this.setState({ lastMinuteItem: true });\n    }\n\n    if(newData !== '' && currentTitre !== '') {\n      let index = '';\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n        snapshot.forEach(function(childSnapshot){\n            return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n        });\n      });\n\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).push({\n        ...data\n      });\n    }\n    \n    this.animFormButton(todoFormButton);\n    todoFormInput.value = '';\n    this.setState({ showForm: false });\n  }\n\n  // charger une liste d'exemple\n  loadListExemple = () => {\n    const { currentTitre, currentUserUid } = this.state;\n    firebase.database().ref('Liste-Exemple/-LY14-nVOqZIM_Cn9Ma6/0/').on('value', snapshot => {\n      firebase.database().ref(`${currentUserUid}/${currentTitre}/category/`).set(snapshot.val().category);\n    });\n  }\n\n  // utilisé sur bouton pour retour en arrière\n  goHome = () => {\n    this.setState({ clicked: false, isCategory: true });\n  }\n\n  // retour au menu de l'accueil\n  returnToApp = () => {\n    this.setState({ choixComponent: 'menu' });\n  }\n\n  // détecte le composant choisi à l'accueil\n  choixComponent = event => {\n    const choixComponent = event.target.name;\n    if(choixComponent !== '') {\n      if(choixComponent === 'enCourse') {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ajout de dernière minute',\n          showForm: false\n        });\n      } else {\n        this.setState({ \n          choixComponent, \n          currentCategory: 'Ma super catégorie',\n          showForm: false\n        });\n      }\n    }\n  }\n\n  hideText = () => {\n    const clickedText = this.state.clickedText;\n    this.setState({ clickedText : !clickedText });\n}\n\n//changer le texte d'un produit\nchangeItem = item => {\n  this.setState({ \n    itemIsChanged: true,\n    itemSelected: item.key\n  });\n}\n\n//on capture le changement\nhandleChangeItem = (event, item) => {\n  item.item = event.target.value;\n  this.setState({ item });\n}\n\n// on valide le changement du produit\nvalideChangeItem = (event, item) => {\n  const { currentUserUid, currentTitre } = this.state;\n  const collapse = document.querySelector(`#elt-${item.key}`);\n  const currentCategory = collapse.parentElement.parentElement.parentElement.id;\n\n  if(event.key === 'Enter') {\n    let index = '';\n    firebase.database().ref(`${currentUserUid}/${currentTitre}/category`).on('value', snapshot => {\n      snapshot.forEach(function(childSnapshot){\n          return index = childSnapshot.val().titreCat === currentCategory ? childSnapshot.key : null;\n      });\n    });\n          \n  let itemKey = {};\n  firebase.database().ref(`${currentUserUid}/${currentTitre}/category/${index}/categoryItems`).orderByChild('key').equalTo(item.key).on('value', snapshot => {\n    snapshot.forEach(function(childSnapshot){\n      return itemKey = childSnapshot.key;\n    });\n  });\n          \n  let updates = {};\n  updates[`/${currentUserUid}/${currentTitre}/category/${index}/categoryItems/${itemKey}`] = item;\n          \n  firebase.database().ref().update(updates);\n\n    this.setState({ \n      itemIsChanged: false,\n      itemSelected: '',\n      item: null  \n    });\n  }\n}\n\ndeconnexion = () => {\n  firebase.auth().signOut().then(function() {\n    this.setState({ isSignedIn: false });\n  }).catch(function(error) {\n    console.log(error);\n  });\n}\n\n//choix composant via headermenu\nhandleClick = event => {\n  const choixComponent = event.key;\n  if(choixComponent !== '') {\n    if(choixComponent === 'enCourse') {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ajout de dernière minute',\n        clicked: false,\n        currentTitre: '',\n        showForm: false\n      });\n    } else {\n      this.setState({ \n        choixComponent, \n        currentCategory: 'Ma super catégorie',\n        clicked: false,\n        currentTitre: '',\n        showForm: false,\n        isCategory: true\n      });\n    }\n  }\n}\n\n  //renvoie dans le render le composent choisit\n  renderChoiseConponent = () => {\n    const { choixComponent } = this.state;\n    switch(choixComponent) {\n      case 'enCourse':\n      return <EnCourse\n                returnToApp={this.returnToApp}\n                choixListe={this.choixListe}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                isChecked={this.isChecked}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                createNewItemLastMinute={this.createNewItemLastMinute}\n                goHome={this.goHome}\n                currentTitre={this.state.currentTitre}\n                data={this.state.data}\n                checkCurrentCategory={this.checkCurrentCategory}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                largeur={this.state.largeur}\n                modalContentCourse={this.modalContentCourse}\n                showFormulaire={this.showFormulaire}\n                showForm={this.state.showForm}\n                handleScroll={this.handleScroll}\n                choixUserUid={this.state.choixUserUid}\n              />\n      case 'mesListes':\n      return <Home\n                listeDeBase={this.state.listeDeBase}\n                choixListe={this.choixListe}\n                addNewListTitre={this.addNewListTitre}\n                deleteList={this.deleteList}\n                loading={this.state.loading}\n                data={this.state.data}\n                returnToApp={this.returnToApp}\n                clicked={this.state.clicked}\n                indexItem={this.state.indexItem}\n                help={this.state.help}\n\n                changeItem={this.changeItem}\n                itemIsChanged={this.state.itemIsChanged}\n                handleChangeItem={this.handleChangeItem}\n                valideChangeItem={this.valideChangeItem}\n                itemSelected={this.state.itemSelected}\n                delete={this.delete}\n                toggleComment={this.toggleComment}\n                addComment={this.addComment}\n                titreListe={this.state.titreListe}\n                createNewItem={this.createNewItem}\n                goHome={this.goHome}\n                createNewCategory={this.createNewCategory}\n                isCategory={this.state.isCategory}\n                currentCategory={this.state.currentCategory}\n                numChildCategory={this.state.numChildCategory}\n                deleteCategory={this.deleteCategory}\n                currentTitre={this.state.currentTitre}\n                isToggleSwitchType={this.state.isToggleSwitchType}\n                inverseProduit={this.state.inverseProduit}\n                visible={this.state.visible}\n                onClose={this.onClose}\n                item={this.state.item}\n                modalContent={this.modalContent}\n                largeur={this.state.largeur}\n                itemIsVisible={this.state.itemIsVisible}\n                itemVisible={this.itemVisible}\n                handleScroll={this.handleScroll}\n                showForm={this.state.showForm}\n                showFormulaire={this.showFormulaire}\n                categoryVisible={this.categoryVisible}\n                categoryIsVisible={this.state.categoryIsVisible}\n                reloadList={this.reloadList}\n                confirmDelete={this.confirmDelete}\n                cancel={this.cancel}\n                changeLocked={this.changeLocked}\n                choixUserUid={this.state.choixUserUid}\n                inputOpen={this.state.inputOpen}\n                openInput={this.openInput}\n                checkCurrentCategory={this.checkCurrentCategory}\n                loadListExemple={this.loadListExemple}\n              />\n      case 'monProfil':\n      return <ProfilUser\n              returnToApp={this.returnToApp}\n              user={this.state.userId}\n              toggleSwitchHelp={this.toggleSwitchHelp}\n              help={this.state.help}\n              toggleSwitchInverseProduit={this.toggleSwitchInverseProduit}\n              inverseProduit={this.state.inverseProduit}\n              userUid={this.state.userUid}\n              changeUserUid={this.changeUserUid}\n              valideChangeUserUid={this.valideChangeUserUid}\n              newUserUid={this.state.newUserUid}\n              choixUserUid={this.state.choixUserUid}\n              choisirUserUid={this.choisirUserUid}\n              linkName={this.state.linkName}\n              followWindow={this.state.followWindow}\n              toggleSwitchFollowWindow={this.toggleSwitchFollowWindow}\n              deconnexion={this.deconnexion}\n              />\n      default:\n      return null\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14}} lg={{ span: 10 }} id='connexion'>\n            <h1>Check-Course</h1>\n            <p>Veuillez vous connecter svp:</p>\n            <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n          </Col>\n        </Row>\n      );\n    }\n    if(this.state.loading) {\n      return (\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={{ span: 16 }} md={{ span: 14 }} lg={{ span: 10}} id='load'>\n            <Loading/>\n            <h3>Chargement du caddie</h3>\n          </Col>\n        </Row>\n      )\n    }\n    \n    return (\n        <Row type=\"flex\" justify=\"space-around\" id='main'>\n          <Col xs={{ span: 24 }} md={{ span: 22 }} lg={{ span: 20 }} id='mainCol' >\n          <Layout>\n            <Header \n              style={{ \n                padding : this.state.largeur >= 480 ? '0 50px' : '0'\n              }}>\n              <Col xs={0} lg={4}>\n                {\n                  this.state.largeur >= 480 ? \n                  <h4><Icon type=\"shopping-cart\" />Check-Course</h4>\n                  :\n                  null\n                }\n              </Col>\n              <Col xs={24} lg={20} \n                style={{\n                  textAlign : this.state.largeur >= 480 ? 'right' : 'center',\n                  fontSize : this.state.largeur >= 480 ? '0.9em' : '0.7em'\n                }}\n              >\n                  <HeaderMenu\n                    handleClick={this.handleClick}\n                    choixComponent={this.choixComponent}\n                    choixComponentState={this.state.choixComponent}\n                  />\n              </Col>\n            </Header>\n          <Content>\n            \n            {\n              this.state.choixComponent === 'menu' ?\n              <>\n                <Col span={24} id={this.state.largeur >= 480 ? 'bckLogo' : 'bckLogo2'}>\n                  <Icon type=\"shopping-cart\" />\n                  <h2>CHECK-COURSE</h2>\n                </Col>\n                <Menu\n                  choixComponent={this.choixComponent}\n                  user={this.state.userId}\n                  hideText={this.hideText}\n                  clickedText={this.state.clickedText}\n                  help={this.state.help}\n                />\n                {\n                // Ligne a mettre en commentaire quand pas utilisé\n                // this.adminAddList() // envoie une liste d'exemple dans la bdd\n                // Ligne a mettre en commentaire quand pas utilisé\n                }\n              </>\n              :\n              this.renderChoiseConponent()\n            }\n            </Content>\n              <Footer>\n                <p>Created By Mikael</p>\n              </Footer>\n            </Layout>\n            </Col>\n          </Row>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { LocaleProvider } from 'antd';\nimport fr_FR from 'antd/lib/locale-provider/fr_FR';\n\nReactDOM.render(\n    <LocaleProvider locale={fr_FR}>\n        <App />\n    </LocaleProvider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}